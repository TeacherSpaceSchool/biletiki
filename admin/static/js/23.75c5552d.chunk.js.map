{"version":3,"sources":["pages/Detection.js"],"names":["width","mainWindow","current","offsetWidth","withStyles","theme","button","margin","spacing","unit","textFieldSmall","marginLeft","marginRight","textField","urls","maxHeight","overflow","image","maxWidth","message","marginTop","marginBottom","connect","state","table","user","dispatch","tableActions","bindActionCreators","props","classes","useEffect","Object","C_projects_biletiki_biletiki_admin_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","C_projects_biletiki_biletiki_admin_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","wrap","_context","prev","next","t0","setCities","getDataSimple","name","t1","sent","stop","this","_useState","useState","_useState2","C_projects_biletiki_biletiki_admin_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","cities","_useState3","_useState4","city","setCity","_useState5","_useState6","events","setEvents","_useState7","descriptionRu","where","date","_useState8","_event","_setEvent","handleCity","_ref2","_callee2","event","_context2","target","value","data","handleEvent","_x","apply","arguments","_ref3","_callee3","_context3","Array","isArray","undefined","split","_x2","_useState9","_useState10","breakTickets","setBreakTickets","_useState11","_useState12","type","setType","handleType","_ref4","_callee4","_context4","_x3","types","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_9___default","select","SelectProps","MenuProps","className","menu","label","onChange","map","option","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_10___default","key","_id","nameRu","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_11___default","variant","color","onClick","_callee5","_context5","length","alert","idx","Fragment","date_buy","timeCarry","seat","row","sector","price","status"],"mappings":"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","file":"static/js/23.75c5552d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { getDataSimple, addDataSimple } from '../redux/actions/table'\nimport { getWhere } from '../component/Where/index'\nimport * as tableActions from '../redux/actions/table'\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom'\nimport { mainWindow } from '../App'\nconst width = mainWindow.current.offsetWidth>800? 500: 240;\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit,\n    },\n    textFieldSmall: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: width,\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: width\n    },\n    urls: {\n        margin: theme.spacing.unit,\n        width: width,\n        maxHeight: 100,\n        overflow: 'auto'\n    },\n    image: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        maxWidth: 500,\n        maxHeight: 500\n    },\n    message: {\n        width: width,\n        marginTop: theme.spacing.unit,\n        marginBottom: theme.spacing.unit,\n        marginLeft: 'calc((100% - '+width+'px)/2)',\n        marginRight: 'calc((100% - '+width+'px)/2)'\n    },\n});\n\nconst Cashbox = (\n    (props) =>{\n        const { classes } = props;\n        useEffect(()=>{(async()=>{\n            /*if (!(status.status==='active'&&['admin', 'manager', 'cashier', 'organizator'].includes(status.role))) {\n                props.history.push('/')\n            }*/\n            await setCities(await getDataSimple({name: 'Города'}));\n        })()},[])\n        let [cities, setCities] = useState([]);\n        let [city, setCity] = useState('');\n        let [events, setEvents] = useState([]);\n        let [_event, _setEvent] = useState({descriptionRu: '', where: {}, date: []});\n        let handleCity = async(event) => {\n            setCity(event.target.value)\n            setEvents(await getDataSimple({name: 'СобытиеГородВсе', data: {city: event.target.value}}));\n            handleEvent({target: {value: {descriptionRu: '', where: {}, date: []}}})\n        };\n        let handleEvent = async(event) => {\n            let _event = event.target.value;\n            if(!Array.isArray(_event.descriptionRu)&&_event.descriptionRu!==undefined)\n                _event.descriptionRu = _event.descriptionRu.split('|');\n            await _setEvent(_event)\n        };\n        let [breakTickets, setBreakTickets] = useState([]);\n        let [type, setType] = useState('');\n        let handleType = async(event) => {\n            setBreakTickets([])\n            setType(event.target.value)\n        };\n        const types = ['повторяющиеся билеты',  'слетевшие билеты'];\n        return (\n            <div>\n                <TextField\n                    select\n                    SelectProps={{\n                        MenuProps: {\n                            className: classes.menu,\n                        },\n                    }}\n                    label='город'\n                    type='login'\n                    className={classes.textField}\n                    margin='normal'\n                    value={city}\n                    onChange={handleCity}\n                >\n                    {cities != undefined?\n                        cities.map(option => (\n                            <MenuItem key={option} value={option}>\n                                {option}\n                                </MenuItem>\n                        ))\n                        :\n                        null\n                    }\n                </TextField>\n                <br/>\n                <TextField\n                    select\n                    SelectProps={{\n                        MenuProps: {\n                            className: classes.menu,\n                        },\n                    }}\n                    label='событие'\n                    type='login'\n                    className={classes.textField}\n                    margin='normal'\n                    value={_event}\n                    onChange={handleEvent}\n                >\n                    {events != undefined?\n                        events.map(option => {\n                            return (<MenuItem key={option._id} value={option}>\n                                {option.nameRu}\n                            </MenuItem>)\n                        })\n                        :\n                        null\n                    }\n                </TextField>\n                <br/>\n                <TextField\n                    select\n                    SelectProps={{\n                        MenuProps: {\n                            className: classes.menu,\n                        },\n                    }}\n                    label='тип'\n                    type='login'\n                    className={classes.textField}\n                    margin='normal'\n                    value={type}\n                    onChange={handleType}\n                >\n                    {types!= undefined?\n                        types.map(option => {\n                            return (<MenuItem key={option} value={option}>\n                                {option}\n                            </MenuItem>)\n                        })\n                        :\n                        null\n                    }\n                </TextField>\n                <br/>\n                <Button variant='contained' color='secondary' className={classes.button} onClick={async()=>{\n                    let data = await getDataSimple({name: 'Выявление', data: {type: type, event: _event.nameRu}})\n                    setBreakTickets(data)\n                    if(data.length===0)\n                        alert('Проблем не выявлено!!!')\n                }}>\n                    Выявить\n                </Button>\n                <br/>\n                <br/>\n                <div className={classes.message}>\n                    <b>количество:&nbsp;</b>{breakTickets.length}\n                </div>\n                <br/>\n                {breakTickets != undefined?\n                    breakTickets.map((option, idx) => {\n                        return(\n                            <>\n                            <div className={classes.message} key={idx}>\n                                <b>_id:&nbsp;</b>{option._id}<br/>\n                                <b>время покупки:&nbsp;</b>{option.date_buy}<br/>\n                                <b>время проведения:&nbsp;</b>{option.timeCarry}<br/>\n                                <b>место:&nbsp;</b>{option.seat}&nbsp;&nbsp;\n                                <b>ряд:&nbsp;</b>{option.row}&nbsp;&nbsp;\n                                <b>сектор:&nbsp;</b>{option.sector}&nbsp;&nbsp;\n                                <b>цена:&nbsp;</b>{option.price}<br/>\n                                <b>статус:&nbsp;</b>{option.status}\n                            </div>\n                            {\n                                type == 'слетевшие билеты'||breakTickets[idx+1]===undefined||(option.seat==breakTickets[idx+1].seat&&option.row==breakTickets[idx+1].row&&option.sector==breakTickets[idx+1].sector&&option.timeCarry==breakTickets[idx+1].timeCarry&&option.price==breakTickets[idx+1].price)?\n                                    null\n                                    :\n                                    <>\n                                    <hr />\n                                    <br/>\n                                    </>\n                            }\n                            <br/>\n                            </>\n                        )\n                    })\n                    :\n                    null\n                }\n            </div>\n        );\n  })\n\nfunction mapStateToProps (state) {\n    return {\n        table: state.table,\n        user: state.user,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        tableActions: bindActionCreators(tableActions, dispatch),\n    }\n}\n\nCashbox.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Cashbox));\n"],"sourceRoot":""}