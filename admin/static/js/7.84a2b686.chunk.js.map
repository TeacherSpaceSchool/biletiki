{"version":3,"sources":["redux/actions/table.js","component/Add/About.js","component/Add/Email.js","component/Add/Ticket.js","component/Add/Contact.js","component/Add/Ads.js","component/Add/Faq.js","component/Add/Logo.js","component/Add/Personal.js","component/Add/Phone.js","component/Add/Social.js","component/Add/Vacancy.js","component/Add/Where.js","component/Add/User.js","component/Add/Billboard.js","component/Add/Cinema.js","component/Add/Mailing.js","component/Add/Hall.js","component/Add/TicketCinema.js","component/Add/Balance.js","component/Add/Cashbox.js","component/Add/Payment.js","redux/actions/mini_dialog.js"],"names":["setData","payload","_ref","Object","C_projects_biletiki_biletiki_admin_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_projects_biletiki_biletiki_admin_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","dispatch","data","_headers","i","res","row","_i","data1","_i2","data2","i1","data3","wrap","_context","prev","next","FormData","append","id","search","sort","JSON","stringify","page","name","undefined","oldFile","oldFileWhatermark","file","length","accept","Accept-Language","Content-Type","concat","_boundary","X-Requested-With","Authorization","localStorage","userBiletikiAdmin","axios","post","headers","sent","push","options","filter","substring","count","type","GET_DATA","t0","console","log","stop","this","_x","apply","arguments","addData","_ref2","_callee2","_i3","_i4","_context2","SHOW_LOAD","_x2","setSelected","SET_SELECTED","getIds","_ref3","_callee3","_context3","GET_IDS","_x3","getData","_ref4","_callee4","_context4","_x4","getDataSimple","_ref5","_callee5","_context5","abrupt","_x5","addDataSimple","_ref6","_callee6","_context6","_x6","deleteData","_ref7","_callee7","_i5","_context7","deleted","_x7","width","mainWindow","current","offsetWidth","Sign","React","memo","props","showMiniDialog","mini_dialogActions","_props$tableActions","tableActions","_props$table","table","selected","_useState","useState","_useState2","slicedToArray","descriptionRu","setDescriptionRu","_useState3","_useState4","descriptionKg","setDescriptionKg","classes","react_default","createElement","className","urls","TextField_default","multiline","rowsMax","label","textField","margin","value","onChange","event","target","Button_default","variant","color","onClick","button","withStyles","theme","spacing","unit","marginLeft","marginRight","maxHeight","overflow","error_message","marginTop","marginBottom","fontWeight","connect","state","mini_dialog","bindActionCreators","email","setEmail","ticket","hash","user","where","status","setStatus","statuses","parse","text_message","select","SelectProps","MenuProps","menu","map","option","MenuItem_default","key","wordWrap","coords","setСoords","cashbox","setСashbox","_useState5","_useState6","address","setAddress","_useState7","_useState8","booking","setBooking","_useState9","_useState10","connection","setConnection","_useState11","_useState12","return1","setReturn1","_useState13","_useState14","general","setGeneral","_useState15","_useState16","cooperation","setCooperation","dateStart1","types","setType","setName","link","setLink","replace","dateEnd1","dateStart","setDateStart","dateEnd","setDateEnd","setFile","fileNames","setFileNames","htmlFor","component","style","display","files","questionRu","setQuestionRu","answerRu","setAnswerRu","questionKg","setQuestionKg","answerKg","setAnswerKg","names","contact","setContact","whoRu","setWhoRu","whoKg","setWhoKg","phone","setPhone","url","nameRu","setNameRu","requirementsRu","setRequirementsRu","dutiesRu","setDutiesRu","conditionsRu","setConditionsRu","nameKg","setNameKg","requirementsKg","setRequirementsKg","dutiesKg","setDutiesKg","conditionsKg","setConditionsKg","city","setCity","setCoords","surname","setSurame","phonenumber","setPhonenumber","roles","role","setRole","password","setPassword","Fragment","useEffect","asyncToGenerator","regenerator_default","setEvents","t1","events","split","setEvent","part1","part2","_id","genre","setGenre","duration","setDuration","ageCategory","setAgeCategory","premier","setPremier","producers","setPoducers","actors","setActors","_useState17","_useState18","description","setDescription","_useState19","_useState20","_useState21","_useState22","mailuser","setMailuser","mailpass","setMailpass","mailchimpInstance","setMailchimpInstance","listUniqueId","setListUniqueId","mailchimpApiKey","setMailchimpApiKey","setUsers","setUser","users","movie","cinema","hall","seats","priceSelect","date","balance","setBalance","wallet","geo","setGeo","service","sum","meta","sms","setMiniDialog","title","child","SET_MINI_DIALOG","showAddMiniDialog","store","getState","Mailing","TicketCinema","About","Ticket","Cinema","Email","Where","Vacancy","Ads","Contact","Faq","Logo","Personal","Phone","Social","User","Billboard","Hall","Balance","Cashbox","Payment","SHOW_MINI_DIALOG","show"],"mappings":"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","file":"static/js/7.84a2b686.chunk.js","sourcesContent":["import {\r\n    GET_DATA,\r\n    GET_IDS,\r\n    SET_SELECTED,\r\n    SHOW_LOAD\r\n} from '../constants/table'\r\nimport axios from 'axios';\r\nimport FormData from 'form-data';\r\nimport {\r\n    store\r\n} from '../../index'\r\n\r\nexport function setData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = new FormData();\r\n            let _headers;\r\n            data.append('id', payload.id);\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            data.append('new', JSON.stringify(payload.data));\r\n            if(payload.oldFile != undefined){\r\n                data.append('oldFile', payload.oldFile);\r\n            }\r\n            if(payload.oldFileWhatermark != undefined){\r\n                data.append('oldFileWhatermark', payload.oldFileWhatermark);\r\n            }\r\n            if (payload.file != undefined) {\r\n                data.append('fileLength', payload.file.length);\r\n                for(let i=0; i<payload.file.length; i++){\r\n                    data.append('file'+i, payload.file[i]);\r\n                    data.append('fileName'+i, payload.file[i].name);\r\n                }\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization': 'Bearer ' + localStorage.userBiletikiAdmin,\r\n                }\r\n            } else {\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }\r\n            }\r\n            const res = await axios.post(\r\n                '/data/add',\r\n                data,\r\n                {headers: _headers});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name!='Произведение')\r\n                for(let i = 0; i<res.data.data.length; i++){\r\n                    let data2=[]\r\n                    for(let i1 = 0; i1<res.data.data[i].length; i1++){\r\n                        let data3 = res.data.data[i][i1]\r\n                        if(data3.length>200)\r\n                            data3 = data3.substring(0, 200)+'...'\r\n                        data2.push(data3)\r\n                    }\r\n                    data1.push(data2)\r\n                }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n        } catch(error) {\r\n            console.log(error)\r\n                    }\r\n    };\r\n}\r\n\r\nexport function addData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n\r\n            dispatch({\r\n                type: SHOW_LOAD,\r\n                payload: true\r\n            })\r\n            const data = new FormData();\r\n            let _headers;\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            data.append('new', JSON.stringify(payload.data));\r\n            if (payload.file != undefined) {\r\n                data.append('fileLength', payload.file.length);\r\n                for(let i=0; i<payload.file.length; i++){\r\n                    data.append('file'+i, payload.file[i]);\r\n                    data.append('fileName'+i, payload.file[i].name);\r\n                }\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization': 'Bearer ' + localStorage.userBiletikiAdmin\r\n                }\r\n            } else {\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }\r\n            }\r\n            const res = await axios.post(\r\n                '/data/add',\r\n                data,\r\n                {headers: _headers});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name!='Произведение')\r\n                for(let i = 0; i<res.data.data.length; i++){\r\n                    let data2=[]\r\n                    for(let i1 = 0; i1<res.data.data[i].length; i1++){\r\n                        let data3 = res.data.data[i][i1]\r\n                        if(data3.length>200)\r\n                            data3 = data3.substring(0, 200)+'...'\r\n                        data2.push(data3)\r\n                    }\r\n                    data1.push(data2)\r\n                }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n            dispatch({\r\n                type: SHOW_LOAD,\r\n                payload: false\r\n            })\r\n        } catch(error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n}\r\n\r\nexport function setSelected(payload) {\r\n    return {\r\n        type: SET_SELECTED,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport function getIds(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n\r\n            dispatch({\r\n                type: SHOW_LOAD,\r\n                payload: true\r\n            })\r\n            const data = new FormData();\r\n            data.append('name', payload);\r\n            const res = await axios.post(\r\n                '/data/getIds',\r\n                data,\r\n                {headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }});\r\n            dispatch({\r\n                type: GET_IDS,\r\n                payload: res.data\r\n            })\r\n\r\n            dispatch({\r\n                type: SHOW_LOAD,\r\n                payload: false\r\n            })\r\n        } catch(error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n}\r\n\r\nexport function getData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = new FormData();\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            const res = await axios.post(\r\n                '/data/get',\r\n                data,\r\n                {headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n        } catch(error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n}\r\n\r\nexport const getDataSimple = async (payload) => {\r\n    try {\r\n        console.log('gets')\r\n\r\n        const data = new FormData();\r\n        data.append('name', payload.name);\r\n        if(payload.data!==undefined)\r\n            data.append('data', JSON.stringify(payload.data));\r\n        const res = await axios.post(\r\n            '/data/get',\r\n            data,\r\n            {headers: {\r\n                'accept': 'application/json',\r\n                'Accept-Language': 'en-US,en;q=0.8',\r\n                'X-Requested-With': 'XMLHttpRequest',\r\n                'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n            }});\r\n\r\n        return res.data\r\n    } catch(error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const addDataSimple = async (payload) => {\r\n    try {\r\n        console.log('adds')\r\n\r\n        const data = new FormData();\r\n        data.append('name', payload.name);\r\n        data.append('new', JSON.stringify(payload.data));\r\n        const res = await axios.post(\r\n            '/data/add',\r\n            data,\r\n            {headers: {\r\n                'accept': 'application/json',\r\n                'Accept-Language': 'en-US,en;q=0.8',\r\n                'X-Requested-With': 'XMLHttpRequest',\r\n                'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n            }});\r\n        return res.data\r\n    } catch(error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport function deleteData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            console.log('del')\r\n\r\n            dispatch({\r\n                type: SHOW_LOAD,\r\n                payload: true\r\n            })\r\n            const data = new FormData();\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            data.append('deleted', payload.deleted);\r\n            if(payload.oldFile != undefined && payload.oldFile.length > 0){\r\n                data.append('oldFile', payload.oldFile);\r\n            }\r\n            const res = await axios.post(\r\n                '/data/delete',\r\n                data,\r\n                {headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name!=='Произведение')\r\n                for(let i = 0; i<res.data.data.length; i++){\r\n                    let data2=[]\r\n                    for(let i1 = 0; i1<res.data.data[i].length; i1++){\r\n                        let data3 = res.data.data[i][i1]\r\n                        if(data3.length>200)\r\n                            data3 = data3.substring(0, 200)+'...'\r\n                        data2.push(data3)\r\n                    }\r\n                    data1.push(data2)\r\n                }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n\r\n            dispatch({\r\n                type: SHOW_LOAD,\r\n                payload: false\r\n            })\r\n        } catch(error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n}","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [descriptionRu, setDescriptionRu] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleDescriptionRu =  (event) => {\r\n            setDescriptionRu(event.target.value)\r\n        };\r\n        let [descriptionKg, setDescriptionKg] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleDescriptionKg =  (event) => {\r\n            setDescriptionKg(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    multiline\r\n                    rowsMax='4'\r\n                    label='описание'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={descriptionRu}\r\n                    onChange={handleDescriptionRu}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    multiline\r\n                    rowsMax='4'\r\n                    label='баяндоо'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={descriptionKg}\r\n                    onChange={handleDescriptionKg}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'О нас', data: {descriptionRu: descriptionRu, descriptionKg: descriptionKg}});\r\n                        else\r\n                            setData({id: data[selected][3], search: '', sort: '', page: 0, name: 'О нас', data: {descriptionRu: descriptionRu, descriptionKg: descriptionKg}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [email, setEmail] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleEmail =  (event) => {\r\n            setEmail(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='email'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={email}\r\n                    onChange={handleEmail}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Email', data: {email: email}});\r\n                        else\r\n                            setData({id: data[selected][2], search: search, sort: sort, page: page, name: 'Email', data: {email: email}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    text_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        overflow: 'hidden',\r\n        wordWrap: 'break-word'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let ticket = selected!==-1?data[selected][0]:'';\r\n        let hash = selected!==-1?data[selected][1]:'';\r\n        let user = selected!==-1?data[selected][2]:'';\r\n        let event = selected!==-1?data[selected][3]:'';\r\n        let where = selected!==-1?data[selected][4]:'';\r\n        let [status, setStatus] = useState(selected!==-1?data[selected][5]:'');\r\n        let statuses = ['продан', 'возвращен', 'использован', 'отмена']\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let seats = selected!==-1?JSON.parse(data[selected][6]):'';\r\n\r\n        const { classes } = props;\r\n        return (\r\n            <div className={classes.text_message}>\r\n                <b>Билет</b>\r\n                <br/>\r\n                {ticket}\r\n                <br/>\r\n                <br/>\r\n                <b>Hash</b>\r\n                <br/>\r\n                {hash}\r\n                <br/>\r\n                <br/>\r\n                <b>Пользователь</b>\r\n                <br/>\r\n                {user}\r\n                <br/>\r\n                <br/>\r\n                <b>Мероприятие</b>\r\n                <br/>\r\n                {event}\r\n                <br/>\r\n                <br/>\r\n                <b>Площадка</b>\r\n                <br/>\r\n                {where}\r\n                <br/>\r\n                <br/>\r\n                {/*\r\n                <b>Места</b>\r\n                <br/>\r\n                {seats.length>0?\r\n                    seats.map(option => {\r\n                        return(\r\n                            <>\r\n                            {'Место: ' + option[0].name+' Цена: '+option[0].price+' Дата: '+option[1]}\r\n                            <br/>\r\n                            </>)\r\n                    }):null}\r\n                <br/>*/}\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Билеты', data: {status: status}});\r\n                        else\r\n                            setData({id: data[selected][data[selected].length-1], search: search, sort: sort, page: page, name: 'Билеты', data: {status: status}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [coords, setСoords] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleCoords =  (event) => {\r\n            setСoords(event.target.value)\r\n        };\r\n        let [cashbox, setСashbox] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleCashbox =  (event) => {\r\n            setСashbox(event.target.value)\r\n        };\r\n        let [address, setAddress] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleAddress =  (event) => {\r\n            setAddress(event.target.value)\r\n        };\r\n        let [booking, setBooking] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleBooking =  (event) => {\r\n            setBooking(event.target.value)\r\n        };\r\n        let [connection, setConnection] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleConnection =  (event) => {\r\n            setConnection(event.target.value)\r\n        };\r\n        let [return1, setReturn1] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleReturn1 =  (event) => {\r\n            setReturn1(event.target.value)\r\n        };\r\n        let [general, setGeneral] = useState(selected!==-1?data[selected][6]:'');\r\n        let handleGeneral =  (event) => {\r\n            setGeneral(event.target.value)\r\n        };\r\n        let [cooperation, setCooperation] = useState(selected!==-1?data[selected][7]:'');\r\n        let handleCooperation =  (event) => {\r\n            setCooperation(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='координаты'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={coords}\r\n                    onChange={handleCoords}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='касса'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={cashbox}\r\n                    onChange={handleCashbox}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='адрес'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={address}\r\n                    onChange={handleAddress}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='бронирование'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={booking}\r\n                    onChange={handleBooking}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='связь'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={connection}\r\n                    onChange={handleConnection}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='возврат'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={return1}\r\n                    onChange={handleReturn1}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='главная'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={general}\r\n                    onChange={handleGeneral}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='сотрудничество'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={cooperation}\r\n                    onChange={handleCooperation}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Контакт', data: {coords: coords, cashbox: cashbox, address: address, booking: booking, connection: connection, return1: return1, general: general, cooperation: cooperation}});\r\n                        else\r\n                            setData({id: data[selected][9], search: search, sort: sort, page: page, name: 'Контакт', data: {coords: coords, cashbox: cashbox, address: address, booking: booking, connection: connection, return1: return1, general: general, cooperation: cooperation}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let types = ['top', 'down']\r\n        let [type, setType] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleType =  (event) => {\r\n            setType(event.target.value)\r\n        };\r\n        let [name, setName] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [link, setLink] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleLink =  (event) => {\r\n            setLink(event.target.value)\r\n        };\r\n        let dateStart1;\r\n        if(selected!==-1) {\r\n            dateStart1 = data[selected][3].replace('.', '-').replace('.', '-').replace(' ', 'T')+':00';\r\n        }\r\n        let [dateStart, setDateStart] = useState(selected!==-1?dateStart1:'2019-01-01T00:00');\r\n        let handleDateStart =  (event) => {\r\n            setDateStart(event.target.value)\r\n        };\r\n        let dateEnd1;\r\n        if(selected!==-1){\r\n            dateEnd1 = data[selected][4].replace('.', '-').replace('.', '-').replace(' ', 'T')+':00';\r\n        }\r\n        let [dateEnd, setDateEnd] = useState(selected!==-1?dateEnd1:'2019-01-01T00:00');\r\n        let handleDateEnd =  (event) => {\r\n            setDateEnd(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ссылка'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={link}\r\n                    onChange={handleLink}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='дата начала'\r\n                    type='datetime-local'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dateStart}\r\n                    onChange={handleDateStart}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='дата окончания'\r\n                    type='datetime-local'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dateEnd}\r\n                    onChange={handleDateEnd}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='где'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={type}\r\n                    onChange={handleType}\r\n                >\r\n                    {types != undefined?\r\n                        types.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Реклама', file: file, data: {type: type, name: name, link: link, dateStart: dateStart, dateEnd: dateEnd}});\r\n                        else\r\n                            setData({id: data[selected][7], search: search, sort: sort, page: page, name: 'Реклама', oldFile: data[selected][0], file: file, data: {type: type, name: name, link: link, dateStart: dateStart, dateEnd: dateEnd}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [questionRu, setQuestionRu] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleQuestionRu =  (event) => {\r\n            setQuestionRu(event.target.value)\r\n        };\r\n        let [answerRu, setAnswerRu] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleAnswerRu =  (event) => {\r\n            setAnswerRu(event.target.value)\r\n        };\r\n        let [questionKg, setQuestionKg] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleQuestionKg =  (event) => {\r\n            setQuestionKg(event.target.value)\r\n        };\r\n        let [answerKg, setAnswerKg] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleAnswerKg =  (event) => {\r\n            setAnswerKg(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='вопрос'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={questionRu}\r\n                    onChange={handleQuestionRu}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ответ'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={answerRu}\r\n                    onChange={handleAnswerRu}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='суроо'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={questionKg}\r\n                    onChange={handleQuestionKg}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='жооп'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={answerKg}\r\n                    onChange={handleAnswerKg}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'FAQ', data: { questionRu: questionRu, answerRu: answerRu, questionKg: questionKg, answerKg: answerKg}});\r\n                        else\r\n                            setData({id: data[selected][5], search: search, sort: sort, page: page, name: 'FAQ', data: { questionRu: questionRu, answerRu: answerRu, questionKg: questionKg, answerKg: answerKg}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        const names = ['vertical', 'square', 'horizontal', 'main', 'mainKG']\r\n        let [name, setName] = useState(selected!==-1?data[selected][1]:'main');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                >\r\n                    {names != undefined?\r\n                        names.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Логотип', file: file, data: {name: name}});\r\n                        else\r\n                            setData({id: data[selected][3], search: search, sort: sort, page: page, name: 'Логотип', oldFile: data[selected][0], file: file, data: {name: name}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [contact, setContact] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleContact =  (event) => {\r\n            setContact(event.target.value)\r\n        };\r\n        let [whoRu, setWhoRu] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleWhoRu =  (event) => {\r\n            setWhoRu(event.target.value)\r\n        };\r\n        let [whoKg, setWhoKg] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleWhoKg =  (event) => {\r\n            setWhoKg(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='контакты'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={contact}\r\n                    onChange={handleContact}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='кто'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={whoRu}\r\n                    onChange={handleWhoRu}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ким'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={whoKg}\r\n                    onChange={handleWhoKg}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Персонал', data: { contact: contact, whoRu: whoRu, whoKg: whoKg}});\r\n                        else\r\n                            setData({id: data[selected][4], search: search, sort: sort, page: page, name: 'Персонал', data: { contact: contact, whoRu: whoRu, whoKg: whoKg}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [phone, setPhone] = useState(selected!==-1?data[selected][0]:'');\r\n        let handlePhone =  (event) => {\r\n            setPhone(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='телефон'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={phone}\r\n                    onChange={handlePhone}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Телефон', data: {phone: phone}});\r\n                        else\r\n                            setData({id: data[selected][2], search: search, sort: sort, page: page, name: 'Телефон', data: {phone: phone}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [name, setName] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [link, setLink] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleLink =  (event) => {\r\n            setLink(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ссылка'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={link}\r\n                    onChange={handleLink}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Социалки', file: file, data: {name: name, url: link}});\r\n                        else\r\n                            setData({id: data[selected][4], search: search, sort: sort, page: page, name: 'Социалки', oldFile: data[selected][0], file: file, data: {name: name, url: link}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [nameRu, setNameRu] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleNameRu =  (event) => {\r\n            setNameRu(event.target.value)\r\n        };\r\n        let [requirementsRu, setRequirementsRu] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleRequirementsRu =  (event) => {\r\n            setRequirementsRu(event.target.value)\r\n        };\r\n        let [dutiesRu, setDutiesRu] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleDutiesRu =  (event) => {\r\n            setDutiesRu(event.target.value)\r\n        };\r\n        let [conditionsRu, setConditionsRu] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleConditionsRu =  (event) => {\r\n            setConditionsRu(event.target.value)\r\n        };\r\n        let [nameKg, setNameKg] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleNameKg =  (event) => {\r\n            setNameKg(event.target.value)\r\n        };\r\n        let [requirementsKg, setRequirementsKg] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleRequirementsKg =  (event) => {\r\n            setRequirementsKg(event.target.value)\r\n        };\r\n        let [dutiesKg, setDutiesKg] = useState(selected!==-1?data[selected][6]:'');\r\n        let handleDutiesKg =  (event) => {\r\n            setDutiesKg(event.target.value)\r\n        };\r\n        let [conditionsKg, setConditionsKg] = useState(selected!==-1?data[selected][7]:'');\r\n        let handleConditionsKg =  (event) => {\r\n            setConditionsKg(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='название'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={nameRu}\r\n                    onChange={handleNameRu}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='обязанности'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={requirementsRu}\r\n                    onChange={handleRequirementsRu}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='требования'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dutiesRu}\r\n                    onChange={handleDutiesRu}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='условия'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={conditionsRu}\r\n                    onChange={handleConditionsRu}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ысым'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={nameKg}\r\n                    onChange={handleNameKg}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='милдеттери'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={requirementsKg}\r\n                    onChange={handleRequirementsKg}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='талаптар'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dutiesKg}\r\n                    onChange={handleDutiesKg}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='шарттары'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={conditionsKg}\r\n                    onChange={handleConditionsKg}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Вакансии', data: {nameRu: nameRu, requirementsRu: requirementsRu, dutiesRu: dutiesRu, conditionsRu: conditionsRu, nameKg: nameKg, requirementsKg: requirementsKg, dutiesKg: dutiesKg,  conditionsKg: conditionsKg}});\r\n                        else\r\n                            setData({id: data[selected][9], search: search, sort: sort, page: page, name: 'Вакансии', data: {nameRu: nameRu, requirementsRu: requirementsRu, dutiesRu: dutiesRu, conditionsRu: conditionsRu, nameKg: nameKg, requirementsKg: requirementsKg, dutiesKg: dutiesKg,  conditionsKg: conditionsKg}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [nameRu, setNameRu] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleNameRu =  (event) => {\r\n            setNameRu(event.target.value)\r\n        };\r\n        let [nameKg, setNameKg] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleNameKg =  (event) => {\r\n            setNameKg(event.target.value)\r\n        };\r\n        let [address, setAddress] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleAddress = (event) => {\r\n            setAddress(event.target.value)\r\n        };\r\n        let [city, setCity] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleCity = (event) => {\r\n            setCity(event.target.value)\r\n        };\r\n        let [coords, setCoords] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleCoords =  (event) => {\r\n            setCoords(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='название'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={nameRu}\r\n                    onChange={handleNameRu}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ысым'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={nameKg}\r\n                    onChange={handleNameKg}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='адрес'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={address}\r\n                    onChange={handleAddress}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='город'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={city}\r\n                    onChange={handleCity}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='координаты'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={coords}\r\n                    onChange={handleCoords}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Площадка', file: file, data: {city: city, nameRu: nameRu, nameKg: nameKg, address: address, coords: coords}});\r\n                        else\r\n                            setData({id: data[selected][7], search: search, sort: sort, page: page, name: 'Площадка', oldFile: data[selected][0], file: file, data: {city: city, nameRu: nameRu, nameKg: nameKg, address: address, coords: coords}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    text_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        overflow: 'hidden',\r\n        wordWrap: 'break-word'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [surname, setSurame] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleSurname =  (event) => {\r\n            setSurame(event.target.value)\r\n        };\r\n        let [email, setEmail] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleEmail =  (event) => {\r\n            setEmail(event.target.value)\r\n        };\r\n        let [phonenumber, setPhonenumber] = useState(selected!==-1?data[selected][3]:'');\r\n        let handlePhonenumber = (event) => {\r\n            setPhonenumber(event.target.value)\r\n        };\r\n        let roles = ['manager', 'accountant', 'cashier', 'client', 'cinema', 'turnstile', 'organizator']\r\n        let [role, setRole] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleRole = (event) => {\r\n            setRole(event.target.value)\r\n        };\r\n        let statuses = ['active', 'inactive']\r\n        let [status, setStatus] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let [password, setPassword] = useState('');\r\n        let handlePassword =  (event) => {\r\n            setPassword(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='фамилия'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={surname}\r\n                    onChange={handleSurname}\r\n                />\r\n                <br/>\r\n                {selected!==-1?\r\n                    <>\r\n                    <br/>\r\n                    <div className={classes.textField}>\r\n                        <b>email:</b> {email}\r\n                    </div>\r\n                    <br/>\r\n                    </>\r\n                    :\r\n                    <>\r\n                    <TextField\r\n                        label='email'\r\n                        type='login'\r\n                        className={classes.textField}\r\n                        margin='normal'\r\n                        value={email}\r\n                        onChange={handleEmail}\r\n                    />\r\n                    <br/>\r\n                    </>\r\n                }\r\n                <TextField\r\n                    label='телефон'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={phonenumber}\r\n                    onChange={handlePhonenumber}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='роль'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={role}\r\n                    onChange={handleRole}\r\n                >\r\n                    {roles != undefined?\r\n                        roles.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <br/>\r\n                    <TextField\r\n                        label='пароль'\r\n                        type='login'\r\n                        className={classes.textField}\r\n                        margin='normal'\r\n                        value={password}\r\n                        onChange={handlePassword}\r\n                    />\r\n                    <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Пользователи', data: {email: email, name: name, surname: surname, phonenumber: phonenumber, role: role, password: password, status: status}});\r\n                        else\r\n                            setData({id: data[selected][7], search: search, sort: sort, page: page, name: 'Пользователи', data: {email: email, name: name, surname: surname, phonenumber: phonenumber, role: role,  password: password, status: status}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { getDataSimple } from '../../redux/actions/table'\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        useEffect(()=>{(async()=>{\r\n            await setEvents(await getDataSimple({name: 'СобытиеID'}));\r\n        })()},[])\r\n        let [events, setEvents] = useState([]);\r\n        let [event, setEvent] = useState(selected!==-1?data[selected][2].split('\\n')[1]:'');\r\n        let handleEvent =  (event) => {\r\n            setEvent(event.target.value)\r\n        };\r\n        let [name, setName] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let dateStart1;\r\n        if(selected!==-1) {\r\n            dateStart1 = {part1: data[selected][3].split(' ')};\r\n            dateStart1.part2 = dateStart1.part1[1];\r\n            dateStart1.part1 = dateStart1.part1[0].split('.');\r\n            dateStart1 =  dateStart1.part1[0]+'-'+dateStart1.part1[2]+'-'+dateStart1.part1[1]+'T'+dateStart1.part2+':00';\r\n        }\r\n        let [dateStart, setDateStart] = useState(selected!==-1?dateStart1:'2019-01-01T00:00');\r\n        let handleDateStart =  (event) => {\r\n            setDateStart(event.target.value)\r\n        };\r\n        let dateEnd1;\r\n        if(selected!==-1){\r\n            dateEnd1 = {part1: data[selected][4].split(' ')};\r\n            dateEnd1.part2 = dateEnd1.part1[1];\r\n            dateEnd1.part1 = dateEnd1.part1[0].split('.');\r\n            dateEnd1 =  dateEnd1.part1[0]+'-'+dateEnd1.part1[2]+'-'+dateEnd1.part1[1]+'T'+dateEnd1.part2+':00';\r\n        }\r\n        console.log(dateEnd1, dateStart1)\r\n        let [dateEnd, setDateEnd] = useState(selected!==-1?dateEnd1:'2019-01-01T00:00');\r\n        let handleDateEnd =  (event) => {\r\n            setDateEnd(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='событие'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={event}\r\n                    onChange={handleEvent}\r\n                >\r\n                    {events != undefined?\r\n                        events.map(option => {\r\n                            return(\r\n                            <MenuItem key={option._id} value={option._id}>\r\n                                {option.nameRu}\r\n                            </MenuItem>)\r\n                        })\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='дата начала'\r\n                    type='datetime-local'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dateStart}\r\n                    onChange={handleDateStart}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='дата окончания'\r\n                    type='datetime-local'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dateEnd}\r\n                    onChange={handleDateEnd}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Биллборды', file: file, data: {name: name, dateStart: dateStart, dateEnd: dateEnd, event: event}});\r\n                        else\r\n                            setData({id: data[selected][6], search: search, sort: sort, page: page, name: 'Биллборды', oldFile: data[selected][0], file: file, data: {name: name, dateStart: dateStart, dateEnd: dateEnd, event: event}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [name, setName] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleName = (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [genre, setGenre] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleGenre = (event) => {\r\n            setGenre(event.target.value)\r\n        };\r\n        let types = ['скоро', 'в прокате']\r\n        let [type, setType] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleType = (event) => {\r\n            setType(event.target.value)\r\n        };\r\n        let [duration, setDuration] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleDuration = (event) => {\r\n            setDuration(event.target.value)\r\n        };\r\n        let [ageCategory, setAgeCategory] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleAgeCategory = (event) => {\r\n            setAgeCategory(event.target.value)\r\n        };\r\n        let [premier, setPremier] = useState(selected!==-1?data[selected][6]:'');\r\n        let handlePremier = (event) => {\r\n            setPremier(event.target.value)\r\n        };\r\n        let [producers, setPoducers] = useState(selected!==-1?data[selected][7]:'');\r\n        let handleProducers = (event) => {\r\n            setPoducers(event.target.value)\r\n        };\r\n        let [actors, setActors] = useState(selected!==-1?data[selected][8]:'');\r\n        let handleActors = (event) => {\r\n            setActors(event.target.value)\r\n        };\r\n        let [description, setDescription] = useState(selected!==-1?data[selected][9]:'');\r\n        let handleDescription = (event) => {\r\n            setDescription(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='жанр'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={genre}\r\n                    onChange={handleGenre}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='тип'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={type}\r\n                    onChange={handleType}\r\n                >\r\n                    {types != undefined?\r\n                        types.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='продолжительность'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={duration}\r\n                    onChange={handleDuration}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='возраст'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={ageCategory}\r\n                    onChange={handleAgeCategory}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='премьера'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={premier}\r\n                    onChange={handlePremier}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='актеры'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={actors}\r\n                    onChange={handleActors}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='режиссеры'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={producers}\r\n                    onChange={handleProducers}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    multiline\r\n                    rowsMax='4'\r\n                    label='описание'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={description}\r\n                    onChange={handleDescription}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Кино', file: file, data: {name: name, genre: genre, type: type, description: description, duration: duration, ageCategory: ageCategory, premier: premier,  producers: producers, actors: actors}});\r\n                        else\r\n                            setData({id: data[selected][11], search: search, sort: sort, page: page, name: 'Кино', oldFile: data[selected][0], file: file, data: {name: name, genre: genre, type: type, description: description, duration: duration, ageCategory: ageCategory, premier: premier,  producers: producers, actors: actors}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [mailuser, setMailuser] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleMailuser =  (event) => {\r\n            setMailuser(event.target.value)\r\n        };\r\n        let [mailpass, setMailpass] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleMailpass =  (event) => {\r\n            setMailpass(event.target.value)\r\n        };\r\n        let [mailchimpInstance, setMailchimpInstance] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleMailchimpInstance =  (event) => {\r\n            setMailchimpInstance(event.target.value)\r\n        };\r\n        let [listUniqueId, setListUniqueId] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleListUniqueId =  (event) => {\r\n            setListUniqueId(event.target.value)\r\n        };\r\n        let [mailchimpApiKey, setMailchimpApiKey] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleMailchimpApiKey =  (event) => {\r\n            setMailchimpApiKey(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='mailuser'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={mailuser}\r\n                    onChange={handleMailuser}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='mailpass'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={mailpass}\r\n                    onChange={handleMailpass}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='mailchimpInstance'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={mailchimpInstance}\r\n                    onChange={handleMailchimpInstance}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='listUniqueId'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={listUniqueId}\r\n                    onChange={handleListUniqueId}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='mailchimpApiKey'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={mailchimpApiKey}\r\n                    onChange={handleMailchimpApiKey}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Рассылка', data: {mailuser: mailuser, mailpass: mailpass, mailchimpInstance: mailchimpInstance, listUniqueId: listUniqueId, mailchimpApiKey: mailchimpApiKey}});\r\n                        else\r\n                            setData({id: data[selected][6], search: search, sort: sort, page: page, name: 'Рассылка', data: {mailuser: mailuser, mailpass: mailpass, mailchimpInstance: mailchimpInstance, listUniqueId: listUniqueId, mailchimpApiKey: mailchimpApiKey}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { getDataSimple } from '../../redux/actions/table'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        useEffect(()=>{(async()=>{\r\n            await setUsers(await getDataSimple({name: 'Кинотеатры'}));\r\n        })()},[])\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [user, setUser] = useState(selected!==-1?data[selected][1].split('\\n')[1]:'');\r\n        let handleUser =  (event) => {\r\n            setUser(event.target.value)\r\n        };\r\n        let [users, setUsers] = useState([]);\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='название'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='кинотеатр'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={user}\r\n                    onChange={handleUser}\r\n                >\r\n                    {users != undefined?\r\n                        users.map(option => (\r\n                            <MenuItem key={option._id} value={option._id}>\r\n                                {option.name}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Залы', data: {name: name, user: user}});\r\n                        else\r\n                            setData({id: data[selected][3], search: search, sort: sort, page: page, name: 'Залы', data: {name: name, user: user}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    text_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        overflow: 'hidden',\r\n        wordWrap: 'break-word'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let ticket = selected!==-1?data[selected][0]:'';\r\n        let hash = selected!==-1?data[selected][1]:'';\r\n        let user = selected!==-1?data[selected][2]:'';\r\n        let movie = selected!==-1?data[selected][3]:'';\r\n        let cinema = selected!==-1?data[selected][4]:'';\r\n        let hall = selected!==-1?data[selected][5]:'';\r\n        let [status, setStatus] = useState(selected!==-1?data[selected][6]:'');\r\n        let statuses = ['продан', 'возвращен', 'использован']\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let seats = selected!==-1?JSON.parse(data[selected][7]):'';\r\n\r\n        const { classes } = props;\r\n        return (\r\n            <div className={classes.text_message}>\r\n                <b>Билет</b>\r\n                <br/>\r\n                {ticket}\r\n                <br/>\r\n                <br/>\r\n                <b>Hash</b>\r\n                <br/>\r\n                {hash}\r\n                <br/>\r\n                <br/>\r\n                <b>Пользователь</b>\r\n                <br/>\r\n                {user}\r\n                <br/>\r\n                <br/>\r\n                <b>Фильм</b>\r\n                <br/>\r\n                {movie}\r\n                <br/>\r\n                <br/>\r\n                <b>Кинотеатр</b>\r\n                <br/>\r\n                {cinema}\r\n                <br/>\r\n                <br/>\r\n                <b>Зал</b>\r\n                <br/>\r\n                {hall}\r\n                <br/>\r\n                <br/>\r\n                <b>Места</b>\r\n                <br/>\r\n                {seats.length>0?\r\n                    seats.map(option => {\r\n                        return(\r\n                            <>\r\n                            {'Место: ' + option.name+' Цена: '+option.priceSelect+' Дата: '+option.date}\r\n                            <br/>\r\n                            </>)\r\n                    }):null}\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Билеты кино', data: {status: status}});\r\n                        else\r\n                            setData({id: data[selected][9], search: search, sort: sort, page: page, name: 'Билеты кино', data: {status: status}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    text_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        overflow: 'hidden',\r\n        wordWrap: 'break-word'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [balance, setBalance] = useState(selected!==-1?data[selected][2]:'');\r\n        let user = selected!==-1?data[selected][0]:'';\r\n        let wallet = selected!==-1?data[selected][1]:'';\r\n        let handleBalance =  (event) => {\r\n            setBalance(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <div className={classes.textField}>\r\n                    <b>пользователь:</b> {user}\r\n                </div>\r\n                <br/>\r\n                <div className={classes.textField}>\r\n                    <b>кошелек:</b> {wallet}\r\n                </div>\r\n                <br/>\r\n                <TextField\r\n                    label='баланс'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={balance}\r\n                    onChange={handleBalance}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected!==-1)\r\n                            setData({id: data[selected][4], search: search, sort: sort, page: page, name: 'Баланс', data: {balance: balance}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [address, setAddress] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleAddress =  (event) => {\r\n            setAddress(event.target.value)\r\n        };\r\n        let [geo, setGeo] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleGeo =  (event) => {\r\n            setGeo(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='адрес'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={address}\r\n                    onChange={handleAddress}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='геолокация'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={geo}\r\n                    onChange={handleGeo}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Кассы', data: {geo: geo, name: name, address: address}});\r\n                        else\r\n                            setData({id: data[selected][4], search: search, sort: sort, page: page, name: 'Кассы', data: {geo: geo, name: name, address: address}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    text_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        overflow: 'hidden',\r\n        wordWrap: 'break-word'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let wallet = selected!==-1?data[selected][0]:'';\r\n        let ticket = selected!==-1?data[selected][1]:'';\r\n        let service = selected!==-1?data[selected][2]:'';\r\n        let sum = selected!==-1?data[selected][3]:'';\r\n        let meta = selected!==-1?data[selected][4]:'';\r\n        let [status, setStatus] = useState(selected!==-1?data[selected][5]:'');\r\n        let name = selected!==-1?data[selected][6]:'';\r\n        let email = selected!==-1?data[selected][7]:'';\r\n        let sms = selected!==-1?data[selected][8]:'';\r\n        let statuses = ['обработка', 'совершен', 'отменен', 'ошибка']\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n\r\n        const { classes } = props;\r\n        return (\r\n            <div className={classes.text_message}>\r\n                <b>Адрес</b>\r\n                <br/>\r\n                {wallet}\r\n                <br/>\r\n                <br/>\r\n                <b>Билет</b>\r\n                <br/>\r\n                {ticket}\r\n                <br/>\r\n                <br/>\r\n                <b>Сумма</b>\r\n                <br/>\r\n                {sum}\r\n                <br/>\r\n                <br/>\r\n                <b>Сервис</b>\r\n                <br/>\r\n                {service}\r\n                <br/>\r\n                <br/>\r\n                <b>Meta</b>\r\n                <br/>\r\n                {meta}\r\n                <br/>\r\n                <br/>\r\n                <b>Имя</b>\r\n                <br/>\r\n                {name}\r\n                <br/>\r\n                <br/>\r\n                <b>Email</b>\r\n                <br/>\r\n                {email}\r\n                <br/>\r\n                <br/>\r\n                <b>SMS</b>\r\n                <br/>\r\n                {sms}\r\n                <br/>\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Платежи', data: {status: status}});\r\n                        else\r\n                            setData({id: data[selected][10], search: search, sort: sort, page: page, name: 'Платежи', data: {status: status}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import { SET_MINI_DIALOG, SHOW_MINI_DIALOG } from '../constants/mini_dialog'\r\nimport React from 'react'\r\nimport {\r\n    store\r\n} from '../../index'\r\nimport About from '../../component/Add/About';\r\nimport Email from '../../component/Add/Email';\r\nimport Ticket from '../../component/Add/Ticket';\r\nimport Contact from '../../component/Add/Contact';\r\nimport Ads from '../../component/Add/Ads';\r\nimport Faq from '../../component/Add/Faq';\r\nimport Logo from '../../component/Add/Logo';\r\nimport Personal from '../../component/Add/Personal';\r\nimport Phone from '../../component/Add/Phone';\r\nimport Social from '../../component/Add/Social';\r\nimport Vacancy from '../../component/Add/Vacancy';\r\nimport Where from '../../component/Add/Where';\r\nimport User from '../../component/Add/User';\r\nimport Billboard from '../../component/Add/Billboard';\r\nimport Cinema from '../../component/Add/Cinema';\r\nimport Mailing from '../../component/Add/Mailing';\r\nimport Hall from '../../component/Add/Hall';\r\nimport TicketCinema from '../../component/Add/TicketCinema';\r\nimport Balance from '../../component/Add/Balance';\r\nimport Cashbox from '../../component/Add/Cashbox';\r\nimport Payment from '../../component/Add/Payment';\r\n\r\nexport function setMiniDialog(title,child) {\r\n    console.log('setMD')\r\n    return {\r\n        type: SET_MINI_DIALOG,\r\n        payload: {title: title, child: child}\r\n    }\r\n}\r\n\r\nexport function showAddMiniDialog() {\r\n    console.log('showadd')\r\n    return async (dispatch) => {\r\n        if(store.getState().table.name!=''){\r\n            let child;\r\n            if(store.getState().table.name=='Рассылка')\r\n                child = <Mailing/>\r\n            else if(store.getState().table.name=='Билеты кино')\r\n                child = <TicketCinema/>\r\n            else if(store.getState().table.name=='О нас')\r\n                child = <About/>\r\n            else if(store.getState().table.name=='Билеты')\r\n                child = <Ticket/>\r\n            else if(store.getState().table.name=='Кино')\r\n                child = <Cinema/>\r\n            else if(store.getState().table.name=='Email')\r\n                child = <Email/>\r\n            else if(store.getState().table.name=='Площадка')\r\n                child = <Where/>\r\n            else if(store.getState().table.name=='Вакансии')\r\n                child = <Vacancy/>\r\n            else if(store.getState().table.name=='Реклама')\r\n                child = <Ads/>\r\n            else if(store.getState().table.name=='Контакт')\r\n                child = <Contact/>\r\n            else if(store.getState().table.name=='FAQ')\r\n                child = <Faq/>\r\n            else if(store.getState().table.name=='Логотип')\r\n                child = <Logo/>\r\n            else if(store.getState().table.name=='Персонал')\r\n                child = <Personal/>\r\n            else if(store.getState().table.name=='Телефон')\r\n                child = <Phone/>\r\n            else if(store.getState().table.name=='Социалки')\r\n                child = <Social/>\r\n            else if(store.getState().table.name=='Пользователи')\r\n                child = <User/>\r\n            else if(store.getState().table.name=='Биллборды')\r\n                child = <Billboard/>\r\n            else if(store.getState().table.name=='Залы')\r\n                child = <Hall/>\r\n            else if(store.getState().table.name=='Баланс')\r\n                child = <Balance/>\r\n            else if(store.getState().table.name=='Кассы')\r\n                child = <Cashbox/>\r\n            else if(store.getState().table.name=='Платежи')\r\n                child = <Payment/>\r\n            dispatch ({\r\n                type: SET_MINI_DIALOG,\r\n                payload: {title: store.getState().table.name, child: child}\r\n            })\r\n            dispatch ({\r\n                type: SHOW_MINI_DIALOG,\r\n                payload: true\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function showMiniDialog(show) {\r\n    console.log('showmini')\r\n    return {\r\n        type: SHOW_MINI_DIALOG,\r\n        payload: show\r\n    }\r\n}\r\n"],"sourceRoot":""}