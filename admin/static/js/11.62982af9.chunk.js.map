{"version":3,"sources":["pages/Scanner.js","redux/actions/table.js"],"names":["width","mainWindow","current","offsetWidth","withStyles","theme","mainCam","display","justifyContent","button","margin","spacing","unit","textFieldSmall","marginLeft","marginRight","textField","urls","maxHeight","overflow","cam","maxWidth","message","marginTop","marginBottom","text_message","wordWrap","connect","state","table","user","dispatch","tableActions","bindActionCreators","props","useEffect","Object","C_projects_biletiki_biletiki_admin_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","C_projects_biletiki_biletiki_admin_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","wrap","_context","prev","next","status","includes","role","history","push","stop","this","_props$tableActions","setSelected","setData","classes","_useState","useState","_useState2","C_projects_biletiki_biletiki_admin_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","result","setResult","_useState3","_useState4","statusTicket","setStatusTicket","statusesTicket","handleScan","_ref2","_callee2","data","_context2","getDataSimple","name","hash","undefined","sent","_x","apply","arguments","_useState5","_useState6","cameraType","setCameraType","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","Fragment","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_8___default","select","SelectProps","MenuProps","className","menu","label","type","value","onChange","event","target","map","option","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_9___default","key","react_qr_reader__WEBPACK_IMPORTED_MODULE_11___default","facingMode","onError","err","console","log","onScan","style","fontWeight","href","ticket","email","_id","where","seats","length","price","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_10___default","variant","color","onClick","id","search","sort","page","payload","_ref","C_projects_biletiki_biletiki_admin_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_projects_biletiki_biletiki_admin_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_headers","i","res","row","_i","data1","_i2","data2","i1","data3","FormData","append","JSON","stringify","oldFile","oldFileWhatermark","file","accept","Accept-Language","Content-Type","concat","_boundary","X-Requested-With","Authorization","localStorage","userBiletikiAdmin","axios","post","headers","options","filter","substring","count","GET_DATA","t0","error","addData","_i3","_i4","_x2","SET_SELECTED","getIds","_ref3","_callee3","_context3","GET_IDS","_x3","getData","_ref4","_callee4","_i5","_context4","_x4","_ref5","_callee5","_context5","abrupt","_x5","deleteData","_ref6","_callee6","_i6","_context6","deleted","_x6"],"mappings":"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","file":"static/js/11.62982af9.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { getDataSimple } from '../redux/actions/table'\nimport * as tableActions from '../redux/actions/table'\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom'\nimport QrReader from 'react-qr-reader';\nimport { mainWindow } from '../App'\nconst width = mainWindow.current.offsetWidth>800? 500: 240;\n\nconst styles = theme => ({\n    mainCam: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    textFieldSmall: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: width,\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: width,\n    },\n    urls: {\n        margin: theme.spacing.unit,\n        width: width,\n        maxHeight: 100,\n        overflow: 'auto'\n    },\n    cam: {\n        width: '100%',\n        maxWidth: 500,\n        maxHeight: 500\n    },\n    message: {\n        width: width,\n        marginTop: theme.spacing.unit,\n        marginBottom: theme.spacing.unit,\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    text_message: {\n        width: width,\n        marginTop: theme.spacing.unit,\n        marginBottom: theme.spacing.unit,\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        overflow: 'hidden',\n        wordWrap: 'break-word'\n    },\n});\n\nconst Scanner = (\n    (props) =>{\n        useEffect(async()=>{\n            if (!(status.status==='active'&&['admin', 'manager', 'cashier'].includes(status.role))) {\n                props.history.push('/')\n            }\n        },[])\n        const { setSelected, setData } = props.tableActions;\n        const { status } = props.user;\n        const { classes } = props;\n        let [result, setResult] = useState(null);\n        let [statusTicket, setStatusTicket] = useState('');\n        let statusesTicket = ['зарезервирован', 'продан', 'возвращен', 'использован']\n        let handleStatusTicket =  (event) => {\n            setStatusTicket(event.target.value)\n        };\n        let handleScan = async (data) => {\n            if (data) {\n                data = await getDataSimple({name: 'БилетыHash', data: {hash: data}})\n                if(data!=undefined){\n                    setStatusTicket(data.status)\n                    setResult(data);\n                }\n            }\n        }\n        const cameraTypes = ['environment', 'user']\n        let [cameraType, setCameraType] = useState('environment');\n        let handleCameraType = (event) => {\n            setCameraType(event.target.value);\n        }\n        let handleError = (err) => {\n            console.log(err);\n        }\n        return (\n            <div>\n                {result===null?\n                    <>\n                    <br/>\n                    <b>Сканирование</b>\n                    <br/>\n                    <br/>\n                    <TextField\n                        select\n                        SelectProps={{\n                            MenuProps: {\n                                className: classes.menu,\n                            },\n                        }}\n                        label='тип камеры'\n                        type='login'\n                        className={classes.textField}\n                        margin='normal'\n                        value={cameraType}\n                        onChange={handleCameraType}\n                    >\n                        {cameraTypes.map(option => (\n                            <MenuItem key={option} value={option}>\n                                {option}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                    <br/>\n                    <div className={classes.mainCam}>\n                        <QrReader\n                            facingMode={cameraType}\n                            onError={handleError}\n                            onScan={handleScan}\n                            className={classes.cam}\n                        />\n                    </div>\n                    <br/>\n                    </>\n                    :\n                    <div className={classes.text_message}>\n                        <br/>\n                        <a style={{fontWeight: 'bold'}} href={result.ticket} target='_blank'>Билет</a>\n                        <br/>\n                        <br/>\n                        <b>Hash</b>\n                        <br/>\n                        {result.hash}\n                        <br/>\n                        <br/>\n                        <b>Пользователь</b>\n                        <br/>\n                        {'имя: '+result.user.name+'; email: '+result.user.email+'; id:'+result.user._id+';'}\n                        <br/>\n                        <br/>\n                        <b>Мероприятие</b>\n                        <br/>\n                        {result.event}\n                        <br/>\n                        <br/>\n                        <b>Площадка</b>\n                        <br/>\n                        {result.where}\n                        <br/>\n                        <br/>\n                        <b>Места</b>\n                        <br/>\n                        {result.seats.length>0?\n                            result.seats.map(option => {\n                                return(\n                                    <>\n                                    {'Место: ' + option[0].name+' Цена: '+option[0].price+' Дата: '+option[1]}\n                                    <br/>\n                                    </>)\n                            }):null}\n                        <br/>\n                        <TextField\n                            select\n                            SelectProps={{\n                                MenuProps: {\n                                    className: classes.menu,\n                                },\n                            }}\n                            label='статус'\n                            type='login'\n                            className={classes.textField}\n                            margin='normal'\n                            value={statusTicket}\n                            onChange={handleStatusTicket}\n                        >\n                            {statusesTicket != undefined?\n                                statusesTicket.map(option => (\n                                    <MenuItem key={option} value={option}>\n                                        {option}\n                                    </MenuItem>\n                                ))\n                                :\n                                null\n                            }\n                        </TextField>\n                        <br/>\n                        <div>\n                            <Button variant='contained' color='primary' onClick={()=>{\n                                setData({id: result._id, search: '', sort: '', page: 0, name: 'Билеты', data: {status: statusTicket}});\n                                setSelected(-1)\n                                setResult(null)\n                            }} className={classes.button}>\n                                Сохранить\n                            </Button>\n                            <Button variant='contained' color='secondary' className={classes.button} onClick={()=>{setResult(null)}}>\n                                Заново\n                            </Button>\n                        </div>\n                    </div>\n                }\n            </div>\n        );\n  })\n\nfunction mapStateToProps (state) {\n    return {\n        table: state.table,\n        user: state.user,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        tableActions: bindActionCreators(tableActions, dispatch),\n    }\n}\n\nScanner.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Scanner));\n","import {\r\n    GET_DATA,\r\n    GET_IDS,\r\n    SET_SELECTED\r\n} from '../constants/table'\r\nimport axios from 'axios';\r\nimport FormData from 'form-data';\r\n\r\nexport function setData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = new FormData();\r\n            let _headers;\r\n            data.append('id', payload.id);\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            data.append('new', JSON.stringify(payload.data));\r\n            if(payload.oldFile != undefined){\r\n                data.append('oldFile', payload.oldFile);\r\n            }\r\n            if(payload.oldFileWhatermark != undefined){\r\n                data.append('oldFileWhatermark', payload.oldFileWhatermark);\r\n            }\r\n            if (payload.file != undefined) {\r\n                data.append('fileLength', payload.file.length);\r\n                for(let i=0; i<payload.file.length; i++){\r\n                    data.append('file'+i, payload.file[i]);\r\n                    data.append('fileName'+i, payload.file[i].name);\r\n                }\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization': 'Bearer ' + localStorage.userBiletikiAdmin,\r\n                }\r\n            } else {\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }\r\n            }\r\n            const res = await axios.post(\r\n                '/data/add',\r\n                data,\r\n                {headers: _headers});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name!='Произведение')\r\n                for(let i = 0; i<res.data.data.length; i++){\r\n                    let data2=[]\r\n                    for(let i1 = 0; i1<res.data.data[i].length; i1++){\r\n                        let data3 = res.data.data[i][i1]\r\n                        if(data3.length>200)\r\n                            data3 = data3.substring(0, 200)+'...'\r\n                        data2.push(data3)\r\n                    }\r\n                    data1.push(data2)\r\n                }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}\r\n\r\nexport function addData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = new FormData();\r\n            let _headers;\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            data.append('new', JSON.stringify(payload.data));\r\n            if (payload.file != undefined) {\r\n                data.append('fileLength', payload.file.length);\r\n                for(let i=0; i<payload.file.length; i++){\r\n                    data.append('file'+i, payload.file[i]);\r\n                    data.append('fileName'+i, payload.file[i].name);\r\n                }\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization': 'Bearer ' + localStorage.userBiletikiAdmin\r\n                }\r\n            } else {\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }\r\n            }\r\n            const res = await axios.post(\r\n                '/data/add',\r\n                data,\r\n                {headers: _headers});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name!='Произведение')\r\n                for(let i = 0; i<res.data.data.length; i++){\r\n                    let data2=[]\r\n                    for(let i1 = 0; i1<res.data.data[i].length; i1++){\r\n                        let data3 = res.data.data[i][i1]\r\n                        if(data3.length>200)\r\n                            data3 = data3.substring(0, 200)+'...'\r\n                        data2.push(data3)\r\n                    }\r\n                    data1.push(data2)\r\n                }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}\r\n\r\nexport function setSelected(payload) {\r\n    return {\r\n        type: SET_SELECTED,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport function getIds(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = new FormData();\r\n            data.append('name', payload);\r\n            const res = await axios.post(\r\n                '/data/getIds',\r\n                data,\r\n                {headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }});\r\n            dispatch({\r\n                type: GET_IDS,\r\n                payload: res.data\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}\r\n\r\nexport function getData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = new FormData();\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            const res = await axios.post(\r\n                '/data/get',\r\n                data,\r\n                {headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name!='Произведение')\r\n                for(let i = 0; i<res.data.data.length; i++){\r\n                    let data2=[]\r\n                    for(let i1 = 0; i1<res.data.data[i].length; i1++){\r\n                        let data3 = res.data.data[i][i1]\r\n                        if(data3.length>200)\r\n                            data3 = data3.substring(0, 200)+'...'\r\n                        data2.push(data3)\r\n                    }\r\n                    data1.push(data2)\r\n                }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}\r\n\r\nexport const getDataSimple = async (payload) => {\r\n        try {\r\n            const data = new FormData();\r\n            data.append('name', payload.name);\r\n            if(payload.data!==undefined)\r\n                data.append('data', JSON.stringify(payload.data));\r\n            const res = await axios.post(\r\n                '/data/get',\r\n                data,\r\n                {headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }});\r\n            return res.data\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n}\r\n\r\nexport function deleteData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = new FormData();\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            data.append('deleted', payload.deleted);\r\n            if(payload.oldFile != undefined && payload.oldFile.length > 0){\r\n                data.append('oldFile', payload.oldFile);\r\n            }\r\n            const res = await axios.post(\r\n                '/data/delete',\r\n                data,\r\n                {headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name!=='Произведение')\r\n                for(let i = 0; i<res.data.data.length; i++){\r\n                    let data2=[]\r\n                    for(let i1 = 0; i1<res.data.data[i].length; i1++){\r\n                        let data3 = res.data.data[i][i1]\r\n                        if(data3.length>200)\r\n                            data3 = data3.substring(0, 200)+'...'\r\n                        data2.push(data3)\r\n                    }\r\n                    data1.push(data2)\r\n                }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}"],"sourceRoot":""}