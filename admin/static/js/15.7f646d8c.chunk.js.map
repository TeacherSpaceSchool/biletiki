{"version":3,"sources":["redux/actions/app.js","logo.png","component/Sign.js","component/AppBar.js"],"names":["showDrawer","show","type","SHOW_DRAWER","payload","getElsom","_ref","Object","C_projects_biletiki_biletiki_admin_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_projects_biletiki_biletiki_admin_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","data","res","wrap","_context","prev","next","FormData","append","wallet","axios","post","sent","abrupt","t0","console","error","stop","this","_x","apply","arguments","module","exports","__webpack_require__","p","Sign","React","memo","props","_useState","useState","_useState2","slicedToArray","login","setLogin","_useState3","_useState4","pass","setPass","_useState5","_useState6","hide","setHide","user","showMiniDialog","mini_dialogActions","_props$userActions","userActions","signin","logout","classes","react_default","createElement","TextField_default","id","label","className","textField","margin","value","onChange","event","target","FormControl_default","classNames","InputLabel_default","htmlFor","Input_default","endAdornment","InputAdornment_default","position","IconButton_default","aria-label","onClick","VisibilityOff_default","Visibility_default","error_message","Button_default","variant","color","log","email","password","button","withStyles","theme","spacing","unit","marginLeft","marginRight","width","marginTop","marginBottom","fontWeight","connect","state","mini_dialog","dispatch","bindActionCreators","MyAppBar","_props$user","authenticated","status","location","name","table","drawer","app","appActions","_props$mini_dialogAct","setMiniDialog","showAddMiniDialog","currentPath","pathname","split","_React$useState","_React$useState2","anchorEl","setAnchorEl","open","Boolean","handleClose","root","AppBar_default","appBar","Toolbar_default","src","logo","menuButton","Typography_default","grow","role","mainWindow","current","offsetWidth","history","push","style","component_Sign","aria-owns","undefined","aria-haspopup","currentTarget","AccountCircle_default","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","onClose","Fragment","MenuItem_default","zIndex","background","flexGrow"],"mappings":"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","file":"static/js/15.7f646d8c.chunk.js","sourcesContent":["import { SHOW_DRAWER } from '../constants/app'\r\nimport axios from 'axios';\r\nimport FormData from 'form-data';\r\n\r\nexport function showDrawer(show) {\r\n    return {\r\n        type: SHOW_DRAWER,\r\n        payload: show\r\n    }\r\n}\r\n\r\n\r\nexport let getElsom= async (payload) => {\r\n    try {\r\n        const data = new FormData();\r\n        data.append('wallet', payload.wallet);\r\n        const res = await axios.post(\r\n            'http://88.212.253.143:1000/payment/elsom/check',\r\n            data);\r\n        return res.data\r\n    } catch(error) {\r\n        console.error(error)\r\n    }\r\n}","module.exports = __webpack_public_path__ + \"static/media/logo.fdc48fe4.png\";","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../redux/actions/mini_dialog'\r\nimport * as userActions from '../redux/actions/user'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport classNames from 'classnames';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: 200,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        let [login, setLogin] = useState('');\r\n        let [pass, setPass] = useState('');\r\n        let [hide, setHide] = useState('password');\r\n        let handleHide =  () => {\r\n            setHide(!hide)\r\n        };\r\n        const { error } = props.user;\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { signin, logout } = props.userActions;\r\n        let handlePass =  (event) => {\r\n            setPass(event.target.value)\r\n        };\r\n        let handleLogin =  (event) => {\r\n            setLogin(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    id='standard-search'\r\n                    label='Логин'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={login}\r\n                    onChange={handleLogin}\r\n                />\r\n                <br/>\r\n                <FormControl className={classNames(classes.margin, classes.textField)}>\r\n                    <InputLabel htmlFor=\"adornment-password\">Password</InputLabel>\r\n                    <Input\r\n                        id=\"adornment-password\"\r\n                        type={hide ? 'password' : 'text' }\r\n                        value={pass}\r\n                        onChange={handlePass}\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton aria-label=\"Toggle password visibility\" onClick={handleHide}>\r\n                                    {hide ? <VisibilityOff />:<Visibility />  }\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }\r\n                    />\r\n                </FormControl>\r\n                <br/>\r\n                {error?\r\n                    <div className={classes.error_message}>Неверный логин или пароль</div>\r\n                    :\r\n                    null\r\n                }\r\n                <div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={()=>{console.log({email: login, password: pass});signin({email: login, password: pass})}} className={classes.button}>\r\n                        Войти\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={()=>{showMiniDialog(false); logout()}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as userActions from '../redux/actions/user'\r\nimport * as appActions from '../redux/actions/app'\r\nimport * as mini_dialogActions from '../redux/actions/mini_dialog'\r\nimport Sign from './Sign';\r\nimport logo from '../logo.png';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport { mainWindow } from '../App'\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst styles = {\r\n    appBar: {\r\n        zIndex: 1201,\r\n        background: '#202124'\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        width: 30,\r\n        marginLeft: 10,\r\n        marginRight: 20,\r\n    },\r\n};\r\n\r\nconst MyAppBar = React.memo(\r\n    (props) =>{\r\n        const { authenticated, status } = props.user;\r\n        const { classes, location } = props;\r\n        const { logout } = props.userActions;\r\n        const { name } = props.table;\r\n        const { drawer } = props.app;\r\n        const { showDrawer } = props.appActions;\r\n        const { setMiniDialog, showMiniDialog, showAddMiniDialog } = props.mini_dialogActions;\r\n        let currentPath = location.pathname.split('/')[1];\r\n        const [anchorEl, setAnchorEl] = React.useState(null);\r\n        const open = Boolean(anchorEl);\r\n        let handleMenu = (event) => {\r\n            setAnchorEl(event.currentTarget);\r\n        }\r\n        let handleClose = () => {\r\n            setAnchorEl(null);\r\n        }\r\n        return (\r\n                <div>\r\n                    <div className={classes.root}>\r\n                        <AppBar position=\"fixed\" className={classes.appBar}>\r\n                            <Toolbar>\r\n                                <img src={logo} className={classes.menuButton}  onClick={() => {showDrawer(!drawer)}}/>\r\n                                <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n                                    {authenticated?status.role:'Kassir.kg'}\r\n                                </Typography>\r\n                                {mainWindow.current.offsetWidth>450?\r\n                                    authenticated ?\r\n                                        <div>\r\n                                            {name!=='' && currentPath!=='event'&&currentPath!=='cashbox'&&name!=='Баланс'&&name!=='Платежи'&&name!=='Билеты'&&name!=='Билеты кино'&&name!=='Статистика жанров'&&name!=='Статистика фильмов'&&name!=='Статистика кинотеатров'&&name!=='Статистика событий'&&name!=='Статистика пользователя' ?\r\n                                                <Button  variant=\"outlined\" color=\"inherit\" onClick={()=>{\r\n                                                    if(name==='Событие')\r\n                                                        props.history.push('/event')\r\n                                                    else if(name==='Сеанс')\r\n                                                        props.history.push('/seance')\r\n                                                    else\r\n                                                        showAddMiniDialog()}\r\n                                                } style={{marginRight: '20px'}}>Добавить</Button>\r\n                                                :\r\n                                                null\r\n                                            }\r\n                                            <Button  variant=\"outlined\" color=\"inherit\" onClick={logout}>Выйти</Button>\r\n                                        </div>\r\n                                        :\r\n                                        <Button  variant=\"outlined\" color=\"inherit\" onClick={()=>{setMiniDialog('Авторизация', <Sign/>);showMiniDialog(true)}}>Войти</Button>\r\n                                    :\r\n                                    <div>\r\n                                        <IconButton\r\n                                            aria-owns={open ? 'menu-appbar' : undefined}\r\n                                            aria-haspopup='true'\r\n                                            onClick={handleMenu}\r\n                                            color='inherit'\r\n                                        >\r\n                                            <AccountCircle />\r\n                                        </IconButton>\r\n                                        <Menu\r\n                                            id='menu-appbar'\r\n                                            anchorEl={anchorEl}\r\n                                            anchorOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'right',\r\n                                            }}\r\n                                            transformOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'right',\r\n                                            }}\r\n                                            open={open}\r\n                                            onClose={handleClose}\r\n                                        >\r\n                                            {authenticated ?\r\n                                                <>\r\n                                                {name!=='' && currentPath!=='event'&&currentPath!=='cashbox'&&name!=='Платежи'&&name!=='Билеты'&&name!=='Баланс'&&name!=='Билеты кино'&&name!=='Статистика жанров'&&name!=='Статистика фильмов'&&name!=='Статистика кинотеатров'&&name!=='Статистика событий'&&name!=='Статистика пользователя' ?\r\n                                                    <MenuItem onClick={()=>{handleClose();\r\n                                                        if(name==='Событие')\r\n                                                            props.history.push('/event')\r\n                                                        else if(name==='Сеанс')\r\n                                                            props.history.push('/seance')\r\n                                                        else showAddMiniDialog()}}>Добавить</MenuItem>\r\n                                                    :\r\n                                                    null\r\n                                                }\r\n                                                <MenuItem onClick={()=>{handleClose(); logout()}}>Выйти</MenuItem>\r\n                                                </>\r\n                                                :\r\n                                                <MenuItem onClick={()=>{handleClose();setMiniDialog('Авторизация', <Sign/>);showMiniDialog(true)}}>Войти</MenuItem>\r\n                                            }\r\n                                        </Menu>\r\n                                    </div>\r\n                                }\r\n\r\n\r\n                            </Toolbar>\r\n                        </AppBar>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n)\r\n\r\nMyAppBar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        table: state.table,\r\n        app: state.app,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        appActions: bindActionCreators(appActions, dispatch),\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(MyAppBar))"],"sourceRoot":""}