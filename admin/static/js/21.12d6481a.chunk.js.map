{"version":3,"sources":["component/Add/About.js","component/Add/Email.js","component/Add/Ticket.js","component/Add/Contact.js","component/Add/Ads.js","component/Add/Faq.js","component/Add/Logo.js","component/Add/Personal.js","component/Add/Phone.js","component/Add/Social.js","component/Add/Vacancy.js","component/Add/Where.js","component/Add/User.js","component/Add/Billboard.js","component/Add/Cinema.js","component/Add/Mailing.js","component/Add/Hall.js","component/Add/TicketCinema.js","component/Add/Balance.js","component/Add/Cashbox.js","component/Add/Payment.js","redux/actions/mini_dialog.js","logo.png","component/Table.js","redux/actions/table.js"],"names":["width","mainWindow","current","offsetWidth","Sign","React","memo","props","showMiniDialog","mini_dialogActions","_props$tableActions","tableActions","setSelected","addData","setData","_props$table","table","selected","data","page","search","sort","_useState","useState","_useState2","Object","slicedToArray","descriptionRu","setDescriptionRu","_useState3","_useState4","descriptionKg","setDescriptionKg","classes","react_default","a","createElement","className","urls","TextField_default","multiline","rowsMax","label","type","textField","margin","value","onChange","event","target","Button_default","variant","color","onClick","name","id","button","withStyles","theme","spacing","unit","marginLeft","marginRight","maxHeight","overflow","error_message","marginTop","marginBottom","fontWeight","connect","state","mini_dialog","dispatch","bindActionCreators","email","setEmail","ticket","hash","user","where","status","setStatus","statuses","JSON","parse","text_message","select","SelectProps","MenuProps","menu","undefined","map","option","MenuItem_default","key","length","wordWrap","coords","setСoords","cashbox","setСashbox","_useState5","_useState6","address","setAddress","_useState7","_useState8","booking","setBooking","_useState9","_useState10","connection","setConnection","_useState11","_useState12","return1","setReturn1","_useState13","_useState14","general","setGeneral","_useState15","_useState16","cooperation","setCooperation","dateStart1","types","setType","setName","link","setLink","replace","dateEnd1","dateStart","setDateStart","dateEnd","setDateEnd","file","setFile","fileNames","setFileNames","htmlFor","component","oldFile","accept","style","display","files","i","questionRu","setQuestionRu","answerRu","setAnswerRu","questionKg","setQuestionKg","answerKg","setAnswerKg","names","contact","setContact","whoRu","setWhoRu","whoKg","setWhoKg","phone","setPhone","url","nameRu","setNameRu","requirementsRu","setRequirementsRu","dutiesRu","setDutiesRu","conditionsRu","setConditionsRu","nameKg","setNameKg","requirementsKg","setRequirementsKg","dutiesKg","setDutiesKg","conditionsKg","setConditionsKg","city","setCity","setCoords","surname","setSurame","phonenumber","setPhonenumber","roles","role","setRole","password","setPassword","Fragment","useEffect","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","t0","setEvents","getDataSimple","t1","sent","stop","this","events","split","setEvent","part1","part2","console","log","_id","genre","setGenre","duration","setDuration","ageCategory","setAgeCategory","premier","setPremier","producers","setPoducers","actors","setActors","_useState17","_useState18","description","setDescription","_useState19","_useState20","_useState21","_useState22","mailuser","setMailuser","mailpass","setMailpass","mailchimpInstance","setMailchimpInstance","listUniqueId","setListUniqueId","mailchimpApiKey","setMailchimpApiKey","setUsers","setUser","users","movie","cinema","hall","seats","priceSelect","date","balance","setBalance","wallet","geo","setGeo","service","sum","meta","sms","setMiniDialog","title","child","SET_MINI_DIALOG","payload","showAddMiniDialog","_ref","store","getState","Mailing","TicketCinema","About","Ticket","Cinema","Email","Where","Vacancy","Ads","Contact","Faq","Logo","Personal","Phone","Social","User","Billboard","Hall","Balance","Cashbox","Payment","SHOW_MINI_DIALOG","_x","apply","arguments","show","module","exports","__webpack_require__","p","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","mui_datatables__WEBPACK_IMPORTED_MODULE_1__","mui_datatables__WEBPACK_IMPORTED_MODULE_1___default","react_redux__WEBPACK_IMPORTED_MODULE_2__","redux__WEBPACK_IMPORTED_MODULE_3__","_redux_actions_table__WEBPACK_IMPORTED_MODULE_4__","_redux_actions_mini_dialog__WEBPACK_IMPORTED_MODULE_5__","react_image_gallery__WEBPACK_IMPORTED_MODULE_6__","react_image_gallery__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_8__","_App__WEBPACK_IMPORTED_MODULE_9__","_logo_png__WEBPACK_IMPORTED_MODULE_10__","_logo_png__WEBPACK_IMPORTED_MODULE_10___default","message","fontSize","Table","row","count","data1","getData","deleteData","_props$mini_dialogAct","authenticated","options","serverSide","filterType","filter","print","rowsPerPage","rowsPerPageOptions","downloadOptions","filename","separator","onColumnSortChange","changedColumn","direction","onSearchChange","searchText","onChangePage","currentPage","onRowsDelete","rowsDeleted","deletedId","push","index","includes","deleted","stringify","onCellClick","colData","colMeta","toString","window","open","focus","images","original","thumbnail","items","showThumbnails","showFullscreenButton","showPlayButton","rowIndex","history","onTableChange","action","tableState","createMuiTheme","overrides","MUIDataTableBodyCell","root","textOverflow","maxWidth","MuiPaper","elevation4","boxShadow","columns","mainMessage","src","logo","backgroundImage","backgroundPosition","backgroundRepeat","height","justifyContent","alignItems","C_projects_biletiki_biletiki_admin_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_projects_biletiki_biletiki_admin_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_headers","res","_i","_i2","data2","i1","data3","FormData","append","oldFileWhatermark","Accept-Language","Content-Type","concat","_boundary","X-Requested-With","Authorization","localStorage","userBiletikiAdmin","axios","post","headers","substring","GET_DATA","error","_ref2","_callee2","_i3","_i4","_context2","_x2","SET_SELECTED","getIds","_ref3","_callee3","_context3","GET_IDS","_x3","_ref4","_callee4","_i5","_context4","_x4","_ref5","_callee5","_context5","abrupt","_x5","addDataSimple","_ref6","_callee6","_context6","_x6","_ref7","_callee7","_i6","_context7","_x7"],"mappings":"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","file":"static/js/21.12d6481a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [descriptionRu, setDescriptionRu] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleDescriptionRu =  (event) => {\r\n            setDescriptionRu(event.target.value)\r\n        };\r\n        let [descriptionKg, setDescriptionKg] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleDescriptionKg =  (event) => {\r\n            setDescriptionKg(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    multiline\r\n                    rowsMax='4'\r\n                    label='описание'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={descriptionRu}\r\n                    onChange={handleDescriptionRu}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    multiline\r\n                    rowsMax='4'\r\n                    label='баяндоо'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={descriptionKg}\r\n                    onChange={handleDescriptionKg}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'О нас', data: {descriptionRu: descriptionRu, descriptionKg: descriptionKg}});\r\n                        else\r\n                            setData({id: data[selected][3], search: '', sort: '', page: 0, name: 'О нас', data: {descriptionRu: descriptionRu, descriptionKg: descriptionKg}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [email, setEmail] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleEmail =  (event) => {\r\n            setEmail(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='email'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={email}\r\n                    onChange={handleEmail}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Email', data: {email: email}});\r\n                        else\r\n                            setData({id: data[selected][2], search: search, sort: sort, page: page, name: 'Email', data: {email: email}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    text_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        overflow: 'hidden',\r\n        wordWrap: 'break-word'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let ticket = selected!==-1?data[selected][0]:'';\r\n        let hash = selected!==-1?data[selected][1]:'';\r\n        let user = selected!==-1?data[selected][2]:'';\r\n        let event = selected!==-1?data[selected][3]:'';\r\n        let where = selected!==-1?data[selected][4]:'';\r\n        let [status, setStatus] = useState(selected!==-1?data[selected][5]:'');\r\n        let statuses = ['продан', 'возвращен', 'использован', 'отмена']\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let seats = selected!==-1?JSON.parse(data[selected][6]):'';\r\n\r\n        const { classes } = props;\r\n        return (\r\n            <div className={classes.text_message}>\r\n                <b>Билет</b>\r\n                <br/>\r\n                {ticket}\r\n                <br/>\r\n                <br/>\r\n                <b>Hash</b>\r\n                <br/>\r\n                {hash}\r\n                <br/>\r\n                <br/>\r\n                <b>Пользователь</b>\r\n                <br/>\r\n                {user}\r\n                <br/>\r\n                <br/>\r\n                <b>Мероприятие</b>\r\n                <br/>\r\n                {event}\r\n                <br/>\r\n                <br/>\r\n                <b>Площадка</b>\r\n                <br/>\r\n                {where}\r\n                <br/>\r\n                <br/>\r\n                {/*\r\n                <b>Места</b>\r\n                <br/>\r\n                {seats.length>0?\r\n                    seats.map(option => {\r\n                        return(\r\n                            <>\r\n                            {'Место: ' + option[0].name+' Цена: '+option[0].price+' Дата: '+option[1]}\r\n                            <br/>\r\n                            </>)\r\n                    }):null}\r\n                <br/>*/}\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Билеты', data: {status: status}});\r\n                        else\r\n                            setData({id: data[selected][data[selected].length-1], search: search, sort: sort, page: page, name: 'Билеты', data: {status: status}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [coords, setСoords] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleCoords =  (event) => {\r\n            setСoords(event.target.value)\r\n        };\r\n        let [cashbox, setСashbox] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleCashbox =  (event) => {\r\n            setСashbox(event.target.value)\r\n        };\r\n        let [address, setAddress] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleAddress =  (event) => {\r\n            setAddress(event.target.value)\r\n        };\r\n        let [booking, setBooking] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleBooking =  (event) => {\r\n            setBooking(event.target.value)\r\n        };\r\n        let [connection, setConnection] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleConnection =  (event) => {\r\n            setConnection(event.target.value)\r\n        };\r\n        let [return1, setReturn1] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleReturn1 =  (event) => {\r\n            setReturn1(event.target.value)\r\n        };\r\n        let [general, setGeneral] = useState(selected!==-1?data[selected][6]:'');\r\n        let handleGeneral =  (event) => {\r\n            setGeneral(event.target.value)\r\n        };\r\n        let [cooperation, setCooperation] = useState(selected!==-1?data[selected][7]:'');\r\n        let handleCooperation =  (event) => {\r\n            setCooperation(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='координаты'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={coords}\r\n                    onChange={handleCoords}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='касса'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={cashbox}\r\n                    onChange={handleCashbox}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='адрес'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={address}\r\n                    onChange={handleAddress}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='бронирование'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={booking}\r\n                    onChange={handleBooking}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='связь'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={connection}\r\n                    onChange={handleConnection}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='возврат'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={return1}\r\n                    onChange={handleReturn1}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='главная'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={general}\r\n                    onChange={handleGeneral}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='сотрудничество'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={cooperation}\r\n                    onChange={handleCooperation}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Контакт', data: {coords: coords, cashbox: cashbox, address: address, booking: booking, connection: connection, return1: return1, general: general, cooperation: cooperation}});\r\n                        else\r\n                            setData({id: data[selected][9], search: search, sort: sort, page: page, name: 'Контакт', data: {coords: coords, cashbox: cashbox, address: address, booking: booking, connection: connection, return1: return1, general: general, cooperation: cooperation}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let types = ['top', 'down']\r\n        let [type, setType] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleType =  (event) => {\r\n            setType(event.target.value)\r\n        };\r\n        let [name, setName] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [link, setLink] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleLink =  (event) => {\r\n            setLink(event.target.value)\r\n        };\r\n        let dateStart1;\r\n        if(selected!==-1) {\r\n            dateStart1 = data[selected][3].replace('.', '-').replace('.', '-').replace(' ', 'T')+':00';\r\n        }\r\n        let [dateStart, setDateStart] = useState(selected!==-1?dateStart1:'2019-01-01T00:00');\r\n        let handleDateStart =  (event) => {\r\n            setDateStart(event.target.value)\r\n        };\r\n        let dateEnd1;\r\n        if(selected!==-1){\r\n            dateEnd1 = data[selected][4].replace('.', '-').replace('.', '-').replace(' ', 'T')+':00';\r\n        }\r\n        let [dateEnd, setDateEnd] = useState(selected!==-1?dateEnd1:'2019-01-01T00:00');\r\n        let handleDateEnd =  (event) => {\r\n            setDateEnd(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ссылка'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={link}\r\n                    onChange={handleLink}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='дата начала'\r\n                    type='datetime-local'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dateStart}\r\n                    onChange={handleDateStart}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='дата окончания'\r\n                    type='datetime-local'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dateEnd}\r\n                    onChange={handleDateEnd}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='где'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={type}\r\n                    onChange={handleType}\r\n                >\r\n                    {types != undefined?\r\n                        types.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Реклама', file: file, data: {type: type, name: name, link: link, dateStart: dateStart, dateEnd: dateEnd}});\r\n                        else\r\n                            setData({id: data[selected][7], search: search, sort: sort, page: page, name: 'Реклама', oldFile: data[selected][0], file: file, data: {type: type, name: name, link: link, dateStart: dateStart, dateEnd: dateEnd}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [questionRu, setQuestionRu] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleQuestionRu =  (event) => {\r\n            setQuestionRu(event.target.value)\r\n        };\r\n        let [answerRu, setAnswerRu] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleAnswerRu =  (event) => {\r\n            setAnswerRu(event.target.value)\r\n        };\r\n        let [questionKg, setQuestionKg] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleQuestionKg =  (event) => {\r\n            setQuestionKg(event.target.value)\r\n        };\r\n        let [answerKg, setAnswerKg] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleAnswerKg =  (event) => {\r\n            setAnswerKg(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='вопрос'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={questionRu}\r\n                    onChange={handleQuestionRu}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ответ'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={answerRu}\r\n                    onChange={handleAnswerRu}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='суроо'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={questionKg}\r\n                    onChange={handleQuestionKg}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='жооп'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={answerKg}\r\n                    onChange={handleAnswerKg}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'FAQ', data: { questionRu: questionRu, answerRu: answerRu, questionKg: questionKg, answerKg: answerKg}});\r\n                        else\r\n                            setData({id: data[selected][5], search: search, sort: sort, page: page, name: 'FAQ', data: { questionRu: questionRu, answerRu: answerRu, questionKg: questionKg, answerKg: answerKg}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        const names = ['vertical', 'square', 'horizontal', 'main', 'mainKG']\r\n        let [name, setName] = useState(selected!==-1?data[selected][1]:'main');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                >\r\n                    {names != undefined?\r\n                        names.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Логотип', file: file, data: {name: name}});\r\n                        else\r\n                            setData({id: data[selected][3], search: search, sort: sort, page: page, name: 'Логотип', oldFile: data[selected][0], file: file, data: {name: name}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [contact, setContact] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleContact =  (event) => {\r\n            setContact(event.target.value)\r\n        };\r\n        let [whoRu, setWhoRu] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleWhoRu =  (event) => {\r\n            setWhoRu(event.target.value)\r\n        };\r\n        let [whoKg, setWhoKg] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleWhoKg =  (event) => {\r\n            setWhoKg(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='контакты'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={contact}\r\n                    onChange={handleContact}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='кто'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={whoRu}\r\n                    onChange={handleWhoRu}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ким'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={whoKg}\r\n                    onChange={handleWhoKg}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Персонал', data: { contact: contact, whoRu: whoRu, whoKg: whoKg}});\r\n                        else\r\n                            setData({id: data[selected][4], search: search, sort: sort, page: page, name: 'Персонал', data: { contact: contact, whoRu: whoRu, whoKg: whoKg}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [phone, setPhone] = useState(selected!==-1?data[selected][0]:'');\r\n        let handlePhone =  (event) => {\r\n            setPhone(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='телефон'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={phone}\r\n                    onChange={handlePhone}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Телефон', data: {phone: phone}});\r\n                        else\r\n                            setData({id: data[selected][2], search: search, sort: sort, page: page, name: 'Телефон', data: {phone: phone}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [name, setName] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [link, setLink] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleLink =  (event) => {\r\n            setLink(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ссылка'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={link}\r\n                    onChange={handleLink}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Социалки', file: file, data: {name: name, url: link}});\r\n                        else\r\n                            setData({id: data[selected][4], search: search, sort: sort, page: page, name: 'Социалки', oldFile: data[selected][0], file: file, data: {name: name, url: link}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [nameRu, setNameRu] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleNameRu =  (event) => {\r\n            setNameRu(event.target.value)\r\n        };\r\n        let [requirementsRu, setRequirementsRu] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleRequirementsRu =  (event) => {\r\n            setRequirementsRu(event.target.value)\r\n        };\r\n        let [dutiesRu, setDutiesRu] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleDutiesRu =  (event) => {\r\n            setDutiesRu(event.target.value)\r\n        };\r\n        let [conditionsRu, setConditionsRu] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleConditionsRu =  (event) => {\r\n            setConditionsRu(event.target.value)\r\n        };\r\n        let [nameKg, setNameKg] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleNameKg =  (event) => {\r\n            setNameKg(event.target.value)\r\n        };\r\n        let [requirementsKg, setRequirementsKg] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleRequirementsKg =  (event) => {\r\n            setRequirementsKg(event.target.value)\r\n        };\r\n        let [dutiesKg, setDutiesKg] = useState(selected!==-1?data[selected][6]:'');\r\n        let handleDutiesKg =  (event) => {\r\n            setDutiesKg(event.target.value)\r\n        };\r\n        let [conditionsKg, setConditionsKg] = useState(selected!==-1?data[selected][7]:'');\r\n        let handleConditionsKg =  (event) => {\r\n            setConditionsKg(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='название'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={nameRu}\r\n                    onChange={handleNameRu}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='обязанности'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={requirementsRu}\r\n                    onChange={handleRequirementsRu}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='требования'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dutiesRu}\r\n                    onChange={handleDutiesRu}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='условия'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={conditionsRu}\r\n                    onChange={handleConditionsRu}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ысым'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={nameKg}\r\n                    onChange={handleNameKg}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='милдеттери'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={requirementsKg}\r\n                    onChange={handleRequirementsKg}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='талаптар'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dutiesKg}\r\n                    onChange={handleDutiesKg}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='шарттары'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={conditionsKg}\r\n                    onChange={handleConditionsKg}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Вакансии', data: {nameRu: nameRu, requirementsRu: requirementsRu, dutiesRu: dutiesRu, conditionsRu: conditionsRu, nameKg: nameKg, requirementsKg: requirementsKg, dutiesKg: dutiesKg,  conditionsKg: conditionsKg}});\r\n                        else\r\n                            setData({id: data[selected][9], search: search, sort: sort, page: page, name: 'Вакансии', data: {nameRu: nameRu, requirementsRu: requirementsRu, dutiesRu: dutiesRu, conditionsRu: conditionsRu, nameKg: nameKg, requirementsKg: requirementsKg, dutiesKg: dutiesKg,  conditionsKg: conditionsKg}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [nameRu, setNameRu] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleNameRu =  (event) => {\r\n            setNameRu(event.target.value)\r\n        };\r\n        let [nameKg, setNameKg] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleNameKg =  (event) => {\r\n            setNameKg(event.target.value)\r\n        };\r\n        let [address, setAddress] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleAddress = (event) => {\r\n            setAddress(event.target.value)\r\n        };\r\n        let [city, setCity] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleCity = (event) => {\r\n            setCity(event.target.value)\r\n        };\r\n        let [coords, setCoords] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleCoords =  (event) => {\r\n            setCoords(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='название'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={nameRu}\r\n                    onChange={handleNameRu}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ысым'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={nameKg}\r\n                    onChange={handleNameKg}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='адрес'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={address}\r\n                    onChange={handleAddress}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='город'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={city}\r\n                    onChange={handleCity}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='координаты'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={coords}\r\n                    onChange={handleCoords}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Площадка', file: file, data: {city: city, nameRu: nameRu, nameKg: nameKg, address: address, coords: coords}});\r\n                        else\r\n                            setData({id: data[selected][7], search: search, sort: sort, page: page, name: 'Площадка', oldFile: data[selected][0], file: file, data: {city: city, nameRu: nameRu, nameKg: nameKg, address: address, coords: coords}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    text_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        overflow: 'hidden',\r\n        wordWrap: 'break-word'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [surname, setSurame] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleSurname =  (event) => {\r\n            setSurame(event.target.value)\r\n        };\r\n        let [email, setEmail] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleEmail =  (event) => {\r\n            setEmail(event.target.value)\r\n        };\r\n        let [phonenumber, setPhonenumber] = useState(selected!==-1?data[selected][3]:'');\r\n        let handlePhonenumber = (event) => {\r\n            setPhonenumber(event.target.value)\r\n        };\r\n        let roles = ['manager', 'accountant', 'cashier', 'client', 'cinema', 'turnstile', 'organizator']\r\n        let [role, setRole] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleRole = (event) => {\r\n            setRole(event.target.value)\r\n        };\r\n        let statuses = ['active', 'inactive']\r\n        let [status, setStatus] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let [password, setPassword] = useState('');\r\n        let handlePassword =  (event) => {\r\n            setPassword(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='фамилия'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={surname}\r\n                    onChange={handleSurname}\r\n                />\r\n                <br/>\r\n                {selected!==-1?\r\n                    <>\r\n                    <br/>\r\n                    <div className={classes.textField}>\r\n                        <b>email:</b> {email}\r\n                    </div>\r\n                    <br/>\r\n                    </>\r\n                    :\r\n                    <>\r\n                    <TextField\r\n                        label='email'\r\n                        type='login'\r\n                        className={classes.textField}\r\n                        margin='normal'\r\n                        value={email}\r\n                        onChange={handleEmail}\r\n                    />\r\n                    <br/>\r\n                    </>\r\n                }\r\n                <TextField\r\n                    label='телефон'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={phonenumber}\r\n                    onChange={handlePhonenumber}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='роль'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={role}\r\n                    onChange={handleRole}\r\n                >\r\n                    {roles != undefined?\r\n                        roles.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <br/>\r\n                    <TextField\r\n                        label='пароль'\r\n                        type='login'\r\n                        className={classes.textField}\r\n                        margin='normal'\r\n                        value={password}\r\n                        onChange={handlePassword}\r\n                    />\r\n                    <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Пользователи', data: {email: email, name: name, surname: surname, phonenumber: phonenumber, role: role, password: password, status: status}});\r\n                        else\r\n                            setData({id: data[selected][7], search: search, sort: sort, page: page, name: 'Пользователи', data: {email: email, name: name, surname: surname, phonenumber: phonenumber, role: role,  password: password, status: status}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { getDataSimple } from '../../redux/actions/table'\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        useEffect(()=>{(async()=>{\r\n            await setEvents(await getDataSimple({name: 'СобытиеID'}));\r\n        })()},[])\r\n        let [events, setEvents] = useState([]);\r\n        let [event, setEvent] = useState(selected!==-1?data[selected][2].split('\\n')[1]:'');\r\n        let handleEvent =  (event) => {\r\n            setEvent(event.target.value)\r\n        };\r\n        let [name, setName] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let dateStart1;\r\n        if(selected!==-1) {\r\n            dateStart1 = {part1: data[selected][3].split(' ')};\r\n            dateStart1.part2 = dateStart1.part1[1];\r\n            dateStart1.part1 = dateStart1.part1[0].split('.');\r\n            dateStart1 =  dateStart1.part1[0]+'-'+dateStart1.part1[2]+'-'+dateStart1.part1[1]+'T'+dateStart1.part2+':00';\r\n        }\r\n        let [dateStart, setDateStart] = useState(selected!==-1?dateStart1:'2019-01-01T00:00');\r\n        let handleDateStart =  (event) => {\r\n            setDateStart(event.target.value)\r\n        };\r\n        let dateEnd1;\r\n        if(selected!==-1){\r\n            dateEnd1 = {part1: data[selected][4].split(' ')};\r\n            dateEnd1.part2 = dateEnd1.part1[1];\r\n            dateEnd1.part1 = dateEnd1.part1[0].split('.');\r\n            dateEnd1 =  dateEnd1.part1[0]+'-'+dateEnd1.part1[2]+'-'+dateEnd1.part1[1]+'T'+dateEnd1.part2+':00';\r\n        }\r\n        console.log(dateEnd1, dateStart1)\r\n        let [dateEnd, setDateEnd] = useState(selected!==-1?dateEnd1:'2019-01-01T00:00');\r\n        let handleDateEnd =  (event) => {\r\n            setDateEnd(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='событие'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={event}\r\n                    onChange={handleEvent}\r\n                >\r\n                    {events != undefined?\r\n                        events.map(option => {\r\n                            return(\r\n                            <MenuItem key={option._id} value={option._id}>\r\n                                {option.nameRu}\r\n                            </MenuItem>)\r\n                        })\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='дата начала'\r\n                    type='datetime-local'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dateStart}\r\n                    onChange={handleDateStart}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='дата окончания'\r\n                    type='datetime-local'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dateEnd}\r\n                    onChange={handleDateEnd}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Биллборды', file: file, data: {name: name, dateStart: dateStart, dateEnd: dateEnd, event: event}});\r\n                        else\r\n                            setData({id: data[selected][6], search: search, sort: sort, page: page, name: 'Биллборды', oldFile: data[selected][0], file: file, data: {name: name, dateStart: dateStart, dateEnd: dateEnd, event: event}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [name, setName] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleName = (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [genre, setGenre] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleGenre = (event) => {\r\n            setGenre(event.target.value)\r\n        };\r\n        let types = ['скоро', 'в прокате']\r\n        let [type, setType] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleType = (event) => {\r\n            setType(event.target.value)\r\n        };\r\n        let [duration, setDuration] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleDuration = (event) => {\r\n            setDuration(event.target.value)\r\n        };\r\n        let [ageCategory, setAgeCategory] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleAgeCategory = (event) => {\r\n            setAgeCategory(event.target.value)\r\n        };\r\n        let [premier, setPremier] = useState(selected!==-1?data[selected][6]:'');\r\n        let handlePremier = (event) => {\r\n            setPremier(event.target.value)\r\n        };\r\n        let [producers, setPoducers] = useState(selected!==-1?data[selected][7]:'');\r\n        let handleProducers = (event) => {\r\n            setPoducers(event.target.value)\r\n        };\r\n        let [actors, setActors] = useState(selected!==-1?data[selected][8]:'');\r\n        let handleActors = (event) => {\r\n            setActors(event.target.value)\r\n        };\r\n        let [description, setDescription] = useState(selected!==-1?data[selected][9]:'');\r\n        let handleDescription = (event) => {\r\n            setDescription(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='жанр'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={genre}\r\n                    onChange={handleGenre}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='тип'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={type}\r\n                    onChange={handleType}\r\n                >\r\n                    {types != undefined?\r\n                        types.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='продолжительность'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={duration}\r\n                    onChange={handleDuration}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='возраст'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={ageCategory}\r\n                    onChange={handleAgeCategory}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='премьера'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={premier}\r\n                    onChange={handlePremier}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='актеры'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={actors}\r\n                    onChange={handleActors}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='режиссеры'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={producers}\r\n                    onChange={handleProducers}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    multiline\r\n                    rowsMax='4'\r\n                    label='описание'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={description}\r\n                    onChange={handleDescription}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Кино', file: file, data: {name: name, genre: genre, type: type, description: description, duration: duration, ageCategory: ageCategory, premier: premier,  producers: producers, actors: actors}});\r\n                        else\r\n                            setData({id: data[selected][11], search: search, sort: sort, page: page, name: 'Кино', oldFile: data[selected][0], file: file, data: {name: name, genre: genre, type: type, description: description, duration: duration, ageCategory: ageCategory, premier: premier,  producers: producers, actors: actors}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [mailuser, setMailuser] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleMailuser =  (event) => {\r\n            setMailuser(event.target.value)\r\n        };\r\n        let [mailpass, setMailpass] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleMailpass =  (event) => {\r\n            setMailpass(event.target.value)\r\n        };\r\n        let [mailchimpInstance, setMailchimpInstance] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleMailchimpInstance =  (event) => {\r\n            setMailchimpInstance(event.target.value)\r\n        };\r\n        let [listUniqueId, setListUniqueId] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleListUniqueId =  (event) => {\r\n            setListUniqueId(event.target.value)\r\n        };\r\n        let [mailchimpApiKey, setMailchimpApiKey] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleMailchimpApiKey =  (event) => {\r\n            setMailchimpApiKey(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='mailuser'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={mailuser}\r\n                    onChange={handleMailuser}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='mailpass'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={mailpass}\r\n                    onChange={handleMailpass}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='mailchimpInstance'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={mailchimpInstance}\r\n                    onChange={handleMailchimpInstance}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='listUniqueId'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={listUniqueId}\r\n                    onChange={handleListUniqueId}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='mailchimpApiKey'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={mailchimpApiKey}\r\n                    onChange={handleMailchimpApiKey}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Рассылка', data: {mailuser: mailuser, mailpass: mailpass, mailchimpInstance: mailchimpInstance, listUniqueId: listUniqueId, mailchimpApiKey: mailchimpApiKey}});\r\n                        else\r\n                            setData({id: data[selected][6], search: search, sort: sort, page: page, name: 'Рассылка', data: {mailuser: mailuser, mailpass: mailpass, mailchimpInstance: mailchimpInstance, listUniqueId: listUniqueId, mailchimpApiKey: mailchimpApiKey}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { getDataSimple } from '../../redux/actions/table'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        useEffect(()=>{(async()=>{\r\n            await setUsers(await getDataSimple({name: 'Кинотеатры'}));\r\n        })()},[])\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [user, setUser] = useState(selected!==-1?data[selected][1].split('\\n')[1]:'');\r\n        let handleUser =  (event) => {\r\n            setUser(event.target.value)\r\n        };\r\n        let [users, setUsers] = useState([]);\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='название'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='кинотеатр'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={user}\r\n                    onChange={handleUser}\r\n                >\r\n                    {users != undefined?\r\n                        users.map(option => (\r\n                            <MenuItem key={option._id} value={option._id}>\r\n                                {option.name}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Залы', data: {name: name, user: user}});\r\n                        else\r\n                            setData({id: data[selected][3], search: search, sort: sort, page: page, name: 'Залы', data: {name: name, user: user}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    text_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        overflow: 'hidden',\r\n        wordWrap: 'break-word'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let ticket = selected!==-1?data[selected][0]:'';\r\n        let hash = selected!==-1?data[selected][1]:'';\r\n        let user = selected!==-1?data[selected][2]:'';\r\n        let movie = selected!==-1?data[selected][3]:'';\r\n        let cinema = selected!==-1?data[selected][4]:'';\r\n        let hall = selected!==-1?data[selected][5]:'';\r\n        let [status, setStatus] = useState(selected!==-1?data[selected][6]:'');\r\n        let statuses = ['продан', 'возвращен', 'использован']\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let seats = selected!==-1?JSON.parse(data[selected][7]):'';\r\n\r\n        const { classes } = props;\r\n        return (\r\n            <div className={classes.text_message}>\r\n                <b>Билет</b>\r\n                <br/>\r\n                {ticket}\r\n                <br/>\r\n                <br/>\r\n                <b>Hash</b>\r\n                <br/>\r\n                {hash}\r\n                <br/>\r\n                <br/>\r\n                <b>Пользователь</b>\r\n                <br/>\r\n                {user}\r\n                <br/>\r\n                <br/>\r\n                <b>Фильм</b>\r\n                <br/>\r\n                {movie}\r\n                <br/>\r\n                <br/>\r\n                <b>Кинотеатр</b>\r\n                <br/>\r\n                {cinema}\r\n                <br/>\r\n                <br/>\r\n                <b>Зал</b>\r\n                <br/>\r\n                {hall}\r\n                <br/>\r\n                <br/>\r\n                <b>Места</b>\r\n                <br/>\r\n                {seats.length>0?\r\n                    seats.map(option => {\r\n                        return(\r\n                            <>\r\n                            {'Место: ' + option.name+' Цена: '+option.priceSelect+' Дата: '+option.date}\r\n                            <br/>\r\n                            </>)\r\n                    }):null}\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Билеты кино', data: {status: status}});\r\n                        else\r\n                            setData({id: data[selected][9], search: search, sort: sort, page: page, name: 'Билеты кино', data: {status: status}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    text_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        overflow: 'hidden',\r\n        wordWrap: 'break-word'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [balance, setBalance] = useState(selected!==-1?data[selected][2]:'');\r\n        let user = selected!==-1?data[selected][0]:'';\r\n        let wallet = selected!==-1?data[selected][1]:'';\r\n        let handleBalance =  (event) => {\r\n            setBalance(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <div className={classes.textField}>\r\n                    <b>пользователь:</b> {user}\r\n                </div>\r\n                <br/>\r\n                <div className={classes.textField}>\r\n                    <b>кошелек:</b> {wallet}\r\n                </div>\r\n                <br/>\r\n                <TextField\r\n                    label='баланс'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={balance}\r\n                    onChange={handleBalance}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected!==-1)\r\n                            setData({id: data[selected][4], search: search, sort: sort, page: page, name: 'Баланс', data: {balance: balance}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [address, setAddress] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleAddress =  (event) => {\r\n            setAddress(event.target.value)\r\n        };\r\n        let [geo, setGeo] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleGeo =  (event) => {\r\n            setGeo(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='адрес'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={address}\r\n                    onChange={handleAddress}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='геолокация'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={geo}\r\n                    onChange={handleGeo}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Кассы', data: {geo: geo, name: name, address: address}});\r\n                        else\r\n                            setData({id: data[selected][4], search: search, sort: sort, page: page, name: 'Кассы', data: {geo: geo, name: name, address: address}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    text_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        overflow: 'hidden',\r\n        wordWrap: 'break-word'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let wallet = selected!==-1?data[selected][0]:'';\r\n        let ticket = selected!==-1?data[selected][1]:'';\r\n        let service = selected!==-1?data[selected][2]:'';\r\n        let sum = selected!==-1?data[selected][3]:'';\r\n        let meta = selected!==-1?data[selected][4]:'';\r\n        let [status, setStatus] = useState(selected!==-1?data[selected][5]:'');\r\n        let name = selected!==-1?data[selected][6]:'';\r\n        let email = selected!==-1?data[selected][7]:'';\r\n        let sms = selected!==-1?data[selected][8]:'';\r\n        let statuses = ['обработка', 'совершен', 'отменен', 'ошибка']\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n\r\n        const { classes } = props;\r\n        return (\r\n            <div className={classes.text_message}>\r\n                <b>Адрес</b>\r\n                <br/>\r\n                {wallet}\r\n                <br/>\r\n                <br/>\r\n                <b>Билет</b>\r\n                <br/>\r\n                {ticket}\r\n                <br/>\r\n                <br/>\r\n                <b>Сумма</b>\r\n                <br/>\r\n                {sum}\r\n                <br/>\r\n                <br/>\r\n                <b>Сервис</b>\r\n                <br/>\r\n                {service}\r\n                <br/>\r\n                <br/>\r\n                <b>Meta</b>\r\n                <br/>\r\n                {meta}\r\n                <br/>\r\n                <br/>\r\n                <b>Имя</b>\r\n                <br/>\r\n                {name}\r\n                <br/>\r\n                <br/>\r\n                <b>Email</b>\r\n                <br/>\r\n                {email}\r\n                <br/>\r\n                <br/>\r\n                <b>SMS</b>\r\n                <br/>\r\n                {sms}\r\n                <br/>\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Платежи', data: {status: status}});\r\n                        else\r\n                            setData({id: data[selected][10], search: search, sort: sort, page: page, name: 'Платежи', data: {status: status}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import { SET_MINI_DIALOG, SHOW_MINI_DIALOG } from '../constants/mini_dialog'\r\nimport React from 'react'\r\nimport {\r\n    store\r\n} from '../../index'\r\nimport About from '../../component/Add/About';\r\nimport Email from '../../component/Add/Email';\r\nimport Ticket from '../../component/Add/Ticket';\r\nimport Contact from '../../component/Add/Contact';\r\nimport Ads from '../../component/Add/Ads';\r\nimport Faq from '../../component/Add/Faq';\r\nimport Logo from '../../component/Add/Logo';\r\nimport Personal from '../../component/Add/Personal';\r\nimport Phone from '../../component/Add/Phone';\r\nimport Social from '../../component/Add/Social';\r\nimport Vacancy from '../../component/Add/Vacancy';\r\nimport Where from '../../component/Add/Where';\r\nimport User from '../../component/Add/User';\r\nimport Billboard from '../../component/Add/Billboard';\r\nimport Cinema from '../../component/Add/Cinema';\r\nimport Mailing from '../../component/Add/Mailing';\r\nimport Hall from '../../component/Add/Hall';\r\nimport TicketCinema from '../../component/Add/TicketCinema';\r\nimport Balance from '../../component/Add/Balance';\r\nimport Cashbox from '../../component/Add/Cashbox';\r\nimport Payment from '../../component/Add/Payment';\r\n\r\nexport function setMiniDialog(title,child) {\r\n    return {\r\n        type: SET_MINI_DIALOG,\r\n        payload: {title: title, child: child}\r\n    }\r\n}\r\n\r\nexport function showAddMiniDialog() {\r\n    return async (dispatch) => {\r\n        if(store.getState().table.name!=''){\r\n            let child;\r\n            if(store.getState().table.name=='Рассылка')\r\n                child = <Mailing/>\r\n            else if(store.getState().table.name=='Билеты кино')\r\n                child = <TicketCinema/>\r\n            else if(store.getState().table.name=='О нас')\r\n                child = <About/>\r\n            else if(store.getState().table.name=='Билеты')\r\n                child = <Ticket/>\r\n            else if(store.getState().table.name=='Кино')\r\n                child = <Cinema/>\r\n            else if(store.getState().table.name=='Email')\r\n                child = <Email/>\r\n            else if(store.getState().table.name=='Площадка')\r\n                child = <Where/>\r\n            else if(store.getState().table.name=='Вакансии')\r\n                child = <Vacancy/>\r\n            else if(store.getState().table.name=='Реклама')\r\n                child = <Ads/>\r\n            else if(store.getState().table.name=='Контакт')\r\n                child = <Contact/>\r\n            else if(store.getState().table.name=='FAQ')\r\n                child = <Faq/>\r\n            else if(store.getState().table.name=='Логотип')\r\n                child = <Logo/>\r\n            else if(store.getState().table.name=='Персонал')\r\n                child = <Personal/>\r\n            else if(store.getState().table.name=='Телефон')\r\n                child = <Phone/>\r\n            else if(store.getState().table.name=='Социалки')\r\n                child = <Social/>\r\n            else if(store.getState().table.name=='Пользователи')\r\n                child = <User/>\r\n            else if(store.getState().table.name=='Биллборды')\r\n                child = <Billboard/>\r\n            else if(store.getState().table.name=='Залы')\r\n                child = <Hall/>\r\n            else if(store.getState().table.name=='Баланс')\r\n                child = <Balance/>\r\n            else if(store.getState().table.name=='Кассы')\r\n                child = <Cashbox/>\r\n            else if(store.getState().table.name=='Платежи')\r\n                child = <Payment/>\r\n            dispatch ({\r\n                type: SET_MINI_DIALOG,\r\n                payload: {title: store.getState().table.name, child: child}\r\n            })\r\n            dispatch ({\r\n                type: SHOW_MINI_DIALOG,\r\n                payload: true\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function showMiniDialog(show) {\r\n    return {\r\n        type: SHOW_MINI_DIALOG,\r\n        payload: show\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.fdc48fe4.png\";","import React from 'react';\r\nimport MUIDataTable from 'mui-datatables';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as tableActions from '../redux/actions/table'\r\nimport * as mini_dialogActions from '../redux/actions/mini_dialog'\r\nimport ImageGallery from 'react-image-gallery';\r\nimport 'react-image-gallery/styles/css/image-gallery.css';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { mainWindow } from '../App'\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport logo from '../logo.png';\r\n\r\nconst message = mainWindow.current.offsetWidth>800?\r\n    <>\r\n        DsrAdmin - не будущее, а настоящее\r\n        <br/>\r\n        <i style={{fontWeight: '500', fontSize: '18px'}}>Для начала выберите пункт в боковом меню</i>\r\n    </>\r\n    :\r\n    <>\r\n    DsrAdmin - не будущее, а настоящее\r\n        <br/>\r\n        <i style={{fontWeight: '500', fontSize: '18px'}}>Для начала нажмите значок и выберите пункт в боковом меню</i>\r\n    </>;\r\nconst width = mainWindow.current.offsetWidth>800? 500: 240;\r\nconst styles = theme => ({\r\n    mainMessage: {\r\n        backgroundImage: \"url('https://i.imgur.com/ZE6v9a9.jpg')\",\r\n        backgroundPosition: 'center center',\r\n        backgroundRepeat: 'no-repeat',\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    message: {\r\n        color: '#ffffff',\r\n        fontWeight: 'bold',\r\n        fontSize: '20px',\r\n        width: width,\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: 'calc((100% - '+width+'px)/2)',\r\n        marginRight: 'calc((100% - '+width+'px)/2)'\r\n    }\r\n});\r\n\r\nconst Table = React.memo(\r\n    (props) => {\r\n        const { classes } = props;\r\n        let getMuiTheme = () => createMuiTheme({\r\n            overrides: {\r\n                MUIDataTableBodyCell: {\r\n                    root: {\r\n                        textOverflow: 'ellipsis',\r\n                        maxHeight: '500px',\r\n                        maxWidth: '200px',\r\n                        overflow: 'hidden',\r\n                        wordWrap: 'break-word'\r\n                    }\r\n                },\r\n                MuiPaper: {\r\n                    elevation4:{\r\n                        boxShadow: 'none'\r\n                    }\r\n                }\r\n\r\n            }\r\n        })\r\n        const { row, count, page, data, data1, name, search, sort } = props.table;\r\n        const { getData, deleteData, setSelected } = props.tableActions;\r\n        const { showAddMiniDialog, setMiniDialog, showMiniDialog } = props.mini_dialogActions;\r\n        const { authenticated } = props.user;\r\n        const options = {\r\n            serverSide: true,\r\n            filterType: 'checkbox',\r\n            filter: false,\r\n            print: false,\r\n            rowsPerPage: 10,\r\n            count: count,\r\n            page: page,\r\n            rowsPerPageOptions: false,\r\n            downloadOptions: {filename: 'tableDownload.csv', separator: ','},\r\n            onColumnSortChange: (changedColumn, direction) => {\r\n                getData({search: search, sort: [changedColumn, direction], page: page, name: name})\r\n                setSelected(-1)\r\n            },\r\n            onSearchChange: (searchText) => {\r\n                getData({search: searchText, sort: '', page: 0, name: name})\r\n                setSelected(-1)\r\n            },\r\n            onChangePage: (currentPage) => {\r\n                getData({search: search, sort: sort, page: currentPage, name: name})\r\n                setSelected(-1)\r\n            },\r\n            onRowsDelete: (rowsDeleted) => {\r\n                let deletedId = [], oldFile = '';\r\n                for(let i=0; i<rowsDeleted.data.length; i++){\r\n                    deletedId.push(data[rowsDeleted.data[i].index][data[rowsDeleted.data[i].index].length-1])\r\n                    if(data[rowsDeleted.data[i].index][0]!=undefined&&(data[i][0].includes('http')||data[rowsDeleted.data[i].index][0].includes('https')))\r\n                        oldFile += '\\n' + data[rowsDeleted.data[i].index][0]\r\n                }\r\n                deleteData({oldFile: oldFile, search: search, sort: sort, page: page, name: name, deleted: JSON.stringify(deletedId)})\r\n                setSelected(-1)\r\n            },\r\n            onCellClick: (colData, colMeta) => {\r\n                colData = colData.toString()\r\n                if(colData!=undefined&&!(colData.includes('http')||colData.includes('https'))) {\r\n                    setSelected(colMeta.rowIndex)\r\n                    if(name === 'Событие'){\r\n                        props.history.push('/event')\r\n                    } else if(name === 'Сеанс'){\r\n                        props.history.push('/seance')\r\n                    } else {\r\n                        showAddMiniDialog()\r\n                    }\r\n                } else if(name === 'Билеты'||name === 'Билеты кино') {\r\n                    let win = window.open(colData, '_blank');\r\n                    win.focus();\r\n                } else {\r\n                    let images = []\r\n                    for (let i = 0; i<colData.split('\\n').length; i++)\r\n                        images.push({original: colData.split('\\n')[i], thumbnail: colData.split('\\n')[i]})\r\n                    setMiniDialog('Просмотр', <ImageGallery items={images} showThumbnails={false} showFullscreenButton={false} showPlayButton={false} />);\r\n                    showMiniDialog(true)\r\n                }\r\n            },\r\n            onTableChange: (action, tableState) => {\r\n                if(action==='search'&&tableState.searchText===null){\r\n                    getData({search: '', sort: '', page: 0, name: name})\r\n                    setSelected(-1)\r\n                }\r\n            }\r\n        };\r\n        return (\r\n                <>\r\n                    {authenticated&&name!=''?\r\n                        <MuiThemeProvider theme={getMuiTheme()}>\r\n                            <MUIDataTable\r\n                                title={name}\r\n                                data={data1}\r\n                                columns={row}\r\n                                options={options}\r\n                            />\r\n                        </MuiThemeProvider>\r\n                        :\r\n                        <div className={classes.mainMessage}>\r\n                            <div className={classes.message}>\r\n                                <img style={{width:'100px'}} src={logo} /><br/>\r\n                                <br/>\r\n                                {message}\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </>\r\n            );\r\n        }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        table: state.table,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nTable.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Table));","import {\r\n    GET_DATA,\r\n    GET_IDS,\r\n    SET_SELECTED\r\n} from '../constants/table'\r\nimport axios from 'axios';\r\nimport FormData from 'form-data';\r\n\r\nexport function setData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = new FormData();\r\n            let _headers;\r\n            data.append('id', payload.id);\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            data.append('new', JSON.stringify(payload.data));\r\n            if(payload.oldFile != undefined){\r\n                data.append('oldFile', payload.oldFile);\r\n            }\r\n            if(payload.oldFileWhatermark != undefined){\r\n                data.append('oldFileWhatermark', payload.oldFileWhatermark);\r\n            }\r\n            if (payload.file != undefined) {\r\n                data.append('fileLength', payload.file.length);\r\n                for(let i=0; i<payload.file.length; i++){\r\n                    data.append('file'+i, payload.file[i]);\r\n                    data.append('fileName'+i, payload.file[i].name);\r\n                }\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization': 'Bearer ' + localStorage.userBiletikiAdmin,\r\n                }\r\n            } else {\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }\r\n            }\r\n            const res = await axios.post(\r\n                '/data/add',\r\n                data,\r\n                {headers: _headers});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name!='Произведение')\r\n                for(let i = 0; i<res.data.data.length; i++){\r\n                    let data2=[]\r\n                    for(let i1 = 0; i1<res.data.data[i].length; i1++){\r\n                        let data3 = res.data.data[i][i1]\r\n                        if(data3.length>200)\r\n                            data3 = data3.substring(0, 200)+'...'\r\n                        data2.push(data3)\r\n                    }\r\n                    data1.push(data2)\r\n                }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}\r\n\r\nexport function addData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = new FormData();\r\n            let _headers;\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            data.append('new', JSON.stringify(payload.data));\r\n            if (payload.file != undefined) {\r\n                data.append('fileLength', payload.file.length);\r\n                for(let i=0; i<payload.file.length; i++){\r\n                    data.append('file'+i, payload.file[i]);\r\n                    data.append('fileName'+i, payload.file[i].name);\r\n                }\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization': 'Bearer ' + localStorage.userBiletikiAdmin\r\n                }\r\n            } else {\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }\r\n            }\r\n            const res = await axios.post(\r\n                '/data/add',\r\n                data,\r\n                {headers: _headers});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name!='Произведение')\r\n                for(let i = 0; i<res.data.data.length; i++){\r\n                    let data2=[]\r\n                    for(let i1 = 0; i1<res.data.data[i].length; i1++){\r\n                        let data3 = res.data.data[i][i1]\r\n                        if(data3.length>200)\r\n                            data3 = data3.substring(0, 200)+'...'\r\n                        data2.push(data3)\r\n                    }\r\n                    data1.push(data2)\r\n                }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}\r\n\r\nexport function setSelected(payload) {\r\n    return {\r\n        type: SET_SELECTED,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport function getIds(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = new FormData();\r\n            data.append('name', payload);\r\n            const res = await axios.post(\r\n                '/data/getIds',\r\n                data,\r\n                {headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }});\r\n            dispatch({\r\n                type: GET_IDS,\r\n                payload: res.data\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}\r\n\r\nexport function getData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = new FormData();\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            const res = await axios.post(\r\n                '/data/get',\r\n                data,\r\n                {headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name!='Произведение')\r\n                for(let i = 0; i<res.data.data.length; i++){\r\n                    let data2=[]\r\n                    for(let i1 = 0; i1<res.data.data[i].length; i1++){\r\n                        let data3 = res.data.data[i][i1]\r\n                        if(data3.length>200)\r\n                            data3 = data3.substring(0, 200)+'...'\r\n                        data2.push(data3)\r\n                    }\r\n                    data1.push(data2)\r\n                }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}\r\n\r\nexport const getDataSimple = async (payload) => {\r\n    try {\r\n        const data = new FormData();\r\n        data.append('name', payload.name);\r\n        if(payload.data!==undefined)\r\n            data.append('data', JSON.stringify(payload.data));\r\n        const res = await axios.post(\r\n            '/data/get',\r\n            data,\r\n            {headers: {\r\n                'accept': 'application/json',\r\n                'Accept-Language': 'en-US,en;q=0.8',\r\n                'X-Requested-With': 'XMLHttpRequest',\r\n                'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n            }});\r\n        return res.data\r\n    } catch(error) {\r\n        console.error(error)\r\n    }\r\n}\r\n\r\nexport const addDataSimple = async (payload) => {\r\n    try {\r\n        const data = new FormData();\r\n        data.append('name', payload.name);\r\n        data.append('new', JSON.stringify(payload.data));\r\n        const res = await axios.post(\r\n            '/data/add',\r\n            data,\r\n            {headers: {\r\n                'accept': 'application/json',\r\n                'Accept-Language': 'en-US,en;q=0.8',\r\n                'X-Requested-With': 'XMLHttpRequest',\r\n                'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n            }});\r\n        return res.data\r\n    } catch(error) {\r\n        console.error(error)\r\n    }\r\n}\r\n\r\nexport function deleteData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = new FormData();\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            data.append('deleted', payload.deleted);\r\n            if(payload.oldFile != undefined && payload.oldFile.length > 0){\r\n                data.append('oldFile', payload.oldFile);\r\n            }\r\n            const res = await axios.post(\r\n                '/data/delete',\r\n                data,\r\n                {headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name!=='Произведение')\r\n                for(let i = 0; i<res.data.data.length; i++){\r\n                    let data2=[]\r\n                    for(let i1 = 0; i1<res.data.data[i].length; i1++){\r\n                        let data3 = res.data.data[i][i1]\r\n                        if(data3.length>200)\r\n                            data3 = data3.substring(0, 200)+'...'\r\n                        data2.push(data3)\r\n                    }\r\n                    data1.push(data2)\r\n                }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}"],"sourceRoot":""}