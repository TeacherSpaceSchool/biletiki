{"version":3,"sources":["redux/actions/app.js","component/Add/About.js","component/Add/Email.js","component/Add/Ticket.js","component/Add/Contact.js","component/Add/Ads.js","component/Add/Faq.js","component/Add/Logo.js","component/Add/Personal.js","component/Add/Phone.js","component/Add/Social.js","component/Add/Vacancy.js","component/Add/Where.js","component/Add/User.js","component/Add/Billboard.js","component/Add/Cinema.js","component/Add/Mailing.js","component/Add/Hall.js","component/Add/TicketCinema.js","component/Add/Balance.js","component/Add/Cashbox.js","component/Add/Payment.js","redux/actions/mini_dialog.js","logo.png","component/Table.js","redux/actions/table.js"],"names":["showDrawer","show","type","SHOW_DRAWER","payload","showLoad","SHOW_LOAD","getElsom","_ref","Object","C_projects_biletiki_biletiki_admin_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_projects_biletiki_biletiki_admin_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","data","res","wrap","_context","prev","next","FormData","append","wallet","axios","post","sent","abrupt","t0","console","error","stop","this","_x","apply","arguments","width","mainWindow","current","offsetWidth","Sign","React","memo","props","showMiniDialog","mini_dialogActions","_props$tableActions","tableActions","setSelected","addData","setData","_props$table","table","selected","page","search","sort","_useState","useState","_useState2","slicedToArray","descriptionRu","setDescriptionRu","_useState3","_useState4","descriptionKg","setDescriptionKg","classes","react_default","createElement","className","urls","TextField_default","multiline","rowsMax","label","textField","margin","value","onChange","event","target","Button_default","variant","color","onClick","name","id","button","withStyles","theme","spacing","unit","marginLeft","marginRight","maxHeight","overflow","error_message","marginTop","marginBottom","fontWeight","connect","state","mini_dialog","dispatch","bindActionCreators","email","setEmail","ticket","hash","user","where","status","setStatus","statuses","JSON","parse","text_message","select","SelectProps","MenuProps","menu","undefined","map","option","MenuItem_default","key","length","wordWrap","coords","setСoords","cashbox","setСashbox","_useState5","_useState6","address","setAddress","_useState7","_useState8","booking","setBooking","_useState9","_useState10","connection","setConnection","_useState11","_useState12","return1","setReturn1","_useState13","_useState14","general","setGeneral","_useState15","_useState16","cooperation","setCooperation","dateStart1","types","setType","setName","link","setLink","replace","dateEnd1","dateStart","setDateStart","dateEnd","setDateEnd","file","setFile","fileNames","setFileNames","htmlFor","component","oldFile","accept","style","display","files","i","questionRu","setQuestionRu","answerRu","setAnswerRu","questionKg","setQuestionKg","answerKg","setAnswerKg","names","contact","setContact","whoRu","setWhoRu","whoKg","setWhoKg","phone","setPhone","url","nameRu","setNameRu","requirementsRu","setRequirementsRu","dutiesRu","setDutiesRu","conditionsRu","setConditionsRu","nameKg","setNameKg","requirementsKg","setRequirementsKg","dutiesKg","setDutiesKg","conditionsKg","setConditionsKg","city","setCity","setCoords","surname","setSurame","phonenumber","setPhonenumber","roles","role","setRole","password","setPassword","Fragment","useEffect","asyncToGenerator","regenerator_default","setEvents","getDataSimple","t1","events","split","setEvent","part1","part2","log","_id","genre","setGenre","duration","setDuration","ageCategory","setAgeCategory","premier","setPremier","producers","setPoducers","actors","setActors","_useState17","_useState18","description","setDescription","_useState19","_useState20","_useState21","_useState22","mailuser","setMailuser","mailpass","setMailpass","mailchimpInstance","setMailchimpInstance","listUniqueId","setListUniqueId","mailchimpApiKey","setMailchimpApiKey","setUsers","setUser","users","movie","cinema","hall","seats","priceSelect","date","balance","setBalance","geo","setGeo","service","sum","meta","sms","setMiniDialog","title","child","SET_MINI_DIALOG","showAddMiniDialog","store","getState","Mailing","TicketCinema","About","Ticket","Cinema","Email","Where","Vacancy","Ads","Contact","Faq","Logo","Personal","Phone","Social","User","Billboard","Hall","Balance","Cashbox","Payment","SHOW_MINI_DIALOG","module","exports","__webpack_require__","p","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","mui_datatables__WEBPACK_IMPORTED_MODULE_1__","mui_datatables__WEBPACK_IMPORTED_MODULE_1___default","react_redux__WEBPACK_IMPORTED_MODULE_2__","redux__WEBPACK_IMPORTED_MODULE_3__","_redux_actions_table__WEBPACK_IMPORTED_MODULE_4__","_redux_actions_mini_dialog__WEBPACK_IMPORTED_MODULE_5__","react_image_gallery__WEBPACK_IMPORTED_MODULE_6__","react_image_gallery__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_8__","_App__WEBPACK_IMPORTED_MODULE_9__","_logo_png__WEBPACK_IMPORTED_MODULE_10__","_logo_png__WEBPACK_IMPORTED_MODULE_10___default","message","fontSize","Table","row","count","data1","getData","deleteData","_props$mini_dialogAct","authenticated","options","serverSide","filterType","filter","print","rowsPerPage","rowsPerPageOptions","downloadOptions","filename","separator","onColumnSortChange","changedColumn","direction","onSearchChange","searchText","onChangePage","currentPage","onRowsDelete","rowsDeleted","deletedId","push","index","includes","deleted","stringify","onCellClick","colData","colMeta","toString","window","open","focus","images","original","thumbnail","items","showThumbnails","showFullscreenButton","showPlayButton","rowIndex","history","onTableChange","action","tableState","createMuiTheme","overrides","MUIDataTableBodyCell","root","textOverflow","maxWidth","MuiPaper","elevation4","boxShadow","columns","mainMessage","src","logo","backgroundImage","backgroundPosition","backgroundRepeat","height","justifyContent","alignItems","_headers","_i","_i2","data2","i1","data3","oldFileWhatermark","Accept-Language","Content-Type","concat","_boundary","X-Requested-With","Authorization","localStorage","userBiletikiAdmin","headers","substring","GET_DATA","_ref2","_callee2","_i3","_i4","_context2","_x2","SET_SELECTED","getIds","_ref3","_callee3","_context3","GET_IDS","_x3","_ref4","_callee4","_i5","_context4","_x4","_ref5","_callee5","_context5","_x5","addDataSimple","_ref6","_callee6","_context6","_x6","_ref7","_callee7","_i6","_context7","_x7"],"mappings":"kSAIO,SAASA,EAAWC,GACvB,MAAO,CACHC,KAAMC,IACNC,QAASH,GAIV,SAASI,EAASJ,GACrB,MAAO,CACHC,KAAMI,IACNF,QAASH,GAKV,IAAIM,EAAQ,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAE,SAAAC,EAAOV,GAAP,IAAAW,EAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,GAEPJ,EAAO,IAAIM,KACZC,OAAO,SAAUlB,EAAQmB,QAHjBL,EAAAE,KAAA,EAIKI,IAAMC,KACpB,iDACAV,GANS,cAIPC,EAJOE,EAAAQ,KAAAR,EAAAS,OAAA,SAONX,EAAID,MAPE,OAAAG,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SASbW,QAAQC,MAARZ,EAAAU,IATa,yBAAAV,EAAAa,SAAAjB,EAAAkB,KAAA,YAAF,gBAAAC,GAAA,OAAAzB,EAAA0B,MAAAF,KAAAG,YAAA,yVCTbC,EAAQC,IAAWC,QAAQC,YAAY,IAAK,IAAMF,IAAWC,QAAQC,YAAY,IA2BjFC,EAAQC,IAAMC,KAChB,SAACC,GAAS,IACEC,EAAmBD,EAAME,mBAAzBD,eADFE,EAEoCH,EAAMI,aAAxCC,EAFFF,EAEEE,YAAaC,EAFfH,EAEeG,QAASC,EAFxBJ,EAEwBI,QAFxBC,EAGyCR,EAAMS,MAA7CC,EAHFF,EAGEE,SAAUtC,EAHZoC,EAGYpC,KAAMuC,EAHlBH,EAGkBG,KAAMC,EAHxBJ,EAGwBI,OAAQC,EAHhCL,EAGgCK,KAHhCC,EAKkCC,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAL3EM,EAAAlD,OAAAmD,EAAA,EAAAnD,CAAAgD,EAAA,GAKDI,EALCF,EAAA,GAKcG,EALdH,EAAA,GAAAI,EASkCL,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAT3EW,EAAAvD,OAAAmD,EAAA,EAAAnD,CAAAsD,EAAA,GASDE,EATCD,EAAA,GAScE,EATdF,EAAA,GAaEG,EAAYxB,EAAZwB,QACR,OACIC,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAAA,OAAKC,UAAWH,EAAQI,MAAxB,+OACkDH,EAAAxD,EAAAyD,cAAA,eAElDD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI6D,WAAS,EACTC,QAAQ,IACRC,MAAM,mDACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOjB,EACPkB,SArBe,SAACC,GACxBlB,EAAiBkB,EAAMC,OAAOH,UAsB1BV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,OAAKC,UAAWH,EAAQI,MAAxB,+OACkDH,EAAAxD,EAAAyD,cAAA,eAElDD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI6D,WAAS,EACTC,QAAQ,IACRC,MAAM,6CACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOb,EACPc,SA/Be,SAACC,GACxBd,EAAiBc,EAAMC,OAAOH,UAgC1BV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,UAAUC,QAAS,YAClC,IAAZhC,EACCJ,EAAQ,CAACM,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,4BAASvE,KAAM,CAAC8C,cAAeA,EAAeI,cAAeA,KAEpHf,EAAQ,CAACqC,GAAIxE,EAAKsC,GAAU,GAAIE,OAAQ,GAAIC,KAAM,GAAIF,KAAM,EAAGgC,KAAM,4BAASvE,KAAM,CAAC8C,cAAeA,EAAeI,cAAeA,KACtIjB,GAAa,GACbJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAN/C,0DASApB,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,YAAYC,QAAS,WAAKrC,GAAa,GAAIJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAAxH,4CA2BLC,2BA3GA,SAAAC,GAAK,MAAK,CACrBF,OAAQ,CACJX,OAAQa,EAAMC,QAAQC,MAE1BhB,UAAW,CACPiB,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BxD,MAAOA,GAEXmC,KAAM,CACFM,OAAQa,EAAMC,QAAQC,KACtBxD,MAAOA,EACP2D,UAAW,IACXC,SAAU,QAEdC,cAAe,CACXC,UAAWR,EAAMC,QAAQC,KACzBO,aAAcT,EAAMC,QAAQC,KAC5BC,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BR,MAAO,MACPgB,WAAY,UAsFLX,CAAmBY,YAlBlC,SAA0BC,GACtB,MAAO,CACHC,YAAaD,EAAMC,YACnBnD,MAAOkD,EAAMlD,QAIrB,SAA4BoD,GACxB,MAAO,CACH3D,mBAAoB4D,YAAmB5D,EAAoB2D,GAC3DzD,aAAc0D,YAAmB1D,EAAcyD,KAQrBH,CAA6C7D,IC7GzEJ,EAAQC,IAAWC,QAAQC,YAAY,IAAK,IAAMF,IAAWC,QAAQC,YAAY,IA2BjFC,EAAQC,IAAMC,KAChB,SAACC,GAAS,IACEC,EAAmBD,EAAME,mBAAzBD,eADFE,EAEoCH,EAAMI,aAAxCC,EAFFF,EAEEE,YAAaC,EAFfH,EAEeG,QAASC,EAFxBJ,EAEwBI,QAFxBC,EAGyCR,EAAMS,MAA7CC,EAHFF,EAGEE,SAAUtC,EAHZoC,EAGYpC,KAAMuC,EAHlBH,EAGkBG,KAAMC,EAHxBJ,EAGwBI,OAAQC,EAHhCL,EAGgCK,KAHhCC,EAKkBC,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAL3DM,EAAAlD,OAAAmD,EAAA,EAAAnD,CAAAgD,EAAA,GAKDiD,EALC/C,EAAA,GAKMgD,EALNhD,EAAA,GASEQ,EAAYxB,EAAZwB,QACR,OACIC,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,QACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAO4B,EACP3B,SAZO,SAACC,GAChB2B,EAAS3B,EAAMC,OAAOH,UAalBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,UAAUC,QAAS,YAClC,IAAZhC,EACCJ,EAAQ,CAACM,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,QAASvE,KAAM,CAAC2F,MAAOA,KAE9ExD,EAAQ,CAACqC,GAAIxE,EAAKsC,GAAU,GAAIE,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,QAASvE,KAAM,CAAC2F,MAAOA,KACzG1D,GAAa,GACbJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAN/C,0DASApB,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,YAAYC,QAAS,WAAKrC,GAAa,GAAIJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAAxH,4CA2BLC,2BApFA,SAAAC,GAAK,MAAK,CACrBF,OAAQ,CACJX,OAAQa,EAAMC,QAAQC,MAE1BhB,UAAW,CACPiB,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BxD,MAAOA,GAEXmC,KAAM,CACFM,OAAQa,EAAMC,QAAQC,KACtBxD,MAAOA,EACP2D,UAAW,IACXC,SAAU,QAEdC,cAAe,CACXC,UAAWR,EAAMC,QAAQC,KACzBO,aAAcT,EAAMC,QAAQC,KAC5BC,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BR,MAAO,MACPgB,WAAY,UA+DLX,CAAmBY,YAlBlC,SAA0BC,GACtB,MAAO,CACHC,YAAaD,EAAMC,YACnBnD,MAAOkD,EAAMlD,QAIrB,SAA4BoD,GACxB,MAAO,CACH3D,mBAAoB4D,YAAmB5D,EAAoB2D,GAC3DzD,aAAc0D,YAAmB1D,EAAcyD,KAQrBH,CAA6C7D,sBCrFzEJ,EAAQC,IAAWC,QAAQC,YAAY,IAAK,IAAMF,IAAWC,QAAQC,YAAY,IAsCjFC,EAAQC,IAAMC,KAChB,SAACC,GAAS,IACEC,EAAmBD,EAAME,mBAAzBD,eADFE,EAEoCH,EAAMI,aAAxCC,EAFFF,EAEEE,YAAaC,EAFfH,EAEeG,QAASC,EAFxBJ,EAEwBI,QAFxBC,EAGyCR,EAAMS,MAA7CC,EAHFF,EAGEE,SAAUtC,EAHZoC,EAGYpC,KAAMuC,EAHlBH,EAGkBG,KAAMC,EAHxBJ,EAGwBI,OAAQC,EAHhCL,EAGgCK,KAElCoD,GAAqB,IAAZvD,EAActC,EAAKsC,GAAU,GAAG,GACzCwD,GAAmB,IAAZxD,EAActC,EAAKsC,GAAU,GAAG,GACvCyD,GAAmB,IAAZzD,EAActC,EAAKsC,GAAU,GAAG,GACvC2B,GAAoB,IAAZ3B,EAActC,EAAKsC,GAAU,GAAG,GACxC0D,GAAoB,IAAZ1D,EAActC,EAAKsC,GAAU,GAAG,GATtCI,EAUoBC,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAV7DM,EAAAlD,OAAAmD,EAAA,EAAAnD,CAAAgD,EAAA,GAUDuD,EAVCrD,EAAA,GAUOsD,EAVPtD,EAAA,GAWFuD,EAAW,CAAC,uCAAU,yDAAa,qEAAe,wCAM9C/C,IAFgB,IAAZd,GAAc8D,KAAKC,MAAMrG,EAAKsC,GAAU,IAEhCV,EAAZwB,SACR,OACIC,EAAAxD,EAAAyD,cAAA,OAAKC,UAAWH,EAAQkD,cACpBjD,EAAAxD,EAAAyD,cAAA,2CACAD,EAAAxD,EAAAyD,cAAA,WACCuC,EACDxC,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,iBACAD,EAAAxD,EAAAyD,cAAA,WACCwC,EACDzC,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,qFACAD,EAAAxD,EAAAyD,cAAA,WACCyC,EACD1C,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,+EACAD,EAAAxD,EAAAyD,cAAA,WACCW,EACDZ,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,6DACAD,EAAAxD,EAAAyD,cAAA,WACC0C,EACD3C,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WAaAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI0G,QAAM,EACNC,YAAa,CACTC,UAAW,CACPlD,UAAWH,EAAQsD,OAG3B9C,MAAM,uCACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOkC,EACPjC,SAzDQ,SAACC,GACjBiC,EAAUjC,EAAMC,OAAOH,cA0DF4C,GAAZR,EACGA,EAASS,IAAI,SAAAC,GAAM,OACfxD,EAAAxD,EAAAyD,cAACwD,EAAAjH,EAAD,CAAUkH,IAAKF,EAAQ9C,MAAO8C,GACzBA,KAIT,MAGRxD,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,UAAUC,QAAS,YAClC,IAAZhC,EACCJ,EAAQ,CAACM,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,uCAAUvE,KAAM,CAACiG,OAAQA,KAEhF9D,EAAQ,CAACqC,GAAIxE,EAAKsC,GAAUtC,EAAKsC,GAAU0E,OAAO,GAAIxE,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,uCAAUvE,KAAM,CAACiG,OAAQA,KACjIhE,GAAa,GACbJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAN/C,0DASApB,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,YAAYC,QAAS,WAAKrC,GAAa,GAAIJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAAxH,4CA2BLC,2BA5JA,SAAAC,GAAK,MAAK,CACrBF,OAAQ,CACJX,OAAQa,EAAMC,QAAQC,MAE1BhB,UAAW,CACPiB,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BxD,MAAOA,GAEXmC,KAAM,CACFM,OAAQa,EAAMC,QAAQC,KACtBxD,MAAOA,EACP2D,UAAW,IACXC,SAAU,QAEdC,cAAe,CACXC,UAAWR,EAAMC,QAAQC,KACzBO,aAAcT,EAAMC,QAAQC,KAC5BC,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BR,MAAO,MACPgB,WAAY,QAEhBiB,aAAc,CACVnB,UAAWR,EAAMC,QAAQC,KACzBO,aAAcT,EAAMC,QAAQC,KAC5BC,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BI,SAAU,SACVgC,SAAU,cAEdP,KAAM,CACFrF,MAAO,OA4HAqD,CAAmBY,YAlBlC,SAA0BC,GACtB,MAAO,CACHC,YAAaD,EAAMC,YACnBnD,MAAOkD,EAAMlD,QAIrB,SAA4BoD,GACxB,MAAO,CACH3D,mBAAoB4D,YAAmB5D,EAAoB2D,GAC3DzD,aAAc0D,YAAmB1D,EAAcyD,KAQrBH,CAA6C7D,IC/JzEJ,EAAQC,IAAWC,QAAQC,YAAY,IAAK,IAAMF,IAAWC,QAAQC,YAAY,IA2BjFC,EAAQC,IAAMC,KAChB,SAACC,GAAS,IACEC,EAAmBD,EAAME,mBAAzBD,eADFE,EAEoCH,EAAMI,aAAxCC,EAFFF,EAEEE,YAAaC,EAFfH,EAEeG,QAASC,EAFxBJ,EAEwBI,QAFxBC,EAGyCR,EAAMS,MAA7CC,EAHFF,EAGEE,SAAUtC,EAHZoC,EAGYpC,KAAMuC,EAHlBH,EAGkBG,KAAMC,EAHxBJ,EAGwBI,OAAQC,EAHhCL,EAGgCK,KAHhCC,EAKoBC,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAL7DM,EAAAlD,OAAAmD,EAAA,EAAAnD,CAAAgD,EAAA,GAKDwE,EALCtE,EAAA,GAKOuE,EALPvE,EAAA,GAAAI,EASsBL,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAT/DW,EAAAvD,OAAAmD,EAAA,EAAAnD,CAAAsD,EAAA,GASDoE,EATCnE,EAAA,GASQoE,EATRpE,EAAA,GAAAqE,EAasB3E,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAb/DiF,EAAA7H,OAAAmD,EAAA,EAAAnD,CAAA4H,EAAA,GAaDE,EAbCD,EAAA,GAaQE,EAbRF,EAAA,GAAAG,EAiBsB/E,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAjB/DqF,EAAAjI,OAAAmD,EAAA,EAAAnD,CAAAgI,EAAA,GAiBDE,EAjBCD,EAAA,GAiBQE,EAjBRF,EAAA,GAAAG,EAqB4BnF,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IArBrEyF,EAAArI,OAAAmD,EAAA,EAAAnD,CAAAoI,EAAA,GAqBDE,EArBCD,EAAA,GAqBWE,EArBXF,EAAA,GAAAG,EAyBsBvF,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAzB/D6F,EAAAzI,OAAAmD,EAAA,EAAAnD,CAAAwI,EAAA,GAyBDE,EAzBCD,EAAA,GAyBQE,EAzBRF,EAAA,GAAAG,EA6BsB3F,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IA7B/DiG,EAAA7I,OAAAmD,EAAA,EAAAnD,CAAA4I,EAAA,GA6BDE,EA7BCD,EAAA,GA6BQE,EA7BRF,EAAA,GAAAG,EAiC8B/F,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAjCvEqG,EAAAjJ,OAAAmD,EAAA,EAAAnD,CAAAgJ,EAAA,GAiCDE,EAjCCD,EAAA,GAiCYE,EAjCZF,EAAA,GAqCEvF,EAAYxB,EAAZwB,QACR,OACIC,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,+DACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOmD,EACPlD,SAxCQ,SAACC,GACjBkD,EAAUlD,EAAMC,OAAOH,UAyCnBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,iCACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOqD,EACPpD,SA7CS,SAACC,GAClBoD,EAAWpD,EAAMC,OAAOH,UA8CpBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,iCACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOyD,EACPxD,SAlDS,SAACC,GAClBwD,EAAWxD,EAAMC,OAAOH,UAmDpBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,2EACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAO6D,EACP5D,SAvDS,SAACC,GAClB4D,EAAW5D,EAAMC,OAAOH,UAwDpBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,iCACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOiE,EACPhE,SA5DY,SAACC,GACrBgE,EAAchE,EAAMC,OAAOH,UA6DvBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,6CACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOqE,EACPpE,SAjES,SAACC,GAClBoE,EAAWpE,EAAMC,OAAOH,UAkEpBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,6CACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOyE,EACPxE,SAtES,SAACC,GAClBwE,EAAWxE,EAAMC,OAAOH,UAuEpBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,uFACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAO6E,EACP5E,SA3Ea,SAACC,GACtB4E,EAAe5E,EAAMC,OAAOH,UA4ExBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,UAAUC,QAAS,YAClC,IAAZhC,EACCJ,EAAQ,CAACM,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,6CAAWvE,KAAM,CAACkH,OAAQA,EAAQE,QAASA,EAASI,QAASA,EAASI,QAASA,EAASI,WAAYA,EAAYI,QAASA,EAASI,QAASA,EAASI,YAAaA,KAExNzG,EAAQ,CAACqC,GAAIxE,EAAKsC,GAAU,GAAIE,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,6CAAWvE,KAAM,CAACkH,OAAQA,EAAQE,QAASA,EAASI,QAASA,EAASI,QAASA,EAASI,WAAYA,EAAYI,QAASA,EAASI,QAASA,EAASI,YAAaA,KACnP3G,GAAa,GACbJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAN/C,0DASApB,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,YAAYC,QAAS,WAAKrC,GAAa,GAAIJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAAxH,4CA2BLC,2BA/KA,SAAAC,GAAK,MAAK,CACrBF,OAAQ,CACJX,OAAQa,EAAMC,QAAQC,MAE1BhB,UAAW,CACPiB,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BxD,MAAOA,GAEXmC,KAAM,CACFM,OAAQa,EAAMC,QAAQC,KACtBxD,MAAOA,EACP2D,UAAW,IACXC,SAAU,QAEdC,cAAe,CACXC,UAAWR,EAAMC,QAAQC,KACzBO,aAAcT,EAAMC,QAAQC,KAC5BC,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BR,MAAO,MACPgB,WAAY,UA0JLX,CAAmBY,YAlBlC,SAA0BC,GACtB,MAAO,CACHC,YAAaD,EAAMC,YACnBnD,MAAOkD,EAAMlD,QAIrB,SAA4BoD,GACxB,MAAO,CACH3D,mBAAoB4D,YAAmB5D,EAAoB2D,GAC3DzD,aAAc0D,YAAmB1D,EAAcyD,KAQrBH,CAA6C7D,IChLzEJ,EAAQC,IAAWC,QAAQC,YAAY,IAAK,IAAMF,IAAWC,QAAQC,YAAY,IA2BjFC,EAAQC,IAAMC,KAChB,SAACC,GAAS,IAkBFkH,EAjBIjH,EAAmBD,EAAME,mBAAzBD,eADFE,EAEoCH,EAAMI,aAAxCC,EAFFF,EAEEE,YAAaC,EAFfH,EAEeG,QAASC,EAFxBJ,EAEwBI,QAFxBC,EAGyCR,EAAMS,MAA7CC,EAHFF,EAGEE,SAAUtC,EAHZoC,EAGYpC,KAAMuC,EAHlBH,EAGkBG,KAAMC,EAHxBJ,EAGwBI,OAAQC,EAHhCL,EAGgCK,KAElCsG,EAAQ,CAAC,MAAO,QALdrG,EAMgBC,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IANzDM,EAAAlD,OAAAmD,EAAA,EAAAnD,CAAAgD,EAAA,GAMDvD,EANCyD,EAAA,GAMKoG,EANLpG,EAAA,GAAAI,EAUgBL,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAVzDW,EAAAvD,OAAAmD,EAAA,EAAAnD,CAAAsD,EAAA,GAUDuB,EAVCtB,EAAA,GAUKgG,EAVLhG,EAAA,GAAAqE,EAcgB3E,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAdzDiF,EAAA7H,OAAAmD,EAAA,EAAAnD,CAAA4H,EAAA,GAcD4B,EAdC3B,EAAA,GAcK4B,EAdL5B,EAAA,IAmBS,IAAZjF,IACCwG,EAAa9I,EAAKsC,GAAU,GAAG8G,QAAQ,IAAK,KAAKA,QAAQ,IAAK,KAAKA,QAAQ,IAAK,KAAK,OApBnF,IA0BFC,EA1BE3B,EAsB0B/E,oBAAqB,IAAZL,EAAcwG,EAAW,oBAtB5DnB,EAAAjI,OAAAmD,EAAA,EAAAnD,CAAAgI,EAAA,GAsBD4B,EAtBC3B,EAAA,GAsBU4B,EAtBV5B,EAAA,IA2BS,IAAZrF,IACC+G,EAAWrJ,EAAKsC,GAAU,GAAG8G,QAAQ,IAAK,KAAKA,QAAQ,IAAK,KAAKA,QAAQ,IAAK,KAAK,OA5BjF,IAAAtB,EA8BsBnF,oBAAqB,IAAZL,EAAc+G,EAAS,oBA9BtDtB,EAAArI,OAAAmD,EAAA,EAAAnD,CAAAoI,EAAA,GA8BD0B,EA9BCzB,EAAA,GA8BQ0B,EA9BR1B,EAAA,GAAAG,EAkCgBvF,mBAAS,IAlCzBwF,EAAAzI,OAAAmD,EAAA,EAAAnD,CAAAwI,EAAA,GAkCDwB,EAlCCvB,EAAA,GAkCKwB,EAlCLxB,EAAA,GAAAG,EAmC0B3F,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAnCnEiG,EAAA7I,OAAAmD,EAAA,EAAAnD,CAAA4I,EAAA,GAmCDsB,EAnCCrB,EAAA,GAmCUsB,EAnCVtB,EAAA,GA8CEnF,EAAYxB,EAAZwB,QACR,OACIC,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,qBACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOQ,EACPP,SA5CM,SAACC,GACfgF,EAAQhF,EAAMC,OAAOH,UA6CjBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,uCACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOmF,EACPlF,SAjDM,SAACC,GACfkF,EAAQlF,EAAMC,OAAOH,UAkDjBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,gEACNzE,KAAK,iBACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOuF,EACPtF,SAlDW,SAACC,GACpBsF,EAAatF,EAAMC,OAAOH,UAmDtBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,kFACNzE,KAAK,iBACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOyF,EACPxF,SAnDS,SAACC,GAClBwF,EAAWxF,EAAMC,OAAOH,UAoDpBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI0G,QAAM,EACNC,YAAa,CACTC,UAAW,CACPlD,UAAWH,EAAQsD,OAG3B9C,MAAM,qBACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAO5E,EACP6E,SA1FM,SAACC,GACf+E,EAAQ/E,EAAMC,OAAOH,cA2FH4C,GAAToC,EACGA,EAAMnC,IAAI,SAAAC,GAAM,OACZxD,EAAAxD,EAAAyD,cAACwD,EAAAjH,EAAD,CAAUkH,IAAKF,EAAQ9C,MAAO8C,GACzBA,KAIT,MAGRxD,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,OAAKC,UAAWH,EAAQI,MACnBoG,GAELvG,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,SAAOwG,QAAQ,yBACXzG,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAOuF,EAAU5C,OAAO,EAAE,UAAU,GAAI+C,UAAU,OAAOxG,UAAWH,EAAQqB,QAAxG,8HAIJpB,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,UAAUC,QAAS,YAClC,IAAZhC,EACCJ,EAAQ,CAACM,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,6CAAWmF,KAAMA,EAAM1J,KAAM,CAACb,KAAMA,EAAMoF,KAAMA,EAAM2E,KAAMA,EAAMI,UAAWA,EAAWE,QAASA,KAExJrH,EAAQ,CAACqC,GAAIxE,EAAKsC,GAAU,GAAIE,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,6CAAWyF,QAAShK,EAAKsC,GAAU,GAAIoH,KAAMA,EAAM1J,KAAM,CAACb,KAAMA,EAAMoF,KAAMA,EAAM2E,KAAMA,EAAMI,UAAWA,EAAWE,QAASA,KAC/MvH,GAAa,GACbJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAN/C,0DASApB,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,YAAYC,QAAS,WAAKrC,GAAa,GAAIJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAAxH,yCAIJpB,EAAAxD,EAAAyD,cAAA,SACI2G,OAAO,UACPC,MAAO,CAAEC,QAAS,QAClB3F,GAAG,wBACHrF,KAAK,OACL6E,SAvGY,SAACC,GACrB0F,EAAQ1F,EAAMC,OAAOkG,OAErB,IADA,IAAIR,EAAU,GACNS,EAAE,EAAGA,EAAEpG,EAAMC,OAAOkG,MAAMpD,OAAQqD,IAC/B,IAAJA,IACCT,GAAW,MACfA,GAAW3F,EAAMC,OAAOkG,MAAMC,GAAG9F,KAAK,IAE1CsF,EAAaD,SAwHVlF,2BA9LA,SAAAC,GAAK,MAAK,CACrBF,OAAQ,CACJX,OAAQa,EAAMC,QAAQC,MAE1BhB,UAAW,CACPiB,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BxD,MAAOA,GAEXmC,KAAM,CACFM,OAAQa,EAAMC,QAAQC,KACtBxD,MAAOA,EACP2D,UAAW,IACXC,SAAU,QAEdC,cAAe,CACXC,UAAWR,EAAMC,QAAQC,KACzBO,aAAcT,EAAMC,QAAQC,KAC5BC,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BR,MAAO,MACPgB,WAAY,UAyKLX,CAAmBY,YAlBlC,SAA0BC,GACtB,MAAO,CACHC,YAAaD,EAAMC,YACnBnD,MAAOkD,EAAMlD,QAIrB,SAA4BoD,GACxB,MAAO,CACH3D,mBAAoB4D,YAAmB5D,EAAoB2D,GAC3DzD,aAAc0D,YAAmB1D,EAAcyD,KAQrBH,CAA6C7D,ICjMzEJ,EAAQC,IAAWC,QAAQC,YAAY,IAAK,IAAMF,IAAWC,QAAQC,YAAY,IA2BjFC,EAAQC,IAAMC,KAChB,SAACC,GAAS,IACEC,EAAmBD,EAAME,mBAAzBD,eADFE,EAEoCH,EAAMI,aAAxCC,EAFFF,EAEEE,YAAaC,EAFfH,EAEeG,QAASC,EAFxBJ,EAEwBI,QAFxBC,EAGyCR,EAAMS,MAA7CC,EAHFF,EAGEE,SAAUtC,EAHZoC,EAGYpC,KAAMuC,EAHlBH,EAGkBG,KAAMC,EAHxBJ,EAGwBI,OAAQC,EAHhCL,EAGgCK,KAHhCC,EAK4BC,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IALrEM,EAAAlD,OAAAmD,EAAA,EAAAnD,CAAAgD,EAAA,GAKD4H,EALC1H,EAAA,GAKW2H,EALX3H,EAAA,GAAAI,EASwBL,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IATjEW,EAAAvD,OAAAmD,EAAA,EAAAnD,CAAAsD,EAAA,GASDwH,EATCvH,EAAA,GASSwH,EATTxH,EAAA,GAAAqE,EAa4B3E,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAbrEiF,EAAA7H,OAAAmD,EAAA,EAAAnD,CAAA4H,EAAA,GAaDoD,EAbCnD,EAAA,GAaWoD,EAbXpD,EAAA,GAAAG,EAiBwB/E,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAjBjEqF,EAAAjI,OAAAmD,EAAA,EAAAnD,CAAAgI,EAAA,GAiBDkD,EAjBCjD,EAAA,GAiBSkD,EAjBTlD,EAAA,GAqBEvE,EAAYxB,EAAZwB,QACR,OACIC,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,uCACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOuG,EACPtG,SAxBY,SAACC,GACrBsG,EAActG,EAAMC,OAAOH,UAyBvBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,iCACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOyG,EACPxG,SA7BU,SAACC,GACnBwG,EAAYxG,EAAMC,OAAOH,UA8BrBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,iCACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAO2G,EACP1G,SAlCY,SAACC,GACrB0G,EAAc1G,EAAMC,OAAOH,UAmCvBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,2BACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAO6G,EACP5G,SAvCU,SAACC,GACnB4G,EAAY5G,EAAMC,OAAOH,UAwCrBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,UAAUC,QAAS,YAClC,IAAZhC,EACCJ,EAAQ,CAACM,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,MAAOvE,KAAM,CAAEsK,WAAYA,EAAYE,SAAUA,EAAUE,WAAYA,EAAYE,SAAUA,KAEpJzI,EAAQ,CAACqC,GAAIxE,EAAKsC,GAAU,GAAIE,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,MAAOvE,KAAM,CAAEsK,WAAYA,EAAYE,SAAUA,EAAUE,WAAYA,EAAYE,SAAUA,KAC/K3I,GAAa,GACbJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAN/C,0DASApB,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,YAAYC,QAAS,WAAKrC,GAAa,GAAIJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAAxH,4CA2BLC,2BA3HA,SAAAC,GAAK,MAAK,CACrBF,OAAQ,CACJX,OAAQa,EAAMC,QAAQC,MAE1BhB,UAAW,CACPiB,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BxD,MAAOA,GAEXmC,KAAM,CACFM,OAAQa,EAAMC,QAAQC,KACtBxD,MAAOA,EACP2D,UAAW,IACXC,SAAU,QAEdC,cAAe,CACXC,UAAWR,EAAMC,QAAQC,KACzBO,aAAcT,EAAMC,QAAQC,KAC5BC,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BR,MAAO,MACPgB,WAAY,UAsGLX,CAAmBY,YAlBlC,SAA0BC,GACtB,MAAO,CACHC,YAAaD,EAAMC,YACnBnD,MAAOkD,EAAMlD,QAIrB,SAA4BoD,GACxB,MAAO,CACH3D,mBAAoB4D,YAAmB5D,EAAoB2D,GAC3DzD,aAAc0D,YAAmB1D,EAAcyD,KAQrBH,CAA6C7D,IC5HzEJ,EAAQC,IAAWC,QAAQC,YAAY,IAAK,IAAMF,IAAWC,QAAQC,YAAY,IA2BjFC,EAAQC,IAAMC,KAChB,SAACC,GAAS,IACEC,EAAmBD,EAAME,mBAAzBD,eADFE,EAEoCH,EAAMI,aAAxCC,EAFFF,EAEEE,YAAaC,EAFfH,EAEeG,QAASC,EAFxBJ,EAEwBI,QAFxBC,EAGyCR,EAAMS,MAA7CC,EAHFF,EAGEE,SAAUtC,EAHZoC,EAGYpC,KAAMuC,EAHlBH,EAGkBG,KAAMC,EAHxBJ,EAGwBI,OAAQC,EAHhCL,EAGgCK,KAChCqI,EAAQ,CAAC,WAAY,SAAU,aAAc,OAAQ,UAJrDpI,EAKgBC,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,QALzDM,EAAAlD,OAAAmD,EAAA,EAAAnD,CAAAgD,EAAA,GAKD6B,EALC3B,EAAA,GAKKqG,EALLrG,EAAA,GAAAI,EASgBL,mBAAS,IATzBM,EAAAvD,OAAAmD,EAAA,EAAAnD,CAAAsD,EAAA,GASD0G,EATCzG,EAAA,GASK0G,EATL1G,EAAA,GAAAqE,EAU0B3E,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAVnEiF,EAAA7H,OAAAmD,EAAA,EAAAnD,CAAA4H,EAAA,GAUDsC,EAVCrC,EAAA,GAUUsC,EAVVtC,EAAA,GAqBEnE,EAAYxB,EAAZwB,QACR,OACIC,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI0G,QAAM,EACNC,YAAa,CACTC,UAAW,CACPlD,UAAWH,EAAQsD,OAG3B9C,MAAM,qBACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOQ,EACPP,SA9BM,SAACC,GACfgF,EAAQhF,EAAMC,OAAOH,cA+BH4C,GAATmE,EACGA,EAAMlE,IAAI,SAAAC,GAAM,OACZxD,EAAAxD,EAAAyD,cAACwD,EAAAjH,EAAD,CAAUkH,IAAKF,EAAQ9C,MAAO8C,GACzBA,KAIT,MAGRxD,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,OAAKC,UAAWH,EAAQI,MACnBoG,GAELvG,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,SAAOwG,QAAQ,yBACXzG,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAOuF,EAAU5C,OAAO,EAAE,UAAU,GAAI+C,UAAU,OAAOxG,UAAWH,EAAQqB,QAAxG,8HAIJpB,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,UAAUC,QAAS,YAClC,IAAZhC,EACCJ,EAAQ,CAACM,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,6CAAWmF,KAAMA,EAAM1J,KAAM,CAACuE,KAAMA,KAE3FpC,EAAQ,CAACqC,GAAIxE,EAAKsC,GAAU,GAAIE,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,6CAAWyF,QAAShK,EAAKsC,GAAU,GAAIoH,KAAMA,EAAM1J,KAAM,CAACuE,KAAMA,KAClJtC,GAAa,GACbJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAN/C,0DASApB,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,YAAYC,QAAS,WAAKrC,GAAa,GAAIJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAAxH,yCAIJpB,EAAAxD,EAAAyD,cAAA,SACI2G,OAAO,UACPC,MAAO,CAAEC,QAAS,QAClB3F,GAAG,wBACHrF,KAAK,OACL6E,SAnEY,SAACC,GACrB0F,EAAQ1F,EAAMC,OAAOkG,OAErB,IADA,IAAIR,EAAU,GACNS,EAAE,EAAGA,EAAEpG,EAAMC,OAAOkG,MAAMpD,OAAQqD,IAC/B,IAAJA,IACCT,GAAW,MACfA,GAAW3F,EAAMC,OAAOkG,MAAMC,GAAG9F,KAAK,IAE1CsF,EAAaD,SAoFVlF,2BAjIA,SAAAC,GAAK,MAAK,CACrBF,OAAQ,CACJX,OAAQa,EAAMC,QAAQC,MAE1BhB,UAAW,CACPiB,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BxD,MAAOA,GAEXmC,KAAM,CACFM,OAAQa,EAAMC,QAAQC,KACtBxD,MAAOA,EACP2D,UAAW,IACXC,SAAU,QAEdC,cAAe,CACXC,UAAWR,EAAMC,QAAQC,KACzBO,aAAcT,EAAMC,QAAQC,KAC5BC,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BR,MAAO,MACPgB,WAAY,UA4GLX,CAAmBY,YAlBlC,SAA0BC,GACtB,MAAO,CACHC,YAAaD,EAAMC,YACnBnD,MAAOkD,EAAMlD,QAIrB,SAA4BoD,GACxB,MAAO,CACH3D,mBAAoB4D,YAAmB5D,EAAoB2D,GAC3DzD,aAAc0D,YAAmB1D,EAAcyD,KAQrBH,CAA6C7D,ICpIzEJ,EAAQC,IAAWC,QAAQC,YAAY,IAAK,IAAMF,IAAWC,QAAQC,YAAY,IA2BjFC,EAAQC,IAAMC,KAChB,SAACC,GAAS,IACEC,EAAmBD,EAAME,mBAAzBD,eADFE,EAEoCH,EAAMI,aAAxCC,EAFFF,EAEEE,YAAaC,EAFfH,EAEeG,QAASC,EAFxBJ,EAEwBI,QAFxBC,EAGyCR,EAAMS,MAA7CC,EAHFF,EAGEE,SAAUtC,EAHZoC,EAGYpC,KAAMuC,EAHlBH,EAGkBG,KAAMC,EAHxBJ,EAGwBI,OAAQC,EAHhCL,EAGgCK,KAHhCC,EAKsBC,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAL/DM,EAAAlD,OAAAmD,EAAA,EAAAnD,CAAAgD,EAAA,GAKDqI,EALCnI,EAAA,GAKQoI,EALRpI,EAAA,GAAAI,EASkBL,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAT3DW,EAAAvD,OAAAmD,EAAA,EAAAnD,CAAAsD,EAAA,GASDiI,EATChI,EAAA,GASMiI,EATNjI,EAAA,GAAAqE,EAakB3E,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAb3DiF,EAAA7H,OAAAmD,EAAA,EAAAnD,CAAA4H,EAAA,GAaD6D,EAbC5D,EAAA,GAaM6D,EAbN7D,EAAA,GAiBEnE,EAAYxB,EAAZwB,QACR,OACIC,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,mDACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOgH,EACP/G,SApBS,SAACC,GAClB+G,EAAW/G,EAAMC,OAAOH,UAqBpBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,qBACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOkH,EACPjH,SAzBO,SAACC,GAChBiH,EAASjH,EAAMC,OAAOH,UA0BlBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,qBACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOoH,EACPnH,SA9BO,SAACC,GAChBmH,EAASnH,EAAMC,OAAOH,UA+BlBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,UAAUC,QAAS,YAClC,IAAZhC,EACCJ,EAAQ,CAACM,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,mDAAYvE,KAAM,CAAE+K,QAASA,EAASE,MAAOA,EAAOE,MAAOA,KAElHhJ,EAAQ,CAACqC,GAAIxE,EAAKsC,GAAU,GAAIE,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,mDAAYvE,KAAM,CAAE+K,QAASA,EAASE,MAAOA,EAAOE,MAAOA,KAC7IlJ,GAAa,GACbJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAN/C,0DASApB,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,YAAYC,QAAS,WAAKrC,GAAa,GAAIJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAAxH,4CA2BLC,2BA9GA,SAAAC,GAAK,MAAK,CACrBF,OAAQ,CACJX,OAAQa,EAAMC,QAAQC,MAE1BhB,UAAW,CACPiB,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BxD,MAAOA,GAEXmC,KAAM,CACFM,OAAQa,EAAMC,QAAQC,KACtBxD,MAAOA,EACP2D,UAAW,IACXC,SAAU,QAEdC,cAAe,CACXC,UAAWR,EAAMC,QAAQC,KACzBO,aAAcT,EAAMC,QAAQC,KAC5BC,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BR,MAAO,MACPgB,WAAY,UAyFLX,CAAmBY,YAlBlC,SAA0BC,GACtB,MAAO,CACHC,YAAaD,EAAMC,YACnBnD,MAAOkD,EAAMlD,QAIrB,SAA4BoD,GACxB,MAAO,CACH3D,mBAAoB4D,YAAmB5D,EAAoB2D,GAC3DzD,aAAc0D,YAAmB1D,EAAcyD,KAQrBH,CAA6C7D,IChHzEJ,EAAQC,IAAWC,QAAQC,YAAY,IAAK,IAAMF,IAAWC,QAAQC,YAAY,IA2BjFC,EAAQC,IAAMC,KAChB,SAACC,GAAS,IACEC,EAAmBD,EAAME,mBAAzBD,eADFE,EAEoCH,EAAMI,aAAxCC,EAFFF,EAEEE,YAAaC,EAFfH,EAEeG,QAASC,EAFxBJ,EAEwBI,QAFxBC,EAGyCR,EAAMS,MAA7CC,EAHFF,EAGEE,SAAUtC,EAHZoC,EAGYpC,KAAMuC,EAHlBH,EAGkBG,KAAMC,EAHxBJ,EAGwBI,OAAQC,EAHhCL,EAGgCK,KAHhCC,EAKkBC,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAL3DM,EAAAlD,OAAAmD,EAAA,EAAAnD,CAAAgD,EAAA,GAKD2I,EALCzI,EAAA,GAKM0I,EALN1I,EAAA,GASEQ,EAAYxB,EAAZwB,QACR,OACIC,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,6CACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOsH,EACPrH,SAZO,SAACC,GAChBqH,EAASrH,EAAMC,OAAOH,UAalBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,UAAUC,QAAS,YAClC,IAAZhC,EACCJ,EAAQ,CAACM,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,6CAAWvE,KAAM,CAACqL,MAAOA,KAEhFlJ,EAAQ,CAACqC,GAAIxE,EAAKsC,GAAU,GAAIE,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,6CAAWvE,KAAM,CAACqL,MAAOA,KAC3GpJ,GAAa,GACbJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAN/C,0DASApB,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,YAAYC,QAAS,WAAKrC,GAAa,GAAIJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAAxH,4CA2BLC,2BApFA,SAAAC,GAAK,MAAK,CACrBF,OAAQ,CACJX,OAAQa,EAAMC,QAAQC,MAE1BhB,UAAW,CACPiB,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BxD,MAAOA,GAEXmC,KAAM,CACFM,OAAQa,EAAMC,QAAQC,KACtBxD,MAAOA,EACP2D,UAAW,IACXC,SAAU,QAEdC,cAAe,CACXC,UAAWR,EAAMC,QAAQC,KACzBO,aAAcT,EAAMC,QAAQC,KAC5BC,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BR,MAAO,MACPgB,WAAY,UA+DLX,CAAmBY,YAlBlC,SAA0BC,GACtB,MAAO,CACHC,YAAaD,EAAMC,YACnBnD,MAAOkD,EAAMlD,QAIrB,SAA4BoD,GACxB,MAAO,CACH3D,mBAAoB4D,YAAmB5D,EAAoB2D,GAC3DzD,aAAc0D,YAAmB1D,EAAcyD,KAQrBH,CAA6C7D,ICtFzEJ,EAAQC,IAAWC,QAAQC,YAAY,IAAK,IAAMF,IAAWC,QAAQC,YAAY,IA2BjFC,EAAQC,IAAMC,KAChB,SAACC,GAAS,IACEC,EAAmBD,EAAME,mBAAzBD,eADFE,EAEoCH,EAAMI,aAAxCC,EAFFF,EAEEE,YAAaC,EAFfH,EAEeG,QAASC,EAFxBJ,EAEwBI,QAFxBC,EAGyCR,EAAMS,MAA7CC,EAHFF,EAGEE,SAAUtC,EAHZoC,EAGYpC,KAAMuC,EAHlBH,EAGkBG,KAAMC,EAHxBJ,EAGwBI,OAAQC,EAHhCL,EAGgCK,KAHhCC,EAKgBC,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IALzDM,EAAAlD,OAAAmD,EAAA,EAAAnD,CAAAgD,EAAA,GAKD6B,EALC3B,EAAA,GAKKqG,EALLrG,EAAA,GAAAI,EASgBL,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IATzDW,EAAAvD,OAAAmD,EAAA,EAAAnD,CAAAsD,EAAA,GASDkG,EATCjG,EAAA,GASKkG,EATLlG,EAAA,GAAAqE,EAagB3E,mBAAS,IAbzB4E,EAAA7H,OAAAmD,EAAA,EAAAnD,CAAA4H,EAAA,GAaDoC,EAbCnC,EAAA,GAaKoC,EAbLpC,EAAA,GAAAG,EAc0B/E,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAdnEqF,EAAAjI,OAAAmD,EAAA,EAAAnD,CAAAgI,EAAA,GAcDkC,EAdCjC,EAAA,GAcUkC,EAdVlC,EAAA,GAyBEvE,EAAYxB,EAAZwB,QACR,OACIC,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,qBACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOQ,EACPP,SA5BM,SAACC,GACfgF,EAAQhF,EAAMC,OAAOH,UA6BjBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,uCACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOmF,EACPlF,SAjCM,SAACC,GACfkF,EAAQlF,EAAMC,OAAOH,UAkCjBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,OAAKC,UAAWH,EAAQI,MACnBoG,GAELvG,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,SAAOwG,QAAQ,yBACXzG,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAOuF,EAAU5C,OAAO,EAAE,UAAU,GAAI+C,UAAU,OAAOxG,UAAWH,EAAQqB,QAAxG,8HAIJpB,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,UAAUC,QAAS,YAClC,IAAZhC,EACCJ,EAAQ,CAACM,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,mDAAYmF,KAAMA,EAAM1J,KAAM,CAACuE,KAAMA,EAAMgH,IAAKrC,KAEvG/G,EAAQ,CAACqC,GAAIxE,EAAKsC,GAAU,GAAIE,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,mDAAYyF,QAAShK,EAAKsC,GAAU,GAAIoH,KAAMA,EAAM1J,KAAM,CAACuE,KAAMA,EAAMgH,IAAKrC,KAC9JjH,GAAa,GACbJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAN/C,0DASApB,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,YAAYC,QAAS,WAAKrC,GAAa,GAAIJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAAxH,yCAIJpB,EAAAxD,EAAAyD,cAAA,SACI2G,OAAO,UACPC,MAAO,CAAEC,QAAS,QAClB3F,GAAG,wBACHrF,KAAK,OACL6E,SA5DY,SAACC,GACrB0F,EAAQ1F,EAAMC,OAAOkG,OAErB,IADA,IAAIR,EAAU,GACNS,EAAE,EAAGA,EAAEpG,EAAMC,OAAOkG,MAAMpD,OAAQqD,IAC/B,IAAJA,IACCT,GAAW,MACfA,GAAW3F,EAAMC,OAAOkG,MAAMC,GAAG9F,KAAK,IAE1CsF,EAAaD,SA6EVlF,2BA9HA,SAAAC,GAAK,MAAK,CACrBF,OAAQ,CACJX,OAAQa,EAAMC,QAAQC,MAE1BhB,UAAW,CACPiB,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BxD,MAAOA,GAEXmC,KAAM,CACFM,OAAQa,EAAMC,QAAQC,KACtBxD,MAAOA,EACP2D,UAAW,IACXC,SAAU,QAEdC,cAAe,CACXC,UAAWR,EAAMC,QAAQC,KACzBO,aAAcT,EAAMC,QAAQC,KAC5BC,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BR,MAAO,MACPgB,WAAY,UAyGLX,CAAmBY,YAlBlC,SAA0BC,GACtB,MAAO,CACHC,YAAaD,EAAMC,YACnBnD,MAAOkD,EAAMlD,QAIrB,SAA4BoD,GACxB,MAAO,CACH3D,mBAAoB4D,YAAmB5D,EAAoB2D,GAC3DzD,aAAc0D,YAAmB1D,EAAcyD,KAQrBH,CAA6C7D,IChIzEJ,EAAQC,IAAWC,QAAQC,YAAY,IAAK,IAAMF,IAAWC,QAAQC,YAAY,IA2BjFC,GAAQC,IAAMC,KAChB,SAACC,GAAS,IACEC,EAAmBD,EAAME,mBAAzBD,eADFE,EAEoCH,EAAMI,aAAxCC,EAFFF,EAEEE,YAAaC,EAFfH,EAEeG,QAASC,EAFxBJ,EAEwBI,QAFxBC,EAGyCR,EAAMS,MAA7CC,EAHFF,EAGEE,SAAUtC,EAHZoC,EAGYpC,KAAMuC,EAHlBH,EAGkBG,KAAMC,EAHxBJ,EAGwBI,OAAQC,EAHhCL,EAGgCK,KAHhCC,EAKoBC,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAL7DM,EAAAlD,OAAAmD,EAAA,EAAAnD,CAAAgD,EAAA,GAKD8I,EALC5I,EAAA,GAKO6I,EALP7I,EAAA,GAAAI,EASoCL,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAT7EW,EAAAvD,OAAAmD,EAAA,EAAAnD,CAAAsD,EAAA,GASD0I,EATCzI,EAAA,GASe0I,EATf1I,EAAA,GAAAqE,EAawB3E,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAbjEiF,EAAA7H,OAAAmD,EAAA,EAAAnD,CAAA4H,EAAA,GAaDsE,EAbCrE,EAAA,GAaSsE,EAbTtE,EAAA,GAAAG,EAiBgC/E,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAjBzEqF,EAAAjI,OAAAmD,EAAA,EAAAnD,CAAAgI,EAAA,GAiBDoE,EAjBCnE,EAAA,GAiBaoE,EAjBbpE,EAAA,GAAAG,EAqBoBnF,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IArB7DyF,EAAArI,OAAAmD,EAAA,EAAAnD,CAAAoI,EAAA,GAqBDkE,EArBCjE,EAAA,GAqBOkE,EArBPlE,EAAA,GAAAG,EAyBoCvF,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAzB7E6F,EAAAzI,OAAAmD,EAAA,EAAAnD,CAAAwI,EAAA,GAyBDgE,EAzBC/D,EAAA,GAyBegE,EAzBfhE,EAAA,GAAAG,EA6BwB3F,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IA7BjEiG,EAAA7I,OAAAmD,EAAA,EAAAnD,CAAA4I,EAAA,GA6BD8D,EA7BC7D,EAAA,GA6BS8D,EA7BT9D,EAAA,GAAAG,EAiCgC/F,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAjCzEqG,EAAAjJ,OAAAmD,EAAA,EAAAnD,CAAAgJ,EAAA,GAiCD4D,EAjCC3D,EAAA,GAiCa4D,EAjCb5D,EAAA,GAqCEvF,EAAYxB,EAAZwB,QACR,OACIC,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,mDACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOyH,EACPxH,SAxCQ,SAACC,GACjBwH,EAAUxH,EAAMC,OAAOH,UAyCnBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,OAAKC,UAAWH,EAAQI,MAAxB,+OACkDH,EAAAxD,EAAAyD,cAAA,eAElDD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,qEACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAO2H,EACP1H,SAhDgB,SAACC,GACzB0H,EAAkB1H,EAAMC,OAAOH,UAiD3BV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,OAAKC,UAAWH,EAAQI,MAAxB,+OACkDH,EAAAxD,EAAAyD,cAAA,eAElDD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,+DACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAO6H,EACP5H,SAxDU,SAACC,GACnB4H,EAAY5H,EAAMC,OAAOH,UAyDrBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,OAAKC,UAAWH,EAAQI,MAAxB,+OACkDH,EAAAxD,EAAAyD,cAAA,eAElDD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,6CACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAO+H,EACP9H,SAhEc,SAACC,GACvB8H,EAAgB9H,EAAMC,OAAOH,UAiEzBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,2BACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOiI,EACPhI,SArEQ,SAACC,GACjBgI,EAAUhI,EAAMC,OAAOH,UAsEnBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,OAAKC,UAAWH,EAAQI,MAAxB,+OACkDH,EAAAxD,EAAAyD,cAAA,eAElDD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,+DACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOmI,EACPlI,SA7EgB,SAACC,GACzBkI,EAAkBlI,EAAMC,OAAOH,UA8E3BV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,OAAKC,UAAWH,EAAQI,MAAxB,+OACkDH,EAAAxD,EAAAyD,cAAA,eAElDD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,mDACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOqI,EACPpI,SArFU,SAACC,GACnBoI,EAAYpI,EAAMC,OAAOH,UAsFrBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,OAAKC,UAAWH,EAAQI,MAAxB,+OACkDH,EAAAxD,EAAAyD,cAAA,eAElDD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,mDACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOuI,EACPtI,SA7Fc,SAACC,GACvBsI,EAAgBtI,EAAMC,OAAOH,UA8FzBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,UAAUC,QAAS,YAClC,IAAZhC,EACCJ,EAAQ,CAACM,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,mDAAYvE,KAAM,CAACwL,OAAQA,EAAQE,eAAgBA,EAAgBE,SAAUA,EAAUE,aAAcA,EAAcE,OAAQA,EAAQE,eAAgBA,EAAgBE,SAAUA,EAAWE,aAAcA,KAE7PnK,EAAQ,CAACqC,GAAIxE,EAAKsC,GAAU,GAAIE,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,mDAAYvE,KAAM,CAACwL,OAAQA,EAAQE,eAAgBA,EAAgBE,SAAUA,EAAUE,aAAcA,EAAcE,OAAQA,EAAQE,eAAgBA,EAAgBE,SAAUA,EAAWE,aAAcA,KACxRrK,GAAa,GACbJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAN/C,0DASApB,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,YAAYC,QAAS,WAAKrC,GAAa,GAAIJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAAxH,4CA2BLC,4BAjMA,SAAAC,GAAK,MAAK,CACrBF,OAAQ,CACJX,OAAQa,EAAMC,QAAQC,MAE1BhB,UAAW,CACPiB,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BxD,MAAOA,GAEXmC,KAAM,CACFM,OAAQa,EAAMC,QAAQC,KACtBxD,MAAOA,EACP2D,UAAW,IACXC,SAAU,QAEdC,cAAe,CACXC,UAAWR,EAAMC,QAAQC,KACzBO,aAAcT,EAAMC,QAAQC,KAC5BC,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BR,MAAO,MACPgB,WAAY,UA4KLX,CAAmBY,YAlBlC,SAA0BC,GACtB,MAAO,CACHC,YAAaD,EAAMC,YACnBnD,MAAOkD,EAAMlD,QAIrB,SAA4BoD,GACxB,MAAO,CACH3D,mBAAoB4D,YAAmB5D,EAAoB2D,GAC3DzD,aAAc0D,YAAmB1D,EAAcyD,KAQrBH,CAA6C7D,KCnMzEJ,GAAQC,IAAWC,QAAQC,YAAY,IAAK,IAAMF,IAAWC,QAAQC,YAAY,IA2BjFC,GAAQC,IAAMC,KAChB,SAACC,GAAS,IACEC,EAAmBD,EAAME,mBAAzBD,eADFE,EAEoCH,EAAMI,aAAxCC,EAFFF,EAEEE,YAAaC,EAFfH,EAEeG,QAASC,EAFxBJ,EAEwBI,QAFxBC,EAGyCR,EAAMS,MAA7CC,EAHFF,EAGEE,SAAUtC,EAHZoC,EAGYpC,KAAMuC,EAHlBH,EAGkBG,KAAMC,EAHxBJ,EAGwBI,OAAQC,EAHhCL,EAGgCK,KAHhCC,EAKoBC,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAL7DM,EAAAlD,OAAAmD,EAAA,EAAAnD,CAAAgD,EAAA,GAKD8I,EALC5I,EAAA,GAKO6I,EALP7I,EAAA,GAAAI,EASoBL,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAT7DW,EAAAvD,OAAAmD,EAAA,EAAAnD,CAAAsD,EAAA,GASDgJ,EATC/I,EAAA,GASOgJ,EATPhJ,EAAA,GAAAqE,EAasB3E,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAb/DiF,EAAA7H,OAAAmD,EAAA,EAAAnD,CAAA4H,EAAA,GAaDE,EAbCD,EAAA,GAaQE,EAbRF,EAAA,GAAAG,EAiBgB/E,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAjBzDqF,EAAAjI,OAAAmD,EAAA,EAAAnD,CAAAgI,EAAA,GAiBD8E,EAjBC7E,EAAA,GAiBK8E,EAjBL9E,EAAA,GAAAG,EAqBoBnF,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IArB7DyF,EAAArI,OAAAmD,EAAA,EAAAnD,CAAAoI,EAAA,GAqBDZ,EArBCa,EAAA,GAqBO2E,EArBP3E,EAAA,GAAAG,EAyBgBvF,mBAAS,IAzBzBwF,EAAAzI,OAAAmD,EAAA,EAAAnD,CAAAwI,EAAA,GAyBDwB,EAzBCvB,EAAA,GAyBKwB,EAzBLxB,EAAA,GAAAG,EA0B0B3F,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IA1BnEiG,EAAA7I,OAAAmD,EAAA,EAAAnD,CAAA4I,EAAA,GA0BDsB,EA1BCrB,EAAA,GA0BUsB,EA1BVtB,EAAA,GAqCEnF,EAAYxB,EAAZwB,QACR,OACIC,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,mDACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOyH,EACPxH,SAxCQ,SAACC,GACjBwH,EAAUxH,EAAMC,OAAOH,UAyCnBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,2BACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOiI,EACPhI,SA7CQ,SAACC,GACjBgI,EAAUhI,EAAMC,OAAOH,UA8CnBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,iCACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOyD,EACPxD,SAlDQ,SAACC,GACjBwD,EAAWxD,EAAMC,OAAOH,UAmDpBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,iCACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOyI,EACPxI,SAvDK,SAACC,GACdwI,EAAQxI,EAAMC,OAAOH,UAwDjBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,+DACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOmD,EACPlD,SA5DQ,SAACC,GACjByI,EAAUzI,EAAMC,OAAOH,UA6DnBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,OAAKC,UAAWH,EAAQI,MACnBoG,GAELvG,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,SAAOwG,QAAQ,yBACXzG,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAOuF,EAAU5C,OAAO,EAAE,UAAU,GAAI+C,UAAU,OAAOxG,UAAWH,EAAQqB,QAAxG,8HAIJpB,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,UAAUC,QAAS,YAClC,IAAZhC,EACCJ,EAAQ,CAACM,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,mDAAYmF,KAAMA,EAAM1J,KAAM,CAACwM,KAAMA,EAAMhB,OAAQA,EAAQQ,OAAQA,EAAQxE,QAASA,EAASN,OAAQA,KAE5J/E,EAAQ,CAACqC,GAAIxE,EAAKsC,GAAU,GAAIE,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,mDAAYyF,QAAShK,EAAKsC,GAAU,GAAIoH,KAAMA,EAAM1J,KAAM,CAACwM,KAAMA,EAAMhB,OAAQA,EAAQQ,OAAQA,EAAQxE,QAASA,EAASN,OAAQA,KACnNjF,GAAa,GACbJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAN/C,0DASApB,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,YAAYC,QAAS,WAAKrC,GAAa,GAAIJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAAxH,yCAIJpB,EAAAxD,EAAAyD,cAAA,SACI2G,OAAO,UACPC,MAAO,CAAEC,QAAS,QAClB3F,GAAG,wBACHrF,KAAK,OACL6E,SAvFY,SAACC,GACrB0F,EAAQ1F,EAAMC,OAAOkG,OAErB,IADA,IAAIR,EAAU,GACNS,EAAE,EAAGA,EAAEpG,EAAMC,OAAOkG,MAAMpD,OAAQqD,IAC/B,IAAJA,IACCT,GAAW,MACfA,GAAW3F,EAAMC,OAAOkG,MAAMC,GAAG9F,KAAK,IAE1CsF,EAAaD,SAwGVlF,4BArKA,SAAAC,GAAK,MAAK,CACrBF,OAAQ,CACJX,OAAQa,EAAMC,QAAQC,MAE1BhB,UAAW,CACPiB,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BxD,MAAOA,IAEXmC,KAAM,CACFM,OAAQa,EAAMC,QAAQC,KACtBxD,MAAOA,GACP2D,UAAW,IACXC,SAAU,QAEdC,cAAe,CACXC,UAAWR,EAAMC,QAAQC,KACzBO,aAAcT,EAAMC,QAAQC,KAC5BC,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BR,MAAO,MACPgB,WAAY,UAgJLX,CAAmBY,YAlBlC,SAA0BC,GACtB,MAAO,CACHC,YAAaD,EAAMC,YACnBnD,MAAOkD,EAAMlD,QAIrB,SAA4BoD,GACxB,MAAO,CACH3D,mBAAoB4D,YAAmB5D,EAAoB2D,GAC3DzD,aAAc0D,YAAmB1D,EAAcyD,KAQrBH,CAA6C7D,KCtKzEJ,GAAQC,IAAWC,QAAQC,YAAY,IAAK,IAAMF,IAAWC,QAAQC,YAAY,IAsCjFC,GAAQC,IAAMC,KAChB,SAACC,GAAS,IACEC,EAAmBD,EAAME,mBAAzBD,eADFE,EAEoCH,EAAMI,aAAxCC,EAFFF,EAEEE,YAAaC,EAFfH,EAEeG,QAASC,EAFxBJ,EAEwBI,QAFxBC,EAGyCR,EAAMS,MAA7CC,EAHFF,EAGEE,SAAUtC,EAHZoC,EAGYpC,KAAMuC,EAHlBH,EAGkBG,KAAMC,EAHxBJ,EAGwBI,OAAQC,EAHhCL,EAGgCK,KAHhCC,EAKgBC,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IALzDM,EAAAlD,OAAAmD,EAAA,EAAAnD,CAAAgD,EAAA,GAKD6B,EALC3B,EAAA,GAKKqG,EALLrG,EAAA,GAAAI,EASqBL,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAT9DW,EAAAvD,OAAAmD,EAAA,EAAAnD,CAAAsD,EAAA,GASD2J,EATC1J,EAAA,GASQ2J,EATR3J,EAAA,GAAAqE,EAakB3E,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAb3DiF,EAAA7H,OAAAmD,EAAA,EAAAnD,CAAA4H,EAAA,GAaD3B,EAbC4B,EAAA,GAaM3B,EAbN2B,EAAA,GAAAG,EAiB8B/E,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAjBvEqF,EAAAjI,OAAAmD,EAAA,EAAAnD,CAAAgI,EAAA,GAiBDmF,EAjBClF,EAAA,GAiBYmF,EAjBZnF,EAAA,GAqBFoF,EAAQ,CAAC,UAAW,aAAc,UAAW,SAAU,SAAU,YAAa,eArB5EjF,EAsBgBnF,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAtBzDyF,EAAArI,OAAAmD,EAAA,EAAAnD,CAAAoI,EAAA,GAsBDkF,EAtBCjF,EAAA,GAsBKkF,EAtBLlF,EAAA,GA0BF5B,EAAW,CAAC,SAAU,YA1BpB+B,EA2BoBvF,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IA3B7D6F,EAAAzI,OAAAmD,EAAA,EAAAnD,CAAAwI,EAAA,GA2BDjC,EA3BCkC,EAAA,GA2BOjC,EA3BPiC,EAAA,GAAAG,EA+BwB3F,mBAAS,IA/BjC4F,EAAA7I,OAAAmD,EAAA,EAAAnD,CAAA4I,EAAA,GA+BD4E,EA/BC3E,EAAA,GA+BS4E,EA/BT5E,EAAA,GAmCEnF,EAAYxB,EAAZwB,QACR,OACIC,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,qBACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOQ,EACPP,SAtCM,SAACC,GACfgF,EAAQhF,EAAMC,OAAOH,UAuCjBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,6CACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAO4I,EACP3I,SA3CS,SAACC,GAClB2I,EAAU3I,EAAMC,OAAOH,UA4CnBV,EAAAxD,EAAAyD,cAAA,YACa,IAAZhB,EACGe,EAAAxD,EAAAyD,cAAAD,EAAAxD,EAAAuN,SAAA,KACA/J,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,OAAKC,UAAWH,EAAQS,WACpBR,EAAAxD,EAAAyD,cAAA,mBADJ,IACmBqC,GAEnBtC,EAAAxD,EAAAyD,cAAA,YAGAD,EAAAxD,EAAAyD,cAAAD,EAAAxD,EAAAuN,SAAA,KACA/J,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,QACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAO4B,EACP3B,SA1DG,SAACC,GAChB2B,EAAS3B,EAAMC,OAAOH,UA2DdV,EAAAxD,EAAAyD,cAAA,YAGJD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,6CACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAO8I,EACP7I,SAjEY,SAACC,GACrB6I,EAAe7I,EAAMC,OAAOH,UAkExBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI0G,QAAM,EACNC,YAAa,CACTC,UAAW,CACPlD,UAAWH,EAAQsD,OAG3B9C,MAAM,2BACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOiJ,EACPhJ,SA3EK,SAACC,GACdgJ,EAAQhJ,EAAMC,OAAOH,cA4EH4C,GAAToG,EACGA,EAAMnG,IAAI,SAAAC,GAAM,OACZxD,EAAAxD,EAAAyD,cAACwD,EAAAjH,EAAD,CAAUkH,IAAKF,EAAQ9C,MAAO8C,GACzBA,KAIT,MAGRxD,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI0G,QAAM,EACNC,YAAa,CACTC,UAAW,CACPlD,UAAWH,EAAQsD,OAG3B9C,MAAM,uCACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOkC,EACPjC,SA/FQ,SAACC,GACjBiC,EAAUjC,EAAMC,OAAOH,cAgGF4C,GAAZR,EACGA,EAASS,IAAI,SAAAC,GAAM,OACfxD,EAAAxD,EAAAyD,cAACwD,EAAAjH,EAAD,CAAUkH,IAAKF,EAAQ9C,MAAO8C,GACzBA,KAIT,MAGRxD,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,uCACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOmJ,EACPlJ,SA/GM,SAACC,GACnBkJ,EAAYlJ,EAAMC,OAAOH,UAgHjBV,EAAAxD,EAAAyD,cAAA,WACJD,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,UAAUC,QAAS,YAClC,IAAZhC,EACCJ,EAAQ,CAACM,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,2EAAgBvE,KAAM,CAAC2F,MAAOA,EAAOpB,KAAMA,EAAMoI,QAASA,EAASE,YAAaA,EAAaG,KAAMA,EAAME,SAAUA,EAAUjH,OAAQA,KAE5L9D,EAAQ,CAACqC,GAAIxE,EAAKsC,GAAU,GAAIE,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,2EAAgBvE,KAAM,CAAC2F,MAAOA,EAAOpB,KAAMA,EAAMoI,QAASA,EAASE,YAAaA,EAAaG,KAAMA,EAAOE,SAAUA,EAAUjH,OAAQA,KACxNhE,GAAa,GACbJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAN/C,0DASApB,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,YAAYC,QAAS,WAAKrC,GAAa,GAAIJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAAxH,4CA2BLC,4BA5NA,SAAAC,GAAK,MAAK,CACrBF,OAAQ,CACJX,OAAQa,EAAMC,QAAQC,MAE1BhB,UAAW,CACPiB,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BxD,MAAOA,IAEXiF,aAAc,CACVnB,UAAWR,EAAMC,QAAQC,KACzBO,aAAcT,EAAMC,QAAQC,KAC5BC,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BI,SAAU,SACVgC,SAAU,cAEdzD,KAAM,CACFM,OAAQa,EAAMC,QAAQC,KACtBxD,MAAOA,GACP2D,UAAW,IACXC,SAAU,QAEdC,cAAe,CACXC,UAAWR,EAAMC,QAAQC,KACzBO,aAAcT,EAAMC,QAAQC,KAC5BC,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BR,MAAO,MACPgB,WAAY,QAEhBqB,KAAM,CACFrF,MAAO,OA4LAqD,CAAmBY,YAlBlC,SAA0BC,GACtB,MAAO,CACHC,YAAaD,EAAMC,YACnBnD,MAAOkD,EAAMlD,QAIrB,SAA4BoD,GACxB,MAAO,CACH3D,mBAAoB4D,YAAmB5D,EAAoB2D,GAC3DzD,aAAc0D,YAAmB1D,EAAcyD,KAQrBH,CAA6C7D,KC7NzEJ,GAAQC,IAAWC,QAAQC,YAAY,IAAK,IAAMF,IAAWC,QAAQC,YAAY,IA2BjFC,GAAQC,IAAMC,KAChB,SAACC,GAAS,IACEC,EAAmBD,EAAME,mBAAzBD,eADFE,EAEoCH,EAAMI,aAAxCC,EAFFF,EAEEE,YAAaC,EAFfH,EAEeG,QAASC,EAFxBJ,EAEwBI,QAFxBC,EAGyCR,EAAMS,MAA7CC,EAHFF,EAGEE,SAAUtC,EAHZoC,EAGYpC,KAAMuC,EAHlBH,EAGkBG,KAAMC,EAHxBJ,EAGwBI,OAAQC,EAHhCL,EAGgCK,KAEtC4K,oBAAU,WAAK3N,OAAA4N,EAAA,EAAA5N,CAAA6N,EAAA1N,EAAAC,KAAC,SAAAC,IAAA,OAAAwN,EAAA1N,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAU,GACN2M,EADMrN,EAAAE,KAAA,EACUoN,wBAAc,CAAClJ,KAAM,iDAD/B,cAAApE,EAAAuN,GAAAvN,EAAAQ,KAAAR,EAAAE,KAAA,KAAAF,EAAAU,IAAAV,EAAAuN,IAAA,wBAAAvN,EAAAa,SAAAjB,EAAAkB,QAADvB,IAET,IAPA,IAiBFoJ,EAjBEpG,EAQoBC,mBAAS,IAR7BC,EAAAlD,OAAAmD,EAAA,EAAAnD,CAAAgD,EAAA,GAQDiL,EARC/K,EAAA,GAQO4K,EARP5K,EAAA,GAAAI,EASkBL,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAGsL,MAAM,MAAM,GAAG,IAT1E3K,EAAAvD,OAAAmD,EAAA,EAAAnD,CAAAsD,EAAA,GASDiB,EATChB,EAAA,GASM4K,EATN5K,EAAA,GAAAqE,EAagB3E,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAbzDiF,EAAA7H,OAAAmD,EAAA,EAAAnD,CAAA4H,EAAA,GAaD/C,EAbCgD,EAAA,GAaK0B,EAbL1B,EAAA,IAkBS,IAAZjF,KACCwG,EAAa,CAACgF,MAAO9N,EAAKsC,GAAU,GAAGsL,MAAM,OAClCG,MAAQjF,EAAWgF,MAAM,GACpChF,EAAWgF,MAAQhF,EAAWgF,MAAM,GAAGF,MAAM,KAC7C9E,EAAcA,EAAWgF,MAAM,GAAG,IAAIhF,EAAWgF,MAAM,GAAG,IAAIhF,EAAWgF,MAAM,GAAG,IAAIhF,EAAWiF,MAAM,OAtBrG,IA4BF1E,EA5BE3B,EAwB0B/E,oBAAqB,IAAZL,EAAcwG,EAAW,oBAxB5DnB,EAAAjI,OAAAmD,EAAA,EAAAnD,CAAAgI,EAAA,GAwBD4B,EAxBC3B,EAAA,GAwBU4B,EAxBV5B,EAAA,IA6BS,IAAZrF,KACC+G,EAAW,CAACyE,MAAO9N,EAAKsC,GAAU,GAAGsL,MAAM,OAClCG,MAAQ1E,EAASyE,MAAM,GAChCzE,EAASyE,MAAQzE,EAASyE,MAAM,GAAGF,MAAM,KACzCvE,EAAYA,EAASyE,MAAM,GAAG,IAAIzE,EAASyE,MAAM,GAAG,IAAIzE,EAASyE,MAAM,GAAG,IAAIzE,EAAS0E,MAAM,OAEjGjN,QAAQkN,IAAI3E,EAAUP,GAnChB,IAAAhB,EAoCsBnF,oBAAqB,IAAZL,EAAc+G,EAAS,oBApCtDtB,EAAArI,OAAAmD,EAAA,EAAAnD,CAAAoI,EAAA,GAoCD0B,EApCCzB,EAAA,GAoCQ0B,EApCR1B,EAAA,GAAAG,EAwCgBvF,mBAAS,IAxCzBwF,EAAAzI,OAAAmD,EAAA,EAAAnD,CAAAwI,EAAA,GAwCDwB,EAxCCvB,EAAA,GAwCKwB,EAxCLxB,EAAA,GAAAG,EAyC0B3F,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAzCnEiG,EAAA7I,OAAAmD,EAAA,EAAAnD,CAAA4I,EAAA,GAyCDsB,EAzCCrB,EAAA,GAyCUsB,EAzCVtB,EAAA,GAoDEnF,EAAYxB,EAAZwB,QACR,OACIC,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,qBACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOQ,EACPP,SA/CM,SAACC,GACfgF,EAAQhF,EAAMC,OAAOH,UAgDjBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI0G,QAAM,EACNC,YAAa,CACTC,UAAW,CACPlD,UAAWH,EAAQsD,OAG3B9C,MAAM,6CACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOE,EACPD,SAlEO,SAACC,GAChB4J,EAAS5J,EAAMC,OAAOH,cAmEH4C,GAAVgH,EACGA,EAAO/G,IAAI,SAAAC,GACP,OACAxD,EAAAxD,EAAAyD,cAACwD,EAAAjH,EAAD,CAAUkH,IAAKF,EAAOoH,IAAKlK,MAAO8C,EAAOoH,KACpCpH,EAAO2E,UAIhB,MAGRnI,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,gEACNzE,KAAK,iBACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOuF,EACPtF,SAvEW,SAACC,GACpBsF,EAAatF,EAAMC,OAAOH,UAwEtBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,kFACNzE,KAAK,iBACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOyF,EACPxF,SApES,SAACC,GAClBwF,EAAWxF,EAAMC,OAAOH,UAqEpBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,OAAKC,UAAWH,EAAQI,MACnBoG,GAELvG,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,SAAOwG,QAAQ,yBACXzG,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAOuF,EAAU5C,OAAO,EAAE,UAAU,GAAI+C,UAAU,OAAOxG,UAAWH,EAAQqB,QAAxG,8HAIJpB,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,UAAUC,QAAS,YAClC,IAAZhC,EACCJ,EAAQ,CAACM,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,yDAAamF,KAAMA,EAAM1J,KAAM,CAACuE,KAAMA,EAAM+E,UAAWA,EAAWE,QAASA,EAASvF,MAAOA,KAElJ9B,EAAQ,CAACqC,GAAIxE,EAAKsC,GAAU,GAAIE,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,yDAAayF,QAAShK,EAAKsC,GAAU,GAAIoH,KAAMA,EAAM1J,KAAM,CAACuE,KAAMA,EAAM+E,UAAWA,EAAWE,QAASA,EAASvF,MAAOA,KACzMhC,GAAa,GACbJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAN/C,0DASApB,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,YAAYC,QAAS,WAAKrC,GAAa,GAAIJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAAxH,yCAIJpB,EAAAxD,EAAAyD,cAAA,SACI2G,OAAO,UACPC,MAAO,CAAEC,QAAS,QAClB3F,GAAG,wBACHrF,KAAK,OACL6E,SA/FY,SAACC,GACrB0F,EAAQ1F,EAAMC,OAAOkG,OAErB,IADA,IAAIR,EAAU,GACNS,EAAE,EAAGA,EAAEpG,EAAMC,OAAOkG,MAAMpD,OAAQqD,IAC/B,IAAJA,IACCT,GAAW,MACfA,GAAW3F,EAAMC,OAAOkG,MAAMC,GAAG9F,KAAK,IAE1CsF,EAAaD,SAgHVlF,4BA5LA,SAAAC,GAAK,MAAK,CACrBF,OAAQ,CACJX,OAAQa,EAAMC,QAAQC,MAE1BhB,UAAW,CACPiB,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BxD,MAAOA,IAEXmC,KAAM,CACFM,OAAQa,EAAMC,QAAQC,KACtBxD,MAAOA,GACP2D,UAAW,IACXC,SAAU,QAEdC,cAAe,CACXC,UAAWR,EAAMC,QAAQC,KACzBO,aAAcT,EAAMC,QAAQC,KAC5BC,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BR,MAAO,MACPgB,WAAY,UAuKLX,CAAmBY,YAlBlC,SAA0BC,GACtB,MAAO,CACHC,YAAaD,EAAMC,YACnBnD,MAAOkD,EAAMlD,QAIrB,SAA4BoD,GACxB,MAAO,CACH3D,mBAAoB4D,YAAmB5D,EAAoB2D,GAC3DzD,aAAc0D,YAAmB1D,EAAcyD,KAQrBH,CAA6C7D,KC/LzEJ,GAAQC,IAAWC,QAAQC,YAAY,IAAK,IAAMF,IAAWC,QAAQC,YAAY,IA2BjFC,GAAQC,IAAMC,KAChB,SAACC,GAAS,IACEC,EAAmBD,EAAME,mBAAzBD,eADFE,EAEoCH,EAAMI,aAAxCC,EAFFF,EAEEE,YAAaC,EAFfH,EAEeG,QAASC,EAFxBJ,EAEwBI,QAFxBC,EAGyCR,EAAMS,MAA7CC,EAHFF,EAGEE,SAAUtC,EAHZoC,EAGYpC,KAAMuC,EAHlBH,EAGkBG,KAAMC,EAHxBJ,EAGwBI,OAAQC,EAHhCL,EAGgCK,KAHhCC,EAIgBC,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAJzDM,EAAAlD,OAAAmD,EAAA,EAAAnD,CAAAgD,EAAA,GAID6B,EAJC3B,EAAA,GAIKqG,EAJLrG,EAAA,GAAAI,EAQkBL,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAR3DW,EAAAvD,OAAAmD,EAAA,EAAAnD,CAAAsD,EAAA,GAQDkL,EARCjL,EAAA,GAQMkL,EARNlL,EAAA,GAYF8F,EAAQ,CAAC,iCAAS,qDAZhBzB,EAagB3E,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAbzDiF,EAAA7H,OAAAmD,EAAA,EAAAnD,CAAA4H,EAAA,GAaDnI,EAbCoI,EAAA,GAaKyB,EAbLzB,EAAA,GAAAG,EAiBwB/E,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAjBjEqF,EAAAjI,OAAAmD,EAAA,EAAAnD,CAAAgI,EAAA,GAiBD0G,EAjBCzG,EAAA,GAiBS0G,EAjBT1G,EAAA,GAAAG,EAqB8BnF,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IArBvEyF,EAAArI,OAAAmD,EAAA,EAAAnD,CAAAoI,EAAA,GAqBDwG,EArBCvG,EAAA,GAqBYwG,EArBZxG,EAAA,GAAAG,EAyBsBvF,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAzB/D6F,EAAAzI,OAAAmD,EAAA,EAAAnD,CAAAwI,EAAA,GAyBDsG,EAzBCrG,EAAA,GAyBQsG,EAzBRtG,EAAA,GAAAG,EA6ByB3F,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IA7BlEiG,EAAA7I,OAAAmD,EAAA,EAAAnD,CAAA4I,EAAA,GA6BDoG,EA7BCnG,EAAA,GA6BUoG,EA7BVpG,EAAA,GAAAG,EAiCoB/F,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAjC7DqG,EAAAjJ,OAAAmD,EAAA,EAAAnD,CAAAgJ,EAAA,GAiCDkG,EAjCCjG,EAAA,GAiCOkG,EAjCPlG,EAAA,GAAAmG,EAqC8BnM,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IArCvEyM,EAAArP,OAAAmD,EAAA,EAAAnD,CAAAoP,EAAA,GAqCDE,EArCCD,EAAA,GAqCYE,GArCZF,EAAA,GAAAG,GAyCgBvM,mBAAS,IAzCzBwM,GAAAzP,OAAAmD,EAAA,EAAAnD,CAAAwP,GAAA,GAyCDxF,GAzCCyF,GAAA,GAyCKxF,GAzCLwF,GAAA,GAAAC,GA0C0BzM,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IA1CnE+M,GAAA3P,OAAAmD,EAAA,EAAAnD,CAAA0P,GAAA,GA0CDxF,GA1CCyF,GAAA,GA0CUxF,GA1CVwF,GAAA,GAqDEjM,GAAYxB,EAAZwB,QACR,OACIC,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,qBACNzE,KAAK,QACLoE,UAAWH,GAAQS,UACnBC,OAAO,SACPC,MAAOQ,EACPP,SAzDK,SAACC,GACdgF,EAAQhF,EAAMC,OAAOH,UA0DjBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,2BACNzE,KAAK,QACLoE,UAAWH,GAAQS,UACnBC,OAAO,SACPC,MAAOmK,EACPlK,SA9DM,SAACC,GACfkK,EAASlK,EAAMC,OAAOH,UA+DlBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI0G,QAAM,EACNC,YAAa,CACTC,UAAW,CACPlD,UAAWH,GAAQsD,OAG3B9C,MAAM,qBACNzE,KAAK,QACLoE,UAAWH,GAAQS,UACnBC,OAAO,SACPC,MAAO5E,EACP6E,SAxEK,SAACC,GACd+E,EAAQ/E,EAAMC,OAAOH,cAyEH4C,GAAToC,EACGA,EAAMnC,IAAI,SAAAC,GAAM,OACZxD,EAAAxD,EAAAyD,cAACwD,EAAAjH,EAAD,CAAUkH,IAAKF,EAAQ9C,MAAO8C,GACzBA,KAIT,MAGRxD,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,yGACNzE,KAAK,QACLoE,UAAWH,GAAQS,UACnBC,OAAO,SACPC,MAAOqK,EACPpK,SAvFS,SAACC,GAClBoK,EAAYpK,EAAMC,OAAOH,UAwFrBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,6CACNzE,KAAK,QACLoE,UAAWH,GAAQS,UACnBC,OAAO,SACPC,MAAOuK,EACPtK,SA5FY,SAACC,GACrBsK,EAAetK,EAAMC,OAAOH,UA6FxBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,mDACNzE,KAAK,QACLoE,UAAWH,GAAQS,UACnBC,OAAO,SACPC,MAAOyK,EACPxK,SAjGQ,SAACC,GACjBwK,EAAWxK,EAAMC,OAAOH,UAkGpBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,uCACNzE,KAAK,QACLoE,UAAWH,GAAQS,UACnBC,OAAO,SACPC,MAAO6K,EACP5K,SAlGO,SAACC,GAChB4K,EAAU5K,EAAMC,OAAOH,UAmGnBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,yDACNzE,KAAK,QACLoE,UAAWH,GAAQS,UACnBC,OAAO,SACPC,MAAO2K,EACP1K,SA/GU,SAACC,GACnB0K,EAAY1K,EAAMC,OAAOH,UAgHrBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI6D,WAAS,EACTC,QAAQ,IACRC,MAAM,mDACNzE,KAAK,QACLoE,UAAWH,GAAQS,UACnBC,OAAO,SACPC,MAAOiL,EACPhL,SAlHY,SAACC,GACrBgL,GAAehL,EAAMC,OAAOH,UAmHxBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,OAAKC,UAAWH,GAAQI,MACnBoG,IAELvG,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,SAAOwG,QAAQ,yBACXzG,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAOuF,GAAU5C,OAAO,EAAE,UAAU,GAAI+C,UAAU,OAAOxG,UAAWH,GAAQqB,QAAxG,8HAIJpB,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,UAAUC,QAAS,YAClC,IAAZhC,EACCJ,EAAQ,CAACM,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,2BAAQmF,KAAMA,GAAM1J,KAAM,CAACuE,KAAMA,EAAM2J,MAAOA,EAAO/O,KAAMA,EAAM6P,YAAaA,EAAaZ,SAAUA,EAAUE,YAAaA,EAAaE,QAASA,EAAUE,UAAWA,EAAWE,OAAQA,KAEjPzM,EAAQ,CAACqC,GAAIxE,EAAKsC,GAAU,IAAKE,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,2BAAQyF,QAAShK,EAAKsC,GAAU,GAAIoH,KAAMA,GAAM1J,KAAM,CAACuE,KAAMA,EAAM2J,MAAOA,EAAO/O,KAAMA,EAAM6P,YAAaA,EAAaZ,SAAUA,EAAUE,YAAaA,EAAaE,QAASA,EAAUE,UAAWA,EAAWE,OAAQA,KACzS3M,GAAa,GACbJ,GAAe,IAAS0B,UAAWH,GAAQqB,QAN/C,0DASApB,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,YAAYC,QAAS,WAAKrC,GAAa,GAAIJ,GAAe,IAAS0B,UAAWH,GAAQqB,QAAxH,yCAIJpB,EAAAxD,EAAAyD,cAAA,SACI2G,OAAO,UACPC,MAAO,CAAEC,QAAS,QAClB3F,GAAG,wBACHrF,KAAK,OACL6E,SA7IY,SAACC,GACrB0F,GAAQ1F,EAAMC,OAAOkG,OAErB,IADA,IAAIR,EAAU,GACNS,EAAE,EAAGA,EAAEpG,EAAMC,OAAOkG,MAAMpD,OAAQqD,IAC/B,IAAJA,IACCT,GAAW,MACfA,GAAW3F,EAAMC,OAAOkG,MAAMC,GAAG9F,KAAK,IAE1CsF,GAAaD,SA8JVlF,4BA3OA,SAAAC,GAAK,MAAK,CACrBF,OAAQ,CACJX,OAAQa,EAAMC,QAAQC,MAE1BhB,UAAW,CACPiB,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BxD,MAAOA,IAEXmC,KAAM,CACFM,OAAQa,EAAMC,QAAQC,KACtBxD,MAAOA,GACP2D,UAAW,IACXC,SAAU,QAEdC,cAAe,CACXC,UAAWR,EAAMC,QAAQC,KACzBO,aAAcT,EAAMC,QAAQC,KAC5BC,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BR,MAAO,MACPgB,WAAY,UAsNLX,CAAmBY,YAlBlC,SAA0BC,GACtB,MAAO,CACHC,YAAaD,EAAMC,YACnBnD,MAAOkD,EAAMlD,QAIrB,SAA4BoD,GACxB,MAAO,CACH3D,mBAAoB4D,YAAmB5D,EAAoB2D,GAC3DzD,aAAc0D,YAAmB1D,EAAcyD,KAQrBH,CAA6C7D,KC9OzEJ,GAAQC,IAAWC,QAAQC,YAAY,IAAK,IAAMF,IAAWC,QAAQC,YAAY,IA2BjFC,GAAQC,IAAMC,KAChB,SAACC,GAAS,IACEC,EAAmBD,EAAME,mBAAzBD,eADFE,EAEoCH,EAAMI,aAAxCC,EAFFF,EAEEE,YAAaC,EAFfH,EAEeG,QAASC,EAFxBJ,EAEwBI,QAFxBC,EAGyCR,EAAMS,MAA7CC,EAHFF,EAGEE,SAAUtC,EAHZoC,EAGYpC,KAAMuC,EAHlBH,EAGkBG,KAAMC,EAHxBJ,EAGwBI,OAAQC,EAHhCL,EAGgCK,KAHhCC,EAKwBC,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IALjEM,EAAAlD,OAAAmD,EAAA,EAAAnD,CAAAgD,EAAA,GAKD4M,EALC1M,EAAA,GAKS2M,EALT3M,EAAA,GAAAI,EASwBL,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IATjEW,EAAAvD,OAAAmD,EAAA,EAAAnD,CAAAsD,EAAA,GASDwM,EATCvM,EAAA,GASSwM,EATTxM,EAAA,GAAAqE,EAa0C3E,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAbnFiF,EAAA7H,OAAAmD,EAAA,EAAAnD,CAAA4H,EAAA,GAaDoI,EAbCnI,EAAA,GAakBoI,EAblBpI,EAAA,GAAAG,EAiBgC/E,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAjBzEqF,EAAAjI,OAAAmD,EAAA,EAAAnD,CAAAgI,EAAA,GAiBDkI,EAjBCjI,EAAA,GAiBakI,EAjBblI,EAAA,GAAAG,EAqBsCnF,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IArB/EyF,EAAArI,OAAAmD,EAAA,EAAAnD,CAAAoI,EAAA,GAqBDgI,EArBC/H,EAAA,GAqBgBgI,EArBhBhI,EAAA,GAyBE3E,EAAYxB,EAAZwB,QACR,OACIC,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,WACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOuL,EACPtL,SA5BU,SAACC,GACnBsL,EAAYtL,EAAMC,OAAOH,UA6BrBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,WACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOyL,EACPxL,SAjCU,SAACC,GACnBwL,EAAYxL,EAAMC,OAAOH,UAkCrBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,oBACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAO2L,EACP1L,SAtCmB,SAACC,GAC5B0L,EAAqB1L,EAAMC,OAAOH,UAuC9BV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,eACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAO6L,EACP5L,SA3Cc,SAACC,GACvB4L,EAAgB5L,EAAMC,OAAOH,UA4CzBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,kBACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAO+L,EACP9L,SAhDiB,SAACC,GAC1B8L,EAAmB9L,EAAMC,OAAOH,UAiD5BV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,UAAUC,QAAS,YAClC,IAAZhC,EACCJ,EAAQ,CAACM,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,mDAAYvE,KAAM,CAACsP,SAAUA,EAAUE,SAAUA,EAAUE,kBAAmBA,EAAmBE,aAAcA,EAAcE,gBAAiBA,KAErM3N,EAAQ,CAACqC,GAAIxE,EAAKsC,GAAU,GAAIE,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,mDAAYvE,KAAM,CAACsP,SAAUA,EAAUE,SAAUA,EAAUE,kBAAmBA,EAAmBE,aAAcA,EAAcE,gBAAiBA,KAChO7N,GAAa,GACbJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAN/C,0DASApB,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,YAAYC,QAAS,WAAKrC,GAAa,GAAIJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAAxH,4CA2BLC,4BAxIA,SAAAC,GAAK,MAAK,CACrBF,OAAQ,CACJX,OAAQa,EAAMC,QAAQC,MAE1BhB,UAAW,CACPiB,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BxD,MAAOA,IAEXmC,KAAM,CACFM,OAAQa,EAAMC,QAAQC,KACtBxD,MAAOA,GACP2D,UAAW,IACXC,SAAU,QAEdC,cAAe,CACXC,UAAWR,EAAMC,QAAQC,KACzBO,aAAcT,EAAMC,QAAQC,KAC5BC,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BR,MAAO,MACPgB,WAAY,UAmHLX,CAAmBY,YAlBlC,SAA0BC,GACtB,MAAO,CACHC,YAAaD,EAAMC,YACnBnD,MAAOkD,EAAMlD,QAIrB,SAA4BoD,GACxB,MAAO,CACH3D,mBAAoB4D,YAAmB5D,EAAoB2D,GAC3DzD,aAAc0D,YAAmB1D,EAAcyD,KAQrBH,CAA6C7D,KCxIzEJ,GAAQC,IAAWC,QAAQC,YAAY,IAAK,IAAMF,IAAWC,QAAQC,YAAY,IA2BjFC,GAAQC,IAAMC,KAChB,SAACC,GAAS,IACEC,EAAmBD,EAAME,mBAAzBD,eADFE,EAEoCH,EAAMI,aAAxCC,EAFFF,EAEEE,YAAaC,EAFfH,EAEeG,QAASC,EAFxBJ,EAEwBI,QAFxBC,EAGyCR,EAAMS,MAA7CC,EAHFF,EAGEE,SAAUtC,EAHZoC,EAGYpC,KAAMuC,EAHlBH,EAGkBG,KAAMC,EAHxBJ,EAGwBI,OAAQC,EAHhCL,EAGgCK,KAEtC4K,oBAAU,WAAK3N,OAAA4N,EAAA,EAAA5N,CAAA6N,EAAA1N,EAAAC,KAAC,SAAAC,IAAA,OAAAwN,EAAA1N,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAU,GACNmP,EADM7P,EAAAE,KAAA,EACSoN,wBAAc,CAAClJ,KAAM,iEAD9B,cAAApE,EAAAuN,GAAAvN,EAAAQ,KAAAR,EAAAE,KAAA,KAAAF,EAAAU,IAAAV,EAAAuN,IAAA,wBAAAvN,EAAAa,SAAAjB,EAAAkB,QAADvB,IAET,IAPA,IAAAgD,EAQgBC,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IARzDM,EAAAlD,OAAAmD,EAAA,EAAAnD,CAAAgD,EAAA,GAQD6B,EARC3B,EAAA,GAQKqG,EARLrG,EAAA,GAAAI,EAYgBL,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAGsL,MAAM,MAAM,GAAG,IAZxE3K,EAAAvD,OAAAmD,EAAA,EAAAnD,CAAAsD,EAAA,GAYD+C,EAZC9C,EAAA,GAYKgN,EAZLhN,EAAA,GAAAqE,EAgBkB3E,mBAAS,IAhB3B4E,EAAA7H,OAAAmD,EAAA,EAAAnD,CAAA4H,EAAA,GAgBD4I,EAhBC3I,EAAA,GAgBMyI,EAhBNzI,EAAA,GAiBEnE,EAAYxB,EAAZwB,QACR,OACIC,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,mDACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOQ,EACPP,SAjBM,SAACC,GACfgF,EAAQhF,EAAMC,OAAOH,UAkBjBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI0G,QAAM,EACNC,YAAa,CACTC,UAAW,CACPlD,UAAWH,EAAQsD,OAG3B9C,MAAM,yDACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOgC,EACP/B,SA5BM,SAACC,GACfgM,EAAQhM,EAAMC,OAAOH,cA6BH4C,GAATuJ,EACGA,EAAMtJ,IAAI,SAAAC,GAAM,OACZxD,EAAAxD,EAAAyD,cAACwD,EAAAjH,EAAD,CAAUkH,IAAKF,EAAOoH,IAAKlK,MAAO8C,EAAOoH,KACpCpH,EAAOtC,QAIhB,MAGRlB,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,UAAUC,QAAS,YAClC,IAAZhC,EACCJ,EAAQ,CAACM,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,2BAAQvE,KAAM,CAACuE,KAAMA,EAAMwB,KAAMA,KAExF5D,EAAQ,CAACqC,GAAIxE,EAAKsC,GAAU,GAAIE,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,2BAAQvE,KAAM,CAACuE,KAAMA,EAAMwB,KAAMA,KACnH9D,GAAa,GACbJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAN/C,0DASApB,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,YAAYC,QAAS,WAAKrC,GAAa,GAAIJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAAxH,4CA2BLC,4BArHA,SAAAC,GAAK,MAAK,CACrBF,OAAQ,CACJX,OAAQa,EAAMC,QAAQC,MAE1BhB,UAAW,CACPiB,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BxD,MAAOA,IAEXmC,KAAM,CACFM,OAAQa,EAAMC,QAAQC,KACtBxD,MAAOA,GACP2D,UAAW,IACXC,SAAU,QAEdC,cAAe,CACXC,UAAWR,EAAMC,QAAQC,KACzBO,aAAcT,EAAMC,QAAQC,KAC5BC,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BR,MAAO,MACPgB,WAAY,UAgGLX,CAAmBY,YAlBlC,SAA0BC,GACtB,MAAO,CACHC,YAAaD,EAAMC,YACnBnD,MAAOkD,EAAMlD,QAIrB,SAA4BoD,GACxB,MAAO,CACH3D,mBAAoB4D,YAAmB5D,EAAoB2D,GAC3DzD,aAAc0D,YAAmB1D,EAAcyD,KAQrBH,CAA6C7D,KCxHzEJ,GAAQC,IAAWC,QAAQC,YAAY,IAAK,IAAMF,IAAWC,QAAQC,YAAY,IAsCjFC,GAAQC,IAAMC,KAChB,SAACC,GAAS,IACEC,EAAmBD,EAAME,mBAAzBD,eADFE,EAEoCH,EAAMI,aAAxCC,EAFFF,EAEEE,YAAaC,EAFfH,EAEeG,QAASC,EAFxBJ,EAEwBI,QAFxBC,EAGyCR,EAAMS,MAA7CC,EAHFF,EAGEE,SAAUtC,EAHZoC,EAGYpC,KAAMuC,EAHlBH,EAGkBG,KAAMC,EAHxBJ,EAGwBI,OAAQC,EAHhCL,EAGgCK,KAElCoD,GAAqB,IAAZvD,EAActC,EAAKsC,GAAU,GAAG,GACzCwD,GAAmB,IAAZxD,EAActC,EAAKsC,GAAU,GAAG,GACvCyD,GAAmB,IAAZzD,EAActC,EAAKsC,GAAU,GAAG,GACvC6N,GAAoB,IAAZ7N,EAActC,EAAKsC,GAAU,GAAG,GACxC8N,GAAqB,IAAZ9N,EAActC,EAAKsC,GAAU,GAAG,GACzC+N,GAAmB,IAAZ/N,EAActC,EAAKsC,GAAU,GAAG,GAVrCI,EAWoBC,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAX7DM,EAAAlD,OAAAmD,EAAA,EAAAnD,CAAAgD,EAAA,GAWDuD,EAXCrD,EAAA,GAWOsD,EAXPtD,EAAA,GAYFuD,EAAW,CAAC,uCAAU,yDAAa,sEAInCmK,GAAoB,IAAZhO,EAAc8D,KAAKC,MAAMrG,EAAKsC,GAAU,IAAI,GAEhDc,EAAYxB,EAAZwB,QACR,OACIC,EAAAxD,EAAAyD,cAAA,OAAKC,UAAWH,EAAQkD,cACpBjD,EAAAxD,EAAAyD,cAAA,2CACAD,EAAAxD,EAAAyD,cAAA,WACCuC,EACDxC,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,iBACAD,EAAAxD,EAAAyD,cAAA,WACCwC,EACDzC,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,qFACAD,EAAAxD,EAAAyD,cAAA,WACCyC,EACD1C,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,2CACAD,EAAAxD,EAAAyD,cAAA,WACC6M,EACD9M,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,mEACAD,EAAAxD,EAAAyD,cAAA,WACC8M,EACD/M,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,+BACAD,EAAAxD,EAAAyD,cAAA,WACC+M,EACDhN,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,2CACAD,EAAAxD,EAAAyD,cAAA,WACCgN,EAAMtJ,OAAO,EACVsJ,EAAM1J,IAAI,SAAAC,GACN,OACIxD,EAAAxD,EAAAyD,cAAAD,EAAAxD,EAAAuN,SAAA,KACC,mCAAYvG,EAAOtC,KAAK,8BAAUsC,EAAO0J,YAAY,8BAAU1J,EAAO2J,KACvEnN,EAAAxD,EAAAyD,cAAA,cAEL,KACPD,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI0G,QAAM,EACNC,YAAa,CACTC,UAAW,CACPlD,UAAWH,EAAQsD,OAG3B9C,MAAM,uCACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOkC,EACPjC,SA7DQ,SAACC,GACjBiC,EAAUjC,EAAMC,OAAOH,cA8DF4C,GAAZR,EACGA,EAASS,IAAI,SAAAC,GAAM,OACfxD,EAAAxD,EAAAyD,cAACwD,EAAAjH,EAAD,CAAUkH,IAAKF,EAAQ9C,MAAO8C,GACzBA,KAIT,MAGRxD,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,UAAUC,QAAS,YAClC,IAAZhC,EACCJ,EAAQ,CAACM,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,gEAAevE,KAAM,CAACiG,OAAQA,KAErF9D,EAAQ,CAACqC,GAAIxE,EAAKsC,GAAU,GAAIE,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,gEAAevE,KAAM,CAACiG,OAAQA,KAChHhE,GAAa,GACbJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAN/C,0DASApB,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,YAAYC,QAAS,WAAKrC,GAAa,GAAIJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAAxH,4CA2BLC,4BAjKA,SAAAC,GAAK,MAAK,CACrBF,OAAQ,CACJX,OAAQa,EAAMC,QAAQC,MAE1BhB,UAAW,CACPiB,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BxD,MAAOA,IAEXmC,KAAM,CACFM,OAAQa,EAAMC,QAAQC,KACtBxD,MAAOA,GACP2D,UAAW,IACXC,SAAU,QAEdC,cAAe,CACXC,UAAWR,EAAMC,QAAQC,KACzBO,aAAcT,EAAMC,QAAQC,KAC5BC,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BR,MAAO,MACPgB,WAAY,QAEhBiB,aAAc,CACVnB,UAAWR,EAAMC,QAAQC,KACzBO,aAAcT,EAAMC,QAAQC,KAC5BC,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BI,SAAU,SACVgC,SAAU,cAEdP,KAAM,CACFrF,MAAO,OAiIAqD,CAAmBY,YAlBlC,SAA0BC,GACtB,MAAO,CACHC,YAAaD,EAAMC,YACnBnD,MAAOkD,EAAMlD,QAIrB,SAA4BoD,GACxB,MAAO,CACH3D,mBAAoB4D,YAAmB5D,EAAoB2D,GAC3DzD,aAAc0D,YAAmB1D,EAAcyD,KAQrBH,CAA6C7D,KCpKzEJ,GAAQC,IAAWC,QAAQC,YAAY,IAAK,IAAMF,IAAWC,QAAQC,YAAY,IAsCjFC,GAAQC,IAAMC,KAChB,SAACC,GAAS,IACEC,EAAmBD,EAAME,mBAAzBD,eADFE,EAE2BH,EAAMI,aAA/BC,EAFFF,EAEEE,YAAaE,EAFfJ,EAEeI,QAFfC,EAGyCR,EAAMS,MAA7CC,EAHFF,EAGEE,SAAUtC,EAHZoC,EAGYpC,KAAMuC,EAHlBH,EAGkBG,KAAMC,EAHxBJ,EAGwBI,OAAQC,EAHhCL,EAGgCK,KAHhCC,EAIsBC,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAJ/DM,EAAAlD,OAAAmD,EAAA,EAAAnD,CAAAgD,EAAA,GAID+N,EAJC7N,EAAA,GAIQ8N,EAJR9N,EAAA,GAKFmD,GAAmB,IAAZzD,EAActC,EAAKsC,GAAU,GAAG,GACvC9B,GAAqB,IAAZ8B,EAActC,EAAKsC,GAAU,GAAG,GAIrCc,EAAYxB,EAAZwB,QACR,OACIC,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAAA,OAAKC,UAAWH,EAAQS,WACpBR,EAAAxD,EAAAyD,cAAA,sFADJ,IAC0ByC,GAE1B1C,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,OAAKC,UAAWH,EAAQS,WACpBR,EAAAxD,EAAAyD,cAAA,wDADJ,IACqB9C,GAErB6C,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,uCACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAO0M,EACPzM,SApBS,SAACC,GAClByM,EAAWzM,EAAMC,OAAOH,UAqBpBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,UAAUC,QAAS,YAClC,IAAZhC,GACCH,EAAQ,CAACqC,GAAIxE,EAAKsC,GAAU,GAAIE,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,uCAAUvE,KAAM,CAACyQ,QAASA,KAC5GxO,GAAa,GACbJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAJ/C,0DAOApB,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,YAAYC,QAAS,WAAKrC,GAAa,GAAIJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAAxH,4CA2BLC,4BAtGA,SAAAC,GAAK,MAAK,CACrBF,OAAQ,CACJX,OAAQa,EAAMC,QAAQC,MAE1BhB,UAAW,CACPiB,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BxD,MAAOA,IAEXiF,aAAc,CACVnB,UAAWR,EAAMC,QAAQC,KACzBO,aAAcT,EAAMC,QAAQC,KAC5BC,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BI,SAAU,SACVgC,SAAU,cAEdzD,KAAM,CACFM,OAAQa,EAAMC,QAAQC,KACtBxD,MAAOA,GACP2D,UAAW,IACXC,SAAU,QAEdC,cAAe,CACXC,UAAWR,EAAMC,QAAQC,KACzBO,aAAcT,EAAMC,QAAQC,KAC5BC,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BR,MAAO,MACPgB,WAAY,QAEhBqB,KAAM,CACFrF,MAAO,OAsEAqD,CAAmBY,YAlBlC,SAA0BC,GACtB,MAAO,CACHC,YAAaD,EAAMC,YACnBnD,MAAOkD,EAAMlD,QAIrB,SAA4BoD,GACxB,MAAO,CACH3D,mBAAoB4D,YAAmB5D,EAAoB2D,GAC3DzD,aAAc0D,YAAmB1D,EAAcyD,KAQrBH,CAA6C7D,KCxGzEJ,GAAQC,IAAWC,QAAQC,YAAY,IAAK,IAAMF,IAAWC,QAAQC,YAAY,IA2BjFC,GAAQC,IAAMC,KAChB,SAACC,GAAS,IACEC,EAAmBD,EAAME,mBAAzBD,eADFE,EAEoCH,EAAMI,aAAxCC,EAFFF,EAEEE,YAAaC,EAFfH,EAEeG,QAASC,EAFxBJ,EAEwBI,QAFxBC,EAGyCR,EAAMS,MAA7CC,EAHFF,EAGEE,SAAUtC,EAHZoC,EAGYpC,KAAMuC,EAHlBH,EAGkBG,KAAMC,EAHxBJ,EAGwBI,OAAQC,EAHhCL,EAGgCK,KAHhCC,EAKgBC,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IALzDM,EAAAlD,OAAAmD,EAAA,EAAAnD,CAAAgD,EAAA,GAKD6B,EALC3B,EAAA,GAKKqG,EALLrG,EAAA,GAAAI,EASsBL,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAT/DW,EAAAvD,OAAAmD,EAAA,EAAAnD,CAAAsD,EAAA,GASDwE,EATCvE,EAAA,GASQwE,EATRxE,EAAA,GAAAqE,EAac3E,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAbvDiF,EAAA7H,OAAAmD,EAAA,EAAAnD,CAAA4H,EAAA,GAaDqJ,EAbCpJ,EAAA,GAaIqJ,EAbJrJ,EAAA,GAiBEnE,EAAYxB,EAAZwB,QACR,OACIC,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,qBACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOQ,EACPP,SApBM,SAACC,GACfgF,EAAQhF,EAAMC,OAAOH,UAqBjBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,iCACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOyD,EACPxD,SAzBS,SAACC,GAClBwD,EAAWxD,EAAMC,OAAOH,UA0BpBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI+D,MAAM,+DACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAO4M,EACP3M,SA9BK,SAACC,GACd2M,EAAO3M,EAAMC,OAAOH,UA+BhBV,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,UAAUC,QAAS,YAClC,IAAZhC,EACCJ,EAAQ,CAACM,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,iCAASvE,KAAM,CAAC2Q,IAAKA,EAAKpM,KAAMA,EAAMiD,QAASA,KAEtGrF,EAAQ,CAACqC,GAAIxE,EAAKsC,GAAU,GAAIE,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,iCAASvE,KAAM,CAAC2Q,IAAKA,EAAKpM,KAAMA,EAAMiD,QAASA,KACjIvF,GAAa,GACbJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAN/C,0DASApB,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,YAAYC,QAAS,WAAKrC,GAAa,GAAIJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAAxH,4CA2BLC,4BA9GA,SAAAC,GAAK,MAAK,CACrBF,OAAQ,CACJX,OAAQa,EAAMC,QAAQC,MAE1BhB,UAAW,CACPiB,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BxD,MAAOA,IAEXmC,KAAM,CACFM,OAAQa,EAAMC,QAAQC,KACtBxD,MAAOA,GACP2D,UAAW,IACXC,SAAU,QAEdC,cAAe,CACXC,UAAWR,EAAMC,QAAQC,KACzBO,aAAcT,EAAMC,QAAQC,KAC5BC,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BR,MAAO,MACPgB,WAAY,UAyFLX,CAAmBY,YAlBlC,SAA0BC,GACtB,MAAO,CACHC,YAAaD,EAAMC,YACnBnD,MAAOkD,EAAMlD,QAIrB,SAA4BoD,GACxB,MAAO,CACH3D,mBAAoB4D,YAAmB5D,EAAoB2D,GAC3DzD,aAAc0D,YAAmB1D,EAAcyD,KAQrBH,CAA6C7D,KC/GzEJ,GAAQC,IAAWC,QAAQC,YAAY,IAAK,IAAMF,IAAWC,QAAQC,YAAY,IAsCjFC,GAAQC,IAAMC,KAChB,SAACC,GAAS,IACEC,EAAmBD,EAAME,mBAAzBD,eADFE,EAEoCH,EAAMI,aAAxCC,EAFFF,EAEEE,YAAaC,EAFfH,EAEeG,QAASC,EAFxBJ,EAEwBI,QAFxBC,EAGyCR,EAAMS,MAA7CC,EAHFF,EAGEE,SAAUtC,EAHZoC,EAGYpC,KAAMuC,EAHlBH,EAGkBG,KAAMC,EAHxBJ,EAGwBI,OAAQC,EAHhCL,EAGgCK,KAClCjC,GAAqB,IAAZ8B,EAActC,EAAKsC,GAAU,GAAG,GACzCuD,GAAqB,IAAZvD,EAActC,EAAKsC,GAAU,GAAG,GACzCuO,GAAsB,IAAZvO,EAActC,EAAKsC,GAAU,GAAG,GAC1CwO,GAAkB,IAAZxO,EAActC,EAAKsC,GAAU,GAAG,GACtCyO,GAAmB,IAAZzO,EAActC,EAAKsC,GAAU,GAAG,GARrCI,EASoBC,oBAAqB,IAAZL,EAActC,EAAKsC,GAAU,GAAG,IAT7DM,EAAAlD,OAAAmD,EAAA,EAAAnD,CAAAgD,EAAA,GASDuD,EATCrD,EAAA,GASOsD,EATPtD,EAAA,GAUF2B,GAAmB,IAAZjC,EAActC,EAAKsC,GAAU,GAAG,GACvCqD,GAAoB,IAAZrD,EAActC,EAAKsC,GAAU,GAAG,GACxC0O,GAAkB,IAAZ1O,EAActC,EAAKsC,GAAU,GAAG,GACtC6D,EAAW,CAAC,yDAAa,mDAAY,6CAAW,wCAK5C/C,EAAYxB,EAAZwB,QACR,OACIC,EAAAxD,EAAAyD,cAAA,OAAKC,UAAWH,EAAQkD,cACpBjD,EAAAxD,EAAAyD,cAAA,2CACAD,EAAAxD,EAAAyD,cAAA,WACC9C,EACD6C,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,2CACAD,EAAAxD,EAAAyD,cAAA,WACCuC,EACDxC,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,2CACAD,EAAAxD,EAAAyD,cAAA,WACCwN,EACDzN,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,iDACAD,EAAAxD,EAAAyD,cAAA,WACCuN,EACDxN,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,iBACAD,EAAAxD,EAAAyD,cAAA,WACCyN,EACD1N,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,+BACAD,EAAAxD,EAAAyD,cAAA,WACCiB,EACDlB,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,kBACAD,EAAAxD,EAAAyD,cAAA,WACCqC,EACDtC,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,gBACAD,EAAAxD,EAAAyD,cAAA,WACC0N,EACD3N,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACG,EAAA5D,EAAD,CACI0G,QAAM,EACNC,YAAa,CACTC,UAAW,CACPlD,UAAWH,EAAQsD,OAG3B9C,MAAM,uCACNzE,KAAK,QACLoE,UAAWH,EAAQS,UACnBC,OAAO,SACPC,MAAOkC,EACPjC,SA3DQ,SAACC,GACjBiC,EAAUjC,EAAMC,OAAOH,cA4DF4C,GAAZR,EACGA,EAASS,IAAI,SAAAC,GAAM,OACfxD,EAAAxD,EAAAyD,cAACwD,EAAAjH,EAAD,CAAUkH,IAAKF,EAAQ9C,MAAO8C,GACzBA,KAIT,MAGRxD,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,UAAUC,QAAS,YAClC,IAAZhC,EACCJ,EAAQ,CAACM,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,6CAAWvE,KAAM,CAACiG,OAAQA,KAEjF9D,EAAQ,CAACqC,GAAIxE,EAAKsC,GAAU,IAAKE,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAM,6CAAWvE,KAAM,CAACiG,OAAQA,KAC7GhE,GAAa,GACbJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAN/C,0DASApB,EAAAxD,EAAAyD,cAACa,EAAAtE,EAAD,CAAQuE,QAAQ,YAAYC,MAAM,YAAYC,QAAS,WAAKrC,GAAa,GAAIJ,GAAe,IAAS0B,UAAWH,EAAQqB,QAAxH,4CA2BLC,4BAhKA,SAAAC,GAAK,MAAK,CACrBF,OAAQ,CACJX,OAAQa,EAAMC,QAAQC,MAE1BhB,UAAW,CACPiB,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BxD,MAAOA,IAEXmC,KAAM,CACFM,OAAQa,EAAMC,QAAQC,KACtBxD,MAAOA,GACP2D,UAAW,IACXC,SAAU,QAEdC,cAAe,CACXC,UAAWR,EAAMC,QAAQC,KACzBO,aAAcT,EAAMC,QAAQC,KAC5BC,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BR,MAAO,MACPgB,WAAY,QAEhBiB,aAAc,CACVnB,UAAWR,EAAMC,QAAQC,KACzBO,aAAcT,EAAMC,QAAQC,KAC5BC,WAAYH,EAAMC,QAAQC,KAC1BE,YAAaJ,EAAMC,QAAQC,KAC3BI,SAAU,SACVgC,SAAU,cAEdP,KAAM,CACFrF,MAAO,OAgIAqD,CAAmBY,YAlBlC,SAA0BC,GACtB,MAAO,CACHC,YAAaD,EAAMC,YACnBnD,MAAOkD,EAAMlD,QAIrB,SAA4BoD,GACxB,MAAO,CACH3D,mBAAoB4D,YAAmB5D,EAAoB2D,GAC3DzD,aAAc0D,YAAmB1D,EAAcyD,KAQrBH,CAA6C7D,KClJxE,SAASwP,GAAcC,EAAMC,GAChC,MAAO,CACHhS,KAAMiS,IACN/R,QAAS,CAAC6R,MAAOA,EAAOC,MAAOA,IAIhC,SAASE,KACZ,sBAAA5R,EAAAC,OAAA4N,EAAA,EAAA5N,CAAA6N,EAAA1N,EAAAC,KAAO,SAAAC,EAAO0F,GAAP,IAAA0L,EAAA,OAAA5D,EAAA1N,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC6B,IAA7BiR,QAAMC,WAAWlP,MAAMkC,OAEU,oDAA7B+M,QAAMC,WAAWlP,MAAMkC,KACtB4M,EAAQ9N,EAAAxD,EAAAyD,cAACkO,GAAD,MACyB,iEAA7BF,QAAMC,WAAWlP,MAAMkC,KAC3B4M,EAAQ9N,EAAAxD,EAAAyD,cAACmO,GAAD,MACyB,6BAA7BH,QAAMC,WAAWlP,MAAMkC,KAC3B4M,EAAQ9N,EAAAxD,EAAAyD,cAACoO,EAAD,MACyB,wCAA7BJ,QAAMC,WAAWlP,MAAMkC,KAC3B4M,EAAQ9N,EAAAxD,EAAAyD,cAACqO,EAAD,MACyB,4BAA7BL,QAAMC,WAAWlP,MAAMkC,KAC3B4M,EAAQ9N,EAAAxD,EAAAyD,cAACsO,GAAD,MACyB,SAA7BN,QAAMC,WAAWlP,MAAMkC,KAC3B4M,EAAQ9N,EAAAxD,EAAAyD,cAACuO,EAAD,MACyB,oDAA7BP,QAAMC,WAAWlP,MAAMkC,KAC3B4M,EAAQ9N,EAAAxD,EAAAyD,cAACwO,GAAD,MACyB,oDAA7BR,QAAMC,WAAWlP,MAAMkC,KAC3B4M,EAAQ9N,EAAAxD,EAAAyD,cAACyO,GAAD,MACyB,8CAA7BT,QAAMC,WAAWlP,MAAMkC,KAC3B4M,EAAQ9N,EAAAxD,EAAAyD,cAAC0O,EAAD,MACyB,8CAA7BV,QAAMC,WAAWlP,MAAMkC,KAC3B4M,EAAQ9N,EAAAxD,EAAAyD,cAAC2O,EAAD,MACyB,OAA7BX,QAAMC,WAAWlP,MAAMkC,KAC3B4M,EAAQ9N,EAAAxD,EAAAyD,cAAC4O,EAAD,MACyB,8CAA7BZ,QAAMC,WAAWlP,MAAMkC,KAC3B4M,EAAQ9N,EAAAxD,EAAAyD,cAAC6O,EAAD,MACyB,oDAA7Bb,QAAMC,WAAWlP,MAAMkC,KAC3B4M,EAAQ9N,EAAAxD,EAAAyD,cAAC8O,EAAD,MACyB,8CAA7Bd,QAAMC,WAAWlP,MAAMkC,KAC3B4M,EAAQ9N,EAAAxD,EAAAyD,cAAC+O,EAAD,MACyB,oDAA7Bf,QAAMC,WAAWlP,MAAMkC,KAC3B4M,EAAQ9N,EAAAxD,EAAAyD,cAACgP,EAAD,MACyB,4EAA7BhB,QAAMC,WAAWlP,MAAMkC,KAC3B4M,EAAQ9N,EAAAxD,EAAAyD,cAACiP,GAAD,MACyB,0DAA7BjB,QAAMC,WAAWlP,MAAMkC,KAC3B4M,EAAQ9N,EAAAxD,EAAAyD,cAACkP,GAAD,MACyB,4BAA7BlB,QAAMC,WAAWlP,MAAMkC,KAC3B4M,EAAQ9N,EAAAxD,EAAAyD,cAACmP,GAAD,MACyB,wCAA7BnB,QAAMC,WAAWlP,MAAMkC,KAC3B4M,EAAQ9N,EAAAxD,EAAAyD,cAACoP,GAAD,MACyB,kCAA7BpB,QAAMC,WAAWlP,MAAMkC,KAC3B4M,EAAQ9N,EAAAxD,EAAAyD,cAACqP,GAAD,MACyB,8CAA7BrB,QAAMC,WAAWlP,MAAMkC,OAC3B4M,EAAQ9N,EAAAxD,EAAAyD,cAACsP,GAAD,OACZnN,EAAU,CACNtG,KAAMiS,IACN/R,QAAS,CAAC6R,MAAOI,QAAMC,WAAWlP,MAAMkC,KAAM4M,MAAOA,KAEzD1L,EAAU,CACNtG,KAAM0T,IACNxT,SAAS,KAnDd,wBAAAc,EAAAa,SAAAjB,EAAAkB,SAAP,gBAAAC,GAAA,OAAAzB,EAAA0B,MAAAF,KAAAG,YAAA,GAyDG,SAASS,GAAe3C,GAC3B,MAAO,CACHC,KAAM0T,IACNxT,QAASH,oKC/FjB4T,EAAAC,QAAiBC,EAAAC,EAAuB,mECAxCD,EAAAE,EAAAC,GAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,KAAAQ,EAAAR,EAAAM,EAAAC,GAAAE,EAAAT,EAAA,IAAAU,EAAAV,EAAA,IAAAW,EAAAX,EAAA,IAAAY,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,KAAAc,EAAAd,EAAAM,EAAAO,GAAAE,GAAAf,EAAA,KAAAA,EAAA,MAAAgB,EAAAhB,EAAA,IAAAiB,EAAAjB,EAAA,KAAAkB,EAAAlB,EAAAM,EAAAW,GAcME,EAAU7S,IAAWC,QAAQC,YAAY,IAC3C6R,EAAAxT,EAAAyD,cAAA+P,EAAAxT,EAAAuN,SAAA,yIAEIiG,EAAAxT,EAAAyD,cAAA,WACA+P,EAAAxT,EAAAyD,cAAA,KAAG4G,MAAO,CAAC7E,WAAY,MAAO+O,SAAU,SAAxC,uNAGJf,EAAAxT,EAAAyD,cAAA+P,EAAAxT,EAAAuN,SAAA,yIAEIiG,EAAAxT,EAAAyD,cAAA,WACA+P,EAAAxT,EAAAyD,cAAA,KAAG4G,MAAO,CAAC7E,WAAY,MAAO+O,SAAU,SAAxC,8SAEF/S,EAAQC,IAAWC,QAAQC,YAAY,IAAK,IAAK,IAwBjD6S,EAAQ3S,IAAMC,KAChB,SAACC,GAAU,IACCwB,EAAYxB,EAAZwB,QADDhB,EAqBuDR,EAAMS,MAA5DiS,EArBDlS,EAqBCkS,IAAKC,EArBNnS,EAqBMmS,MAAOhS,EArBbH,EAqBaG,KAAMvC,EArBnBoC,EAqBmBpC,KAAMwU,EArBzBpS,EAqByBoS,MAAOjQ,EArBhCnC,EAqBgCmC,KAAM/B,EArBtCJ,EAqBsCI,OAAQC,EArB9CL,EAqB8CK,KArB9CV,EAsBsCH,EAAMI,aAA3CyS,EAtBD1S,EAsBC0S,QAASC,EAtBV3S,EAsBU2S,WAAYzS,EAtBtBF,EAsBsBE,YAtBtB0S,EAuBsD/S,EAAME,mBAA3DuP,EAvBDsD,EAuBCtD,kBAAmBJ,EAvBpB0D,EAuBoB1D,cAAepP,EAvBnC8S,EAuBmC9S,eAClC+S,EAAkBhT,EAAMmE,KAAxB6O,cACFC,EAAU,CACZC,YAAY,EACZC,WAAY,WACZC,QAAQ,EACRC,OAAO,EACPC,YAAa,GACbX,MAAOA,EACPhS,KAAMA,EACN4S,oBAAoB,EACpBC,gBAAiB,CAACC,SAAU,oBAAqBC,UAAW,KAC5DC,mBAAoB,SAACC,EAAeC,GAChChB,EAAQ,CAACjS,OAAQA,EAAQC,KAAM,CAAC+S,EAAeC,GAAYlT,KAAMA,EAAMgC,KAAMA,IAC7EtC,GAAa,IAEjByT,eAAgB,SAACC,GACblB,EAAQ,CAACjS,OAAQmT,EAAYlT,KAAM,GAAIF,KAAM,EAAGgC,KAAMA,IACtDtC,GAAa,IAEjB2T,aAAc,SAACC,GACXpB,EAAQ,CAACjS,OAAQA,EAAQC,KAAMA,EAAMF,KAAMsT,EAAatR,KAAMA,IAC9DtC,GAAa,IAEjB6T,aAAc,SAACC,GAEX,IADA,IAAIC,EAAY,GAAIhM,EAAU,GACtBK,EAAE,EAAGA,EAAE0L,EAAY/V,KAAKgH,OAAQqD,IACpC2L,EAAUC,KAAKjW,EAAK+V,EAAY/V,KAAKqK,GAAG6L,OAAOlW,EAAK+V,EAAY/V,KAAKqK,GAAG6L,OAAOlP,OAAO,SAC/CL,GAApC3G,EAAK+V,EAAY/V,KAAKqK,GAAG6L,OAAO,KAAgBlW,EAAKqK,GAAG,GAAG8L,SAAS,SAASnW,EAAK+V,EAAY/V,KAAKqK,GAAG6L,OAAO,GAAGC,SAAS,YACxHnM,GAAW,KAAOhK,EAAK+V,EAAY/V,KAAKqK,GAAG6L,OAAO,IAE1DxB,EAAW,CAAC1K,QAASA,EAASxH,OAAQA,EAAQC,KAAMA,EAAMF,KAAMA,EAAMgC,KAAMA,EAAM6R,QAAShQ,KAAKiQ,UAAUL,KAC1G/T,GAAa,IAEjBqU,YAAa,SAACC,EAASC,GAEnB,QAAY7P,IADZ4P,EAAUA,EAAQE,aACOF,EAAQJ,SAAS,SAASI,EAAQJ,SAAS,SAS7D,GAAY,yCAAT5R,GAA4B,kEAATA,EAAwB,CACvCmS,OAAOC,KAAKJ,EAAS,UAC3BK,YACD,CAEH,IADA,IAAIC,EAAS,GACJxM,EAAI,EAAGA,EAAEkM,EAAQ3I,MAAM,MAAM5G,OAAQqD,IAC1CwM,EAAOZ,KAAK,CAACa,SAAUP,EAAQ3I,MAAM,MAAMvD,GAAI0M,UAAWR,EAAQ3I,MAAM,MAAMvD,KAClF4G,EAAc,mDAAYoC,EAAAxT,EAAAyD,cAACwQ,EAAAjU,EAAD,CAAcmX,MAAOH,EAAQI,gBAAgB,EAAOC,sBAAsB,EAAOC,gBAAgB,KAC3HtV,GAAe,QAhBfI,EAAYuU,EAAQY,UACR,+CAAT7S,EACC3C,EAAMyV,QAAQpB,KAAK,UACJ,mCAAT1R,EACN3C,EAAMyV,QAAQpB,KAAK,WAEnB5E,KAaZiG,cAAe,SAACC,EAAQC,GACR,WAATD,GAA2C,OAAxBC,EAAW7B,aAC7BlB,EAAQ,CAACjS,OAAQ,GAAIC,KAAM,GAAIF,KAAM,EAAGgC,KAAMA,IAC9CtC,GAAa,MAIzB,OACQoR,EAAAxT,EAAAyD,cAAA+P,EAAAxT,EAAAuN,SAAA,KACKwH,GAAqB,IAANrQ,EACZ8O,EAAAxT,EAAAyD,cAACyQ,EAAA,iBAAD,CAAkBpP,MAvFV8S,yBAAe,CACnCC,UAAW,CACPC,qBAAsB,CAClBC,KAAM,CACFC,aAAc,WACd7S,UAAW,QACX8S,SAAU,QACV7S,SAAU,SACVgC,SAAU,eAGlB8Q,SAAU,CACNC,WAAW,CACPC,UAAW,aA2EP5E,EAAAxT,EAAAyD,cAACkQ,EAAA3T,EAAD,CACIqR,MAAO3M,EACPvE,KAAMwU,EACN0D,QAAS5D,EACTO,QAASA,KAIjBxB,EAAAxT,EAAAyD,cAAA,OAAKC,UAAWH,EAAQ+U,aACpB9E,EAAAxT,EAAAyD,cAAA,OAAKC,UAAWH,EAAQ+Q,SACpBd,EAAAxT,EAAAyD,cAAA,OAAK4G,MAAO,CAAC7I,MAAM,SAAU+W,IAAKC,MAAQhF,EAAAxT,EAAAyD,cAAA,WAC1C+P,EAAAxT,EAAAyD,cAAA,WACC6Q,OA2BlBzP,+BAzJA,SAAAC,GAAK,MAAK,CACrBwT,YAAa,CACTG,gBAAiB,yCACjBC,mBAAoB,gBACpBC,iBAAkB,YAClBnX,MAAO,OACPoX,OAAQ,OACRtO,QAAS,OACTuO,eAAgB,SAChBC,WAAY,UAEhBxE,QAAS,CACL9P,MAAO,UACPgB,WAAY,OACZ+O,SAAU,OACV/S,MAAOA,EACP8D,UAAWR,EAAMC,QAAQC,KACzBO,aAAcT,EAAMC,QAAQC,KAC5BC,WAAY,gBAAgBzD,EAAM,SAClC0D,YAAa,gBAAgB1D,EAAM,YAsI5BqD,CAAmBY,YAlBlC,SAA0BC,GACtB,MAAO,CACHlD,MAAOkD,EAAMlD,MACb0D,KAAMR,EAAMQ,OAIpB,SAA4BN,GACxB,MAAO,CACH3D,mBAAoB4D,YAAmB5D,EAAoB2D,GAC3DzD,aAAc0D,YAAmB1D,EAAcyD,KAQrBH,CAA6C+O,kcCtKxE,SAASlS,EAAQ9C,GACpB,sBAAAI,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAO0F,GAAP,IAAAzF,EAAA4Y,EAAAvO,EAAApK,EAAAqU,EAAAuE,EAAArE,EAAAsE,EAAAC,EAAAC,EAAAC,EAAA,OAAArZ,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAiBC,GAjBDF,EAAAC,KAAA,GAGOJ,EAAO,IAAIM,KAEZC,OAAO,KAAMlB,EAAQmF,IAC1BxE,EAAKO,OAAO,SAAUlB,EAAQmD,QAC9BxC,EAAKO,OAAO,OAAQlB,EAAQoD,MAC5BzC,EAAKO,OAAO,OAAQ6F,KAAKiQ,UAAuB,GAAbhX,EAAQkD,OAC3CvC,EAAKO,OAAO,OAAQlB,EAAQkF,MAC5BvE,EAAKO,OAAO,MAAO6F,KAAKiQ,UAAUhX,EAAQW,YACpB2G,GAAnBtH,EAAQ2K,SACPhK,EAAKO,OAAO,UAAWlB,EAAQ2K,cAEHrD,GAA7BtH,EAAQ6Z,mBACPlZ,EAAKO,OAAO,oBAAqBlB,EAAQ6Z,wBAEzBvS,GAAhBtH,EAAQqK,KAAmB,CAE3B,IADA1J,EAAKO,OAAO,aAAclB,EAAQqK,KAAK1C,QAC/BqD,EAAE,EAAGA,EAAEhL,EAAQqK,KAAK1C,OAAQqD,IAChCrK,EAAKO,OAAO,OAAO8J,EAAGhL,EAAQqK,KAAKW,IACnCrK,EAAKO,OAAO,WAAW8J,EAAGhL,EAAQqK,KAAKW,GAAG9F,MAE9CqU,EAAW,CACP3O,OAAU,mBACVkP,kBAAmB,iBACnBC,eAAA,iCAAAC,OAAiDrZ,EAAKsZ,WACtDC,mBAAoB,iBACpBC,cAAiB,UAAYC,aAAaC,wBAG9Cd,EAAW,CACP3O,OAAU,mBACVkP,kBAAmB,iBACnBI,mBAAoB,iBACpBC,cAAgB,UAAUC,aAAaC,mBAnChD,OAAAvZ,EAAAE,KAAA,GAsCmBI,IAAMC,KACpB,YACAV,EACA,CAAC2Z,QAASf,IAzCf,QA2CC,IALM3Y,EAtCPE,EAAAQ,KA0CK2T,EAAM,GACFjK,EAAI,EAAGA,EAAEpK,EAAID,KAAKsU,IAAItN,OAAQqD,IAClCiK,EAAI2B,KAAK,CACL1R,KAAMtE,EAAID,KAAKsU,IAAIjK,GACnBwK,QAAS,CACLG,QAAQ,EACRvS,MAAM,KAKlB,GADI+R,EAAQ,GACK,4EAAdnV,EAAQkF,KACP,IAAQ8F,EAAI,EAAGA,EAAEpK,EAAID,KAAKA,KAAKgH,OAAQqD,IAAI,CAEvC,IADI0O,EAAM,GACFC,EAAK,EAAGA,EAAG/Y,EAAID,KAAKA,KAAKqK,GAAGrD,OAAQgS,KACpCC,EAAQhZ,EAAID,KAAKA,KAAKqK,GAAG2O,IACpBhS,OAAO,MACZiS,EAAQA,EAAMW,UAAU,EAAG,KAAK,OACpCb,EAAM9C,KAAKgD,GAEfzE,EAAMyB,KAAK8C,QAEdvE,EAAQvU,EAAID,KAAKA,KACtBX,EAAU,CACNkV,MAAOtU,EAAID,KAAKuU,MAChBhS,KAAMlD,EAAQkD,KACdvC,KAAMC,EAAID,KAAKA,KACfwU,MAAOA,EACPF,IAAKA,EACL9R,OAAQnD,EAAQmD,OAChB+B,KAAMlF,EAAQkF,KACd9B,KAAMpD,EAAQoD,MAElBgD,EAAS,CACLtG,KAAM0a,IACNxa,QAASA,IA7Edc,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAiFCW,QAAQC,MAARZ,EAAAU,IAjFD,yBAAAV,EAAAa,SAAAjB,EAAAkB,KAAA,aAAP,gBAAAC,GAAA,OAAAzB,EAAA0B,MAAAF,KAAAG,YAAA,GAuFG,SAASc,EAAQ7C,GACpB,sBAAAya,EAAApa,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAia,EAAOtU,GAAP,IAAAzF,EAAA4Y,EAAAvO,EAAApK,EAAAqU,EAAA0F,EAAAxF,EAAAyF,EAAAlB,EAAAC,EAAAC,EAAA,OAAArZ,EAAAC,EAAAK,KAAA,SAAAga,GAAA,cAAAA,EAAA9Z,KAAA8Z,EAAA7Z,MAAA,OAUC,GAVD6Z,EAAA9Z,KAAA,GAGOJ,EAAO,IAAIM,KAEZC,OAAO,SAAUlB,EAAQmD,QAC9BxC,EAAKO,OAAO,OAAQlB,EAAQoD,MAC5BzC,EAAKO,OAAO,OAAQ6F,KAAKiQ,UAAuB,GAAbhX,EAAQkD,OAC3CvC,EAAKO,OAAO,OAAQlB,EAAQkF,MAC5BvE,EAAKO,OAAO,MAAO6F,KAAKiQ,UAAUhX,EAAQW,YACtB2G,GAAhBtH,EAAQqK,KAAmB,CAE3B,IADA1J,EAAKO,OAAO,aAAclB,EAAQqK,KAAK1C,QAC/BqD,EAAE,EAAGA,EAAEhL,EAAQqK,KAAK1C,OAAQqD,IAChCrK,EAAKO,OAAO,OAAO8J,EAAGhL,EAAQqK,KAAKW,IACnCrK,EAAKO,OAAO,WAAW8J,EAAGhL,EAAQqK,KAAKW,GAAG9F,MAE9CqU,EAAW,CACP3O,OAAU,mBACVkP,kBAAmB,iBACnBC,eAAA,iCAAAC,OAAiDrZ,EAAKsZ,WACtDC,mBAAoB,iBACpBC,cAAiB,UAAYC,aAAaC,wBAG9Cd,EAAW,CACP3O,OAAU,mBACVkP,kBAAmB,iBACnBI,mBAAoB,iBACpBC,cAAgB,UAAUC,aAAaC,mBA5BhD,OAAAQ,EAAA7Z,KAAA,GA+BmBI,IAAMC,KACpB,YACAV,EACA,CAAC2Z,QAASf,IAlCf,QAoCC,IALM3Y,EA/BPia,EAAAvZ,KAmCK2T,EAAM,GACFjK,EAAI,EAAGA,EAAEpK,EAAID,KAAKsU,IAAItN,OAAQqD,IAClCiK,EAAI2B,KAAK,CACL1R,KAAMtE,EAAID,KAAKsU,IAAIjK,GACnBwK,QAAS,CACLG,QAAQ,EACRvS,MAAM,KAKlB,GADI+R,EAAQ,GACK,4EAAdnV,EAAQkF,KACP,IAAQ8F,EAAI,EAAGA,EAAEpK,EAAID,KAAKA,KAAKgH,OAAQqD,IAAI,CAEvC,IADI0O,EAAM,GACFC,EAAK,EAAGA,EAAG/Y,EAAID,KAAKA,KAAKqK,GAAGrD,OAAQgS,KACpCC,EAAQhZ,EAAID,KAAKA,KAAKqK,GAAG2O,IACpBhS,OAAO,MACZiS,EAAQA,EAAMW,UAAU,EAAG,KAAK,OACpCb,EAAM9C,KAAKgD,GAEfzE,EAAMyB,KAAK8C,QAEdvE,EAAQvU,EAAID,KAAKA,KACtBX,EAAU,CACNkV,MAAOtU,EAAID,KAAKuU,MAChBhS,KAAMlD,EAAQkD,KACdvC,KAAMC,EAAID,KAAKA,KACfwU,MAAOA,EACPF,IAAKA,EACL9R,OAAQnD,EAAQmD,OAChB+B,KAAMlF,EAAQkF,KACd9B,KAAMpD,EAAQoD,MAElBgD,EAAS,CACLtG,KAAM0a,IACNxa,QAASA,IAtEd6a,EAAA7Z,KAAA,iBAAA6Z,EAAA9Z,KAAA,GAAA8Z,EAAArZ,GAAAqZ,EAAA,SA0ECpZ,QAAQC,MAARmZ,EAAArZ,IA1ED,yBAAAqZ,EAAAlZ,SAAA+Y,EAAA9Y,KAAA,aAAP,gBAAAkZ,GAAA,OAAAL,EAAA3Y,MAAAF,KAAAG,YAAA,GAgFG,SAASa,EAAY5C,GACxB,MAAO,CACHF,KAAMib,IACN/a,QAASA,GAIV,SAASgb,EAAOhb,GACnB,sBAAAib,EAAA5a,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAya,EAAO9U,GAAP,IAAAzF,EAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAsa,GAAA,cAAAA,EAAApa,KAAAoa,EAAAna,MAAA,cAAAma,EAAApa,KAAA,GAGOJ,EAAO,IAAIM,KACZC,OAAO,OAAQlB,GAJrBmb,EAAAna,KAAA,EAKmBI,IAAMC,KACpB,eACAV,EACA,CAAC2Z,QAAS,CACN1P,OAAU,mBACVkP,kBAAmB,iBACnBI,mBAAoB,iBACpBC,cAAgB,UAAUC,aAAaC,qBAZhD,OAKOzZ,EALPua,EAAA7Z,KAcC8E,EAAS,CACLtG,KAAMsb,IACNpb,QAASY,EAAID,OAhBlBwa,EAAAna,KAAA,gBAAAma,EAAApa,KAAA,EAAAoa,EAAA3Z,GAAA2Z,EAAA,SAoBC1Z,QAAQC,MAARyZ,EAAA3Z,IApBD,yBAAA2Z,EAAAxZ,SAAAuZ,EAAAtZ,KAAA,YAAP,gBAAAyZ,GAAA,OAAAJ,EAAAnZ,MAAAF,KAAAG,YAAA,GA0BG,SAASqT,EAAQpV,GACpB,sBAAAsb,EAAAjb,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAA8a,EAAOnV,GAAP,IAAAzF,EAAAC,EAAAqU,EAAAjK,EAAAmK,EAAAqG,EAAA9B,EAAAC,EAAAC,EAAA,OAAArZ,EAAAC,EAAAK,KAAA,SAAA4a,GAAA,cAAAA,EAAA1a,KAAA0a,EAAAza,MAAA,cAAAya,EAAA1a,KAAA,GAGOJ,EAAO,IAAIM,KACZC,OAAO,SAAUlB,EAAQmD,QAC9BxC,EAAKO,OAAO,OAAQlB,EAAQoD,MAC5BzC,EAAKO,OAAO,OAAQ6F,KAAKiQ,UAAuB,GAAbhX,EAAQkD,OAC3CvC,EAAKO,OAAO,OAAQlB,EAAQkF,MAP7BuW,EAAAza,KAAA,EAQmBI,IAAMC,KACpB,YACAV,EACA,CAAC2Z,QAAS,CACN1P,OAAU,mBACVkP,kBAAmB,iBACnBI,mBAAoB,iBACpBC,cAAgB,UAAUC,aAAaC,qBAfhD,OAkBC,IAVMzZ,EARP6a,EAAAna,KAiBK2T,EAAM,GACFjK,EAAI,EAAGA,EAAEpK,EAAID,KAAKsU,IAAItN,OAAQqD,IAClCiK,EAAI2B,KAAK,CACL1R,KAAMtE,EAAID,KAAKsU,IAAIjK,GACnBwK,QAAS,CACLG,QAAQ,EACRvS,MAAM,KAKlB,GADI+R,EAAQ,GACK,4EAAdnV,EAAQkF,KACP,IAAQ8F,EAAI,EAAGA,EAAEpK,EAAID,KAAKA,KAAKgH,OAAQqD,IAAI,CAEvC,IADI0O,EAAM,GACFC,EAAK,EAAGA,EAAG/Y,EAAID,KAAKA,KAAKqK,GAAGrD,OAAQgS,KACpCC,EAAQhZ,EAAID,KAAKA,KAAKqK,GAAG2O,IACpBhS,OAAO,MACZiS,EAAQA,EAAMW,UAAU,EAAG,KAAK,OACpCb,EAAM9C,KAAKgD,GAEfzE,EAAMyB,KAAK8C,QAEdvE,EAAQvU,EAAID,KAAKA,KACtBX,EAAU,CACNkV,MAAOtU,EAAID,KAAKuU,MAChBhS,KAAMlD,EAAQkD,KACdvC,KAAMC,EAAID,KAAKA,KACfwU,MAAOA,EACPF,IAAKA,EACL9R,OAAQnD,EAAQmD,OAChB+B,KAAMlF,EAAQkF,KACd9B,KAAMpD,EAAQoD,MAElBgD,EAAS,CACLtG,KAAM0a,IACNxa,QAASA,IApDdyb,EAAAza,KAAA,iBAAAya,EAAA1a,KAAA,GAAA0a,EAAAja,GAAAia,EAAA,SAwDCha,QAAQC,MAAR+Z,EAAAja,IAxDD,yBAAAia,EAAA9Z,SAAA4Z,EAAA3Z,KAAA,aAAP,gBAAA8Z,GAAA,OAAAJ,EAAAxZ,MAAAF,KAAAG,YAAA,GA8DG,IAAMqM,EAAa,eAAAuN,EAAAtb,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAmb,EAAO5b,GAAP,IAAAW,EAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAgb,GAAA,cAAAA,EAAA9a,KAAA8a,EAAA7a,MAAA,cAAA6a,EAAA9a,KAAA,GAGfJ,EAAO,IAAIM,KACZC,OAAO,OAAQlB,EAAQkF,WACVoC,IAAftH,EAAQW,MACPA,EAAKO,OAAO,OAAQ6F,KAAKiQ,UAAUhX,EAAQW,OAN1Bkb,EAAA7a,KAAA,EAOHI,IAAMC,KACpB,YACAV,EACA,CAAC2Z,QAAS,CACN1P,OAAU,mBACVkP,kBAAmB,iBACnBI,mBAAoB,iBACpBC,cAAgB,UAAUC,aAAaC,qBAd1B,cAOfzZ,EAPeib,EAAAva,KAAAua,EAAAta,OAAA,SAiBdX,EAAID,MAjBU,QAAAkb,EAAA9a,KAAA,GAAA8a,EAAAra,GAAAqa,EAAA,SAmBrBpa,QAAQC,MAARma,EAAAra,IAnBqB,yBAAAqa,EAAAla,SAAAia,EAAAha,KAAA,aAAH,gBAAAka,GAAA,OAAAH,EAAA7Z,MAAAF,KAAAG,YAAA,GAwBbga,EAAa,eAAAC,EAAA3b,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAwb,EAAOjc,GAAP,IAAAW,EAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAqb,GAAA,cAAAA,EAAAnb,KAAAmb,EAAAlb,MAAA,cAAAkb,EAAAnb,KAAA,GAGfJ,EAAO,IAAIM,KACZC,OAAO,OAAQlB,EAAQkF,MAC5BvE,EAAKO,OAAO,MAAO6F,KAAKiQ,UAAUhX,EAAQW,OALrBub,EAAAlb,KAAA,EAMHI,IAAMC,KACpB,YACAV,EACA,CAAC2Z,QAAS,CACN1P,OAAU,mBACVkP,kBAAmB,iBACnBI,mBAAoB,iBACpBC,cAAgB,UAAUC,aAAaC,qBAb1B,cAMfzZ,EANesb,EAAA5a,KAAA4a,EAAA3a,OAAA,SAgBdX,EAAID,MAhBU,QAAAub,EAAAnb,KAAA,GAAAmb,EAAA1a,GAAA0a,EAAA,SAmBrBza,QAAQC,MAARwa,EAAA1a,IAnBqB,yBAAA0a,EAAAva,SAAAsa,EAAAra,KAAA,aAAH,gBAAAua,GAAA,OAAAH,EAAAla,MAAAF,KAAAG,YAAA,GAuBnB,SAASsT,EAAWrV,GACvB,sBAAAoc,EAAA/b,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAA4b,EAAOjW,GAAP,IAAAzF,EAAAC,EAAAqU,EAAAjK,EAAAmK,EAAAmH,EAAA5C,EAAAC,EAAAC,EAAA,OAAArZ,EAAAC,EAAAK,KAAA,SAAA0b,GAAA,cAAAA,EAAAxb,KAAAwb,EAAAvb,MAAA,cAAAub,EAAAxb,KAAA,GAGOJ,EAAO,IAAIM,KACZC,OAAO,SAAUlB,EAAQmD,QAC9BxC,EAAKO,OAAO,OAAQlB,EAAQoD,MAC5BzC,EAAKO,OAAO,OAAQ6F,KAAKiQ,UAAuB,GAAbhX,EAAQkD,OAC3CvC,EAAKO,OAAO,OAAQlB,EAAQkF,MAC5BvE,EAAKO,OAAO,UAAWlB,EAAQ+W,cACTzP,GAAnBtH,EAAQ2K,SAAwB3K,EAAQ2K,QAAQhD,OAAS,GACxDhH,EAAKO,OAAO,UAAWlB,EAAQ2K,SAVpC4R,EAAAvb,KAAA,GAYmBI,IAAMC,KACpB,eACAV,EACA,CAAC2Z,QAAS,CACN1P,OAAU,mBACVkP,kBAAmB,iBACnBI,mBAAoB,iBACpBC,cAAgB,UAAUC,aAAaC,qBAnBhD,QAsBC,IAVMzZ,EAZP2b,EAAAjb,KAqBK2T,EAAM,GACFjK,EAAI,EAAGA,EAAEpK,EAAID,KAAKsU,IAAItN,OAAQqD,IAClCiK,EAAI2B,KAAK,CACL1R,KAAMtE,EAAID,KAAKsU,IAAIjK,GACnBwK,QAAS,CACLG,QAAQ,EACRvS,MAAM,KAKlB,GADI+R,EAAQ,GACM,6EAAfnV,EAAQkF,KACP,IAAQ8F,EAAI,EAAGA,EAAEpK,EAAID,KAAKA,KAAKgH,OAAQqD,IAAI,CAEvC,IADI0O,EAAM,GACFC,EAAK,EAAGA,EAAG/Y,EAAID,KAAKA,KAAKqK,GAAGrD,OAAQgS,KACpCC,EAAQhZ,EAAID,KAAKA,KAAKqK,GAAG2O,IACpBhS,OAAO,MACZiS,EAAQA,EAAMW,UAAU,EAAG,KAAK,OACpCb,EAAM9C,KAAKgD,GAEfzE,EAAMyB,KAAK8C,QAEdvE,EAAQvU,EAAID,KAAKA,KACtBX,EAAU,CACNkV,MAAOtU,EAAID,KAAKuU,MAChBhS,KAAMlD,EAAQkD,KACdvC,KAAMC,EAAID,KAAKA,KACfwU,MAAOA,EACPF,IAAKA,EACL9R,OAAQnD,EAAQmD,OAChB+B,KAAMlF,EAAQkF,KACd9B,KAAMpD,EAAQoD,MAElBgD,EAAS,CACLtG,KAAM0a,IACNxa,QAASA,IAxDduc,EAAAvb,KAAA,iBAAAub,EAAAxb,KAAA,GAAAwb,EAAA/a,GAAA+a,EAAA,SA4DC9a,QAAQC,MAAR6a,EAAA/a,IA5DD,yBAAA+a,EAAA5a,SAAA0a,EAAAza,KAAA,aAAP,gBAAA4a,GAAA,OAAAJ,EAAAta,MAAAF,KAAAG,YAAA","file":"static/js/23.f62999ec.chunk.js","sourcesContent":["import { SHOW_DRAWER, SHOW_LOAD } from '../constants/app'\r\nimport axios from 'axios';\r\nimport FormData from 'form-data';\r\n\r\nexport function showDrawer(show) {\r\n    return {\r\n        type: SHOW_DRAWER,\r\n        payload: show\r\n    }\r\n}\r\n\r\nexport function showLoad(show) {\r\n    return {\r\n        type: SHOW_LOAD,\r\n        payload: show\r\n    }\r\n}\r\n\r\n\r\nexport let getElsom= async (payload) => {\r\n    try {\r\n        const data = new FormData();\r\n        data.append('wallet', payload.wallet);\r\n        const res = await axios.post(\r\n            'http://88.212.253.143:1000/payment/elsom/check',\r\n            data);\r\n        return res.data\r\n    } catch(error) {\r\n        console.error(error)\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [descriptionRu, setDescriptionRu] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleDescriptionRu =  (event) => {\r\n            setDescriptionRu(event.target.value)\r\n        };\r\n        let [descriptionKg, setDescriptionKg] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleDescriptionKg =  (event) => {\r\n            setDescriptionKg(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    multiline\r\n                    rowsMax='4'\r\n                    label='описание'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={descriptionRu}\r\n                    onChange={handleDescriptionRu}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    multiline\r\n                    rowsMax='4'\r\n                    label='баяндоо'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={descriptionKg}\r\n                    onChange={handleDescriptionKg}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'О нас', data: {descriptionRu: descriptionRu, descriptionKg: descriptionKg}});\r\n                        else\r\n                            setData({id: data[selected][3], search: '', sort: '', page: 0, name: 'О нас', data: {descriptionRu: descriptionRu, descriptionKg: descriptionKg}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [email, setEmail] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleEmail =  (event) => {\r\n            setEmail(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='email'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={email}\r\n                    onChange={handleEmail}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Email', data: {email: email}});\r\n                        else\r\n                            setData({id: data[selected][2], search: search, sort: sort, page: page, name: 'Email', data: {email: email}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    text_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        overflow: 'hidden',\r\n        wordWrap: 'break-word'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let ticket = selected!==-1?data[selected][0]:'';\r\n        let hash = selected!==-1?data[selected][1]:'';\r\n        let user = selected!==-1?data[selected][2]:'';\r\n        let event = selected!==-1?data[selected][3]:'';\r\n        let where = selected!==-1?data[selected][4]:'';\r\n        let [status, setStatus] = useState(selected!==-1?data[selected][5]:'');\r\n        let statuses = ['продан', 'возвращен', 'использован', 'отмена']\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let seats = selected!==-1?JSON.parse(data[selected][6]):'';\r\n\r\n        const { classes } = props;\r\n        return (\r\n            <div className={classes.text_message}>\r\n                <b>Билет</b>\r\n                <br/>\r\n                {ticket}\r\n                <br/>\r\n                <br/>\r\n                <b>Hash</b>\r\n                <br/>\r\n                {hash}\r\n                <br/>\r\n                <br/>\r\n                <b>Пользователь</b>\r\n                <br/>\r\n                {user}\r\n                <br/>\r\n                <br/>\r\n                <b>Мероприятие</b>\r\n                <br/>\r\n                {event}\r\n                <br/>\r\n                <br/>\r\n                <b>Площадка</b>\r\n                <br/>\r\n                {where}\r\n                <br/>\r\n                <br/>\r\n                {/*\r\n                <b>Места</b>\r\n                <br/>\r\n                {seats.length>0?\r\n                    seats.map(option => {\r\n                        return(\r\n                            <>\r\n                            {'Место: ' + option[0].name+' Цена: '+option[0].price+' Дата: '+option[1]}\r\n                            <br/>\r\n                            </>)\r\n                    }):null}\r\n                <br/>*/}\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Билеты', data: {status: status}});\r\n                        else\r\n                            setData({id: data[selected][data[selected].length-1], search: search, sort: sort, page: page, name: 'Билеты', data: {status: status}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [coords, setСoords] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleCoords =  (event) => {\r\n            setСoords(event.target.value)\r\n        };\r\n        let [cashbox, setСashbox] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleCashbox =  (event) => {\r\n            setСashbox(event.target.value)\r\n        };\r\n        let [address, setAddress] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleAddress =  (event) => {\r\n            setAddress(event.target.value)\r\n        };\r\n        let [booking, setBooking] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleBooking =  (event) => {\r\n            setBooking(event.target.value)\r\n        };\r\n        let [connection, setConnection] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleConnection =  (event) => {\r\n            setConnection(event.target.value)\r\n        };\r\n        let [return1, setReturn1] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleReturn1 =  (event) => {\r\n            setReturn1(event.target.value)\r\n        };\r\n        let [general, setGeneral] = useState(selected!==-1?data[selected][6]:'');\r\n        let handleGeneral =  (event) => {\r\n            setGeneral(event.target.value)\r\n        };\r\n        let [cooperation, setCooperation] = useState(selected!==-1?data[selected][7]:'');\r\n        let handleCooperation =  (event) => {\r\n            setCooperation(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='координаты'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={coords}\r\n                    onChange={handleCoords}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='касса'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={cashbox}\r\n                    onChange={handleCashbox}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='адрес'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={address}\r\n                    onChange={handleAddress}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='бронирование'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={booking}\r\n                    onChange={handleBooking}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='связь'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={connection}\r\n                    onChange={handleConnection}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='возврат'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={return1}\r\n                    onChange={handleReturn1}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='главная'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={general}\r\n                    onChange={handleGeneral}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='сотрудничество'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={cooperation}\r\n                    onChange={handleCooperation}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Контакт', data: {coords: coords, cashbox: cashbox, address: address, booking: booking, connection: connection, return1: return1, general: general, cooperation: cooperation}});\r\n                        else\r\n                            setData({id: data[selected][9], search: search, sort: sort, page: page, name: 'Контакт', data: {coords: coords, cashbox: cashbox, address: address, booking: booking, connection: connection, return1: return1, general: general, cooperation: cooperation}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let types = ['top', 'down']\r\n        let [type, setType] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleType =  (event) => {\r\n            setType(event.target.value)\r\n        };\r\n        let [name, setName] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [link, setLink] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleLink =  (event) => {\r\n            setLink(event.target.value)\r\n        };\r\n        let dateStart1;\r\n        if(selected!==-1) {\r\n            dateStart1 = data[selected][3].replace('.', '-').replace('.', '-').replace(' ', 'T')+':00';\r\n        }\r\n        let [dateStart, setDateStart] = useState(selected!==-1?dateStart1:'2019-01-01T00:00');\r\n        let handleDateStart =  (event) => {\r\n            setDateStart(event.target.value)\r\n        };\r\n        let dateEnd1;\r\n        if(selected!==-1){\r\n            dateEnd1 = data[selected][4].replace('.', '-').replace('.', '-').replace(' ', 'T')+':00';\r\n        }\r\n        let [dateEnd, setDateEnd] = useState(selected!==-1?dateEnd1:'2019-01-01T00:00');\r\n        let handleDateEnd =  (event) => {\r\n            setDateEnd(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ссылка'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={link}\r\n                    onChange={handleLink}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='дата начала'\r\n                    type='datetime-local'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dateStart}\r\n                    onChange={handleDateStart}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='дата окончания'\r\n                    type='datetime-local'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dateEnd}\r\n                    onChange={handleDateEnd}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='где'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={type}\r\n                    onChange={handleType}\r\n                >\r\n                    {types != undefined?\r\n                        types.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Реклама', file: file, data: {type: type, name: name, link: link, dateStart: dateStart, dateEnd: dateEnd}});\r\n                        else\r\n                            setData({id: data[selected][7], search: search, sort: sort, page: page, name: 'Реклама', oldFile: data[selected][0], file: file, data: {type: type, name: name, link: link, dateStart: dateStart, dateEnd: dateEnd}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [questionRu, setQuestionRu] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleQuestionRu =  (event) => {\r\n            setQuestionRu(event.target.value)\r\n        };\r\n        let [answerRu, setAnswerRu] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleAnswerRu =  (event) => {\r\n            setAnswerRu(event.target.value)\r\n        };\r\n        let [questionKg, setQuestionKg] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleQuestionKg =  (event) => {\r\n            setQuestionKg(event.target.value)\r\n        };\r\n        let [answerKg, setAnswerKg] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleAnswerKg =  (event) => {\r\n            setAnswerKg(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='вопрос'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={questionRu}\r\n                    onChange={handleQuestionRu}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ответ'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={answerRu}\r\n                    onChange={handleAnswerRu}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='суроо'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={questionKg}\r\n                    onChange={handleQuestionKg}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='жооп'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={answerKg}\r\n                    onChange={handleAnswerKg}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'FAQ', data: { questionRu: questionRu, answerRu: answerRu, questionKg: questionKg, answerKg: answerKg}});\r\n                        else\r\n                            setData({id: data[selected][5], search: search, sort: sort, page: page, name: 'FAQ', data: { questionRu: questionRu, answerRu: answerRu, questionKg: questionKg, answerKg: answerKg}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        const names = ['vertical', 'square', 'horizontal', 'main', 'mainKG']\r\n        let [name, setName] = useState(selected!==-1?data[selected][1]:'main');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                >\r\n                    {names != undefined?\r\n                        names.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Логотип', file: file, data: {name: name}});\r\n                        else\r\n                            setData({id: data[selected][3], search: search, sort: sort, page: page, name: 'Логотип', oldFile: data[selected][0], file: file, data: {name: name}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [contact, setContact] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleContact =  (event) => {\r\n            setContact(event.target.value)\r\n        };\r\n        let [whoRu, setWhoRu] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleWhoRu =  (event) => {\r\n            setWhoRu(event.target.value)\r\n        };\r\n        let [whoKg, setWhoKg] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleWhoKg =  (event) => {\r\n            setWhoKg(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='контакты'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={contact}\r\n                    onChange={handleContact}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='кто'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={whoRu}\r\n                    onChange={handleWhoRu}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ким'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={whoKg}\r\n                    onChange={handleWhoKg}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Персонал', data: { contact: contact, whoRu: whoRu, whoKg: whoKg}});\r\n                        else\r\n                            setData({id: data[selected][4], search: search, sort: sort, page: page, name: 'Персонал', data: { contact: contact, whoRu: whoRu, whoKg: whoKg}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [phone, setPhone] = useState(selected!==-1?data[selected][0]:'');\r\n        let handlePhone =  (event) => {\r\n            setPhone(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='телефон'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={phone}\r\n                    onChange={handlePhone}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Телефон', data: {phone: phone}});\r\n                        else\r\n                            setData({id: data[selected][2], search: search, sort: sort, page: page, name: 'Телефон', data: {phone: phone}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [name, setName] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [link, setLink] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleLink =  (event) => {\r\n            setLink(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ссылка'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={link}\r\n                    onChange={handleLink}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Социалки', file: file, data: {name: name, url: link}});\r\n                        else\r\n                            setData({id: data[selected][4], search: search, sort: sort, page: page, name: 'Социалки', oldFile: data[selected][0], file: file, data: {name: name, url: link}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [nameRu, setNameRu] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleNameRu =  (event) => {\r\n            setNameRu(event.target.value)\r\n        };\r\n        let [requirementsRu, setRequirementsRu] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleRequirementsRu =  (event) => {\r\n            setRequirementsRu(event.target.value)\r\n        };\r\n        let [dutiesRu, setDutiesRu] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleDutiesRu =  (event) => {\r\n            setDutiesRu(event.target.value)\r\n        };\r\n        let [conditionsRu, setConditionsRu] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleConditionsRu =  (event) => {\r\n            setConditionsRu(event.target.value)\r\n        };\r\n        let [nameKg, setNameKg] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleNameKg =  (event) => {\r\n            setNameKg(event.target.value)\r\n        };\r\n        let [requirementsKg, setRequirementsKg] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleRequirementsKg =  (event) => {\r\n            setRequirementsKg(event.target.value)\r\n        };\r\n        let [dutiesKg, setDutiesKg] = useState(selected!==-1?data[selected][6]:'');\r\n        let handleDutiesKg =  (event) => {\r\n            setDutiesKg(event.target.value)\r\n        };\r\n        let [conditionsKg, setConditionsKg] = useState(selected!==-1?data[selected][7]:'');\r\n        let handleConditionsKg =  (event) => {\r\n            setConditionsKg(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='название'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={nameRu}\r\n                    onChange={handleNameRu}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='обязанности'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={requirementsRu}\r\n                    onChange={handleRequirementsRu}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='требования'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dutiesRu}\r\n                    onChange={handleDutiesRu}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='условия'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={conditionsRu}\r\n                    onChange={handleConditionsRu}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ысым'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={nameKg}\r\n                    onChange={handleNameKg}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='милдеттери'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={requirementsKg}\r\n                    onChange={handleRequirementsKg}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='талаптар'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dutiesKg}\r\n                    onChange={handleDutiesKg}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='шарттары'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={conditionsKg}\r\n                    onChange={handleConditionsKg}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Вакансии', data: {nameRu: nameRu, requirementsRu: requirementsRu, dutiesRu: dutiesRu, conditionsRu: conditionsRu, nameKg: nameKg, requirementsKg: requirementsKg, dutiesKg: dutiesKg,  conditionsKg: conditionsKg}});\r\n                        else\r\n                            setData({id: data[selected][9], search: search, sort: sort, page: page, name: 'Вакансии', data: {nameRu: nameRu, requirementsRu: requirementsRu, dutiesRu: dutiesRu, conditionsRu: conditionsRu, nameKg: nameKg, requirementsKg: requirementsKg, dutiesKg: dutiesKg,  conditionsKg: conditionsKg}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [nameRu, setNameRu] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleNameRu =  (event) => {\r\n            setNameRu(event.target.value)\r\n        };\r\n        let [nameKg, setNameKg] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleNameKg =  (event) => {\r\n            setNameKg(event.target.value)\r\n        };\r\n        let [address, setAddress] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleAddress = (event) => {\r\n            setAddress(event.target.value)\r\n        };\r\n        let [city, setCity] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleCity = (event) => {\r\n            setCity(event.target.value)\r\n        };\r\n        let [coords, setCoords] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleCoords =  (event) => {\r\n            setCoords(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='название'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={nameRu}\r\n                    onChange={handleNameRu}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ысым'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={nameKg}\r\n                    onChange={handleNameKg}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='адрес'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={address}\r\n                    onChange={handleAddress}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='город'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={city}\r\n                    onChange={handleCity}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='координаты'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={coords}\r\n                    onChange={handleCoords}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Площадка', file: file, data: {city: city, nameRu: nameRu, nameKg: nameKg, address: address, coords: coords}});\r\n                        else\r\n                            setData({id: data[selected][7], search: search, sort: sort, page: page, name: 'Площадка', oldFile: data[selected][0], file: file, data: {city: city, nameRu: nameRu, nameKg: nameKg, address: address, coords: coords}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    text_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        overflow: 'hidden',\r\n        wordWrap: 'break-word'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [surname, setSurame] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleSurname =  (event) => {\r\n            setSurame(event.target.value)\r\n        };\r\n        let [email, setEmail] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleEmail =  (event) => {\r\n            setEmail(event.target.value)\r\n        };\r\n        let [phonenumber, setPhonenumber] = useState(selected!==-1?data[selected][3]:'');\r\n        let handlePhonenumber = (event) => {\r\n            setPhonenumber(event.target.value)\r\n        };\r\n        let roles = ['manager', 'accountant', 'cashier', 'client', 'cinema', 'turnstile', 'organizator']\r\n        let [role, setRole] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleRole = (event) => {\r\n            setRole(event.target.value)\r\n        };\r\n        let statuses = ['active', 'inactive']\r\n        let [status, setStatus] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let [password, setPassword] = useState('');\r\n        let handlePassword =  (event) => {\r\n            setPassword(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='фамилия'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={surname}\r\n                    onChange={handleSurname}\r\n                />\r\n                <br/>\r\n                {selected!==-1?\r\n                    <>\r\n                    <br/>\r\n                    <div className={classes.textField}>\r\n                        <b>email:</b> {email}\r\n                    </div>\r\n                    <br/>\r\n                    </>\r\n                    :\r\n                    <>\r\n                    <TextField\r\n                        label='email'\r\n                        type='login'\r\n                        className={classes.textField}\r\n                        margin='normal'\r\n                        value={email}\r\n                        onChange={handleEmail}\r\n                    />\r\n                    <br/>\r\n                    </>\r\n                }\r\n                <TextField\r\n                    label='телефон'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={phonenumber}\r\n                    onChange={handlePhonenumber}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='роль'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={role}\r\n                    onChange={handleRole}\r\n                >\r\n                    {roles != undefined?\r\n                        roles.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <br/>\r\n                    <TextField\r\n                        label='пароль'\r\n                        type='login'\r\n                        className={classes.textField}\r\n                        margin='normal'\r\n                        value={password}\r\n                        onChange={handlePassword}\r\n                    />\r\n                    <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Пользователи', data: {email: email, name: name, surname: surname, phonenumber: phonenumber, role: role, password: password, status: status}});\r\n                        else\r\n                            setData({id: data[selected][7], search: search, sort: sort, page: page, name: 'Пользователи', data: {email: email, name: name, surname: surname, phonenumber: phonenumber, role: role,  password: password, status: status}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { getDataSimple } from '../../redux/actions/table'\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        useEffect(()=>{(async()=>{\r\n            await setEvents(await getDataSimple({name: 'СобытиеID'}));\r\n        })()},[])\r\n        let [events, setEvents] = useState([]);\r\n        let [event, setEvent] = useState(selected!==-1?data[selected][2].split('\\n')[1]:'');\r\n        let handleEvent =  (event) => {\r\n            setEvent(event.target.value)\r\n        };\r\n        let [name, setName] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let dateStart1;\r\n        if(selected!==-1) {\r\n            dateStart1 = {part1: data[selected][3].split(' ')};\r\n            dateStart1.part2 = dateStart1.part1[1];\r\n            dateStart1.part1 = dateStart1.part1[0].split('.');\r\n            dateStart1 =  dateStart1.part1[0]+'-'+dateStart1.part1[2]+'-'+dateStart1.part1[1]+'T'+dateStart1.part2+':00';\r\n        }\r\n        let [dateStart, setDateStart] = useState(selected!==-1?dateStart1:'2019-01-01T00:00');\r\n        let handleDateStart =  (event) => {\r\n            setDateStart(event.target.value)\r\n        };\r\n        let dateEnd1;\r\n        if(selected!==-1){\r\n            dateEnd1 = {part1: data[selected][4].split(' ')};\r\n            dateEnd1.part2 = dateEnd1.part1[1];\r\n            dateEnd1.part1 = dateEnd1.part1[0].split('.');\r\n            dateEnd1 =  dateEnd1.part1[0]+'-'+dateEnd1.part1[2]+'-'+dateEnd1.part1[1]+'T'+dateEnd1.part2+':00';\r\n        }\r\n        console.log(dateEnd1, dateStart1)\r\n        let [dateEnd, setDateEnd] = useState(selected!==-1?dateEnd1:'2019-01-01T00:00');\r\n        let handleDateEnd =  (event) => {\r\n            setDateEnd(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='событие'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={event}\r\n                    onChange={handleEvent}\r\n                >\r\n                    {events != undefined?\r\n                        events.map(option => {\r\n                            return(\r\n                            <MenuItem key={option._id} value={option._id}>\r\n                                {option.nameRu}\r\n                            </MenuItem>)\r\n                        })\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='дата начала'\r\n                    type='datetime-local'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dateStart}\r\n                    onChange={handleDateStart}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='дата окончания'\r\n                    type='datetime-local'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dateEnd}\r\n                    onChange={handleDateEnd}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Биллборды', file: file, data: {name: name, dateStart: dateStart, dateEnd: dateEnd, event: event}});\r\n                        else\r\n                            setData({id: data[selected][6], search: search, sort: sort, page: page, name: 'Биллборды', oldFile: data[selected][0], file: file, data: {name: name, dateStart: dateStart, dateEnd: dateEnd, event: event}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [name, setName] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleName = (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [genre, setGenre] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleGenre = (event) => {\r\n            setGenre(event.target.value)\r\n        };\r\n        let types = ['скоро', 'в прокате']\r\n        let [type, setType] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleType = (event) => {\r\n            setType(event.target.value)\r\n        };\r\n        let [duration, setDuration] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleDuration = (event) => {\r\n            setDuration(event.target.value)\r\n        };\r\n        let [ageCategory, setAgeCategory] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleAgeCategory = (event) => {\r\n            setAgeCategory(event.target.value)\r\n        };\r\n        let [premier, setPremier] = useState(selected!==-1?data[selected][6]:'');\r\n        let handlePremier = (event) => {\r\n            setPremier(event.target.value)\r\n        };\r\n        let [producers, setPoducers] = useState(selected!==-1?data[selected][7]:'');\r\n        let handleProducers = (event) => {\r\n            setPoducers(event.target.value)\r\n        };\r\n        let [actors, setActors] = useState(selected!==-1?data[selected][8]:'');\r\n        let handleActors = (event) => {\r\n            setActors(event.target.value)\r\n        };\r\n        let [description, setDescription] = useState(selected!==-1?data[selected][9]:'');\r\n        let handleDescription = (event) => {\r\n            setDescription(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='жанр'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={genre}\r\n                    onChange={handleGenre}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='тип'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={type}\r\n                    onChange={handleType}\r\n                >\r\n                    {types != undefined?\r\n                        types.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='продолжительность'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={duration}\r\n                    onChange={handleDuration}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='возраст'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={ageCategory}\r\n                    onChange={handleAgeCategory}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='премьера'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={premier}\r\n                    onChange={handlePremier}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='актеры'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={actors}\r\n                    onChange={handleActors}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='режиссеры'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={producers}\r\n                    onChange={handleProducers}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    multiline\r\n                    rowsMax='4'\r\n                    label='описание'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={description}\r\n                    onChange={handleDescription}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Кино', file: file, data: {name: name, genre: genre, type: type, description: description, duration: duration, ageCategory: ageCategory, premier: premier,  producers: producers, actors: actors}});\r\n                        else\r\n                            setData({id: data[selected][11], search: search, sort: sort, page: page, name: 'Кино', oldFile: data[selected][0], file: file, data: {name: name, genre: genre, type: type, description: description, duration: duration, ageCategory: ageCategory, premier: premier,  producers: producers, actors: actors}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [mailuser, setMailuser] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleMailuser =  (event) => {\r\n            setMailuser(event.target.value)\r\n        };\r\n        let [mailpass, setMailpass] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleMailpass =  (event) => {\r\n            setMailpass(event.target.value)\r\n        };\r\n        let [mailchimpInstance, setMailchimpInstance] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleMailchimpInstance =  (event) => {\r\n            setMailchimpInstance(event.target.value)\r\n        };\r\n        let [listUniqueId, setListUniqueId] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleListUniqueId =  (event) => {\r\n            setListUniqueId(event.target.value)\r\n        };\r\n        let [mailchimpApiKey, setMailchimpApiKey] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleMailchimpApiKey =  (event) => {\r\n            setMailchimpApiKey(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='mailuser'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={mailuser}\r\n                    onChange={handleMailuser}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='mailpass'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={mailpass}\r\n                    onChange={handleMailpass}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='mailchimpInstance'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={mailchimpInstance}\r\n                    onChange={handleMailchimpInstance}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='listUniqueId'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={listUniqueId}\r\n                    onChange={handleListUniqueId}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='mailchimpApiKey'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={mailchimpApiKey}\r\n                    onChange={handleMailchimpApiKey}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Рассылка', data: {mailuser: mailuser, mailpass: mailpass, mailchimpInstance: mailchimpInstance, listUniqueId: listUniqueId, mailchimpApiKey: mailchimpApiKey}});\r\n                        else\r\n                            setData({id: data[selected][6], search: search, sort: sort, page: page, name: 'Рассылка', data: {mailuser: mailuser, mailpass: mailpass, mailchimpInstance: mailchimpInstance, listUniqueId: listUniqueId, mailchimpApiKey: mailchimpApiKey}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { getDataSimple } from '../../redux/actions/table'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        useEffect(()=>{(async()=>{\r\n            await setUsers(await getDataSimple({name: 'Кинотеатры'}));\r\n        })()},[])\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [user, setUser] = useState(selected!==-1?data[selected][1].split('\\n')[1]:'');\r\n        let handleUser =  (event) => {\r\n            setUser(event.target.value)\r\n        };\r\n        let [users, setUsers] = useState([]);\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='название'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='кинотеатр'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={user}\r\n                    onChange={handleUser}\r\n                >\r\n                    {users != undefined?\r\n                        users.map(option => (\r\n                            <MenuItem key={option._id} value={option._id}>\r\n                                {option.name}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Залы', data: {name: name, user: user}});\r\n                        else\r\n                            setData({id: data[selected][3], search: search, sort: sort, page: page, name: 'Залы', data: {name: name, user: user}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    text_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        overflow: 'hidden',\r\n        wordWrap: 'break-word'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let ticket = selected!==-1?data[selected][0]:'';\r\n        let hash = selected!==-1?data[selected][1]:'';\r\n        let user = selected!==-1?data[selected][2]:'';\r\n        let movie = selected!==-1?data[selected][3]:'';\r\n        let cinema = selected!==-1?data[selected][4]:'';\r\n        let hall = selected!==-1?data[selected][5]:'';\r\n        let [status, setStatus] = useState(selected!==-1?data[selected][6]:'');\r\n        let statuses = ['продан', 'возвращен', 'использован']\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let seats = selected!==-1?JSON.parse(data[selected][7]):'';\r\n\r\n        const { classes } = props;\r\n        return (\r\n            <div className={classes.text_message}>\r\n                <b>Билет</b>\r\n                <br/>\r\n                {ticket}\r\n                <br/>\r\n                <br/>\r\n                <b>Hash</b>\r\n                <br/>\r\n                {hash}\r\n                <br/>\r\n                <br/>\r\n                <b>Пользователь</b>\r\n                <br/>\r\n                {user}\r\n                <br/>\r\n                <br/>\r\n                <b>Фильм</b>\r\n                <br/>\r\n                {movie}\r\n                <br/>\r\n                <br/>\r\n                <b>Кинотеатр</b>\r\n                <br/>\r\n                {cinema}\r\n                <br/>\r\n                <br/>\r\n                <b>Зал</b>\r\n                <br/>\r\n                {hall}\r\n                <br/>\r\n                <br/>\r\n                <b>Места</b>\r\n                <br/>\r\n                {seats.length>0?\r\n                    seats.map(option => {\r\n                        return(\r\n                            <>\r\n                            {'Место: ' + option.name+' Цена: '+option.priceSelect+' Дата: '+option.date}\r\n                            <br/>\r\n                            </>)\r\n                    }):null}\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Билеты кино', data: {status: status}});\r\n                        else\r\n                            setData({id: data[selected][9], search: search, sort: sort, page: page, name: 'Билеты кино', data: {status: status}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    text_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        overflow: 'hidden',\r\n        wordWrap: 'break-word'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [balance, setBalance] = useState(selected!==-1?data[selected][2]:'');\r\n        let user = selected!==-1?data[selected][0]:'';\r\n        let wallet = selected!==-1?data[selected][1]:'';\r\n        let handleBalance =  (event) => {\r\n            setBalance(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <div className={classes.textField}>\r\n                    <b>пользователь:</b> {user}\r\n                </div>\r\n                <br/>\r\n                <div className={classes.textField}>\r\n                    <b>кошелек:</b> {wallet}\r\n                </div>\r\n                <br/>\r\n                <TextField\r\n                    label='баланс'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={balance}\r\n                    onChange={handleBalance}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected!==-1)\r\n                            setData({id: data[selected][4], search: search, sort: sort, page: page, name: 'Баланс', data: {balance: balance}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [address, setAddress] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleAddress =  (event) => {\r\n            setAddress(event.target.value)\r\n        };\r\n        let [geo, setGeo] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleGeo =  (event) => {\r\n            setGeo(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='адрес'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={address}\r\n                    onChange={handleAddress}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='геолокация'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={geo}\r\n                    onChange={handleGeo}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Кассы', data: {geo: geo, name: name, address: address}});\r\n                        else\r\n                            setData({id: data[selected][4], search: search, sort: sort, page: page, name: 'Кассы', data: {geo: geo, name: name, address: address}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    text_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        overflow: 'hidden',\r\n        wordWrap: 'break-word'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let wallet = selected!==-1?data[selected][0]:'';\r\n        let ticket = selected!==-1?data[selected][1]:'';\r\n        let service = selected!==-1?data[selected][2]:'';\r\n        let sum = selected!==-1?data[selected][3]:'';\r\n        let meta = selected!==-1?data[selected][4]:'';\r\n        let [status, setStatus] = useState(selected!==-1?data[selected][5]:'');\r\n        let name = selected!==-1?data[selected][6]:'';\r\n        let email = selected!==-1?data[selected][7]:'';\r\n        let sms = selected!==-1?data[selected][8]:'';\r\n        let statuses = ['обработка', 'совершен', 'отменен', 'ошибка']\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n\r\n        const { classes } = props;\r\n        return (\r\n            <div className={classes.text_message}>\r\n                <b>Адрес</b>\r\n                <br/>\r\n                {wallet}\r\n                <br/>\r\n                <br/>\r\n                <b>Билет</b>\r\n                <br/>\r\n                {ticket}\r\n                <br/>\r\n                <br/>\r\n                <b>Сумма</b>\r\n                <br/>\r\n                {sum}\r\n                <br/>\r\n                <br/>\r\n                <b>Сервис</b>\r\n                <br/>\r\n                {service}\r\n                <br/>\r\n                <br/>\r\n                <b>Meta</b>\r\n                <br/>\r\n                {meta}\r\n                <br/>\r\n                <br/>\r\n                <b>Имя</b>\r\n                <br/>\r\n                {name}\r\n                <br/>\r\n                <br/>\r\n                <b>Email</b>\r\n                <br/>\r\n                {email}\r\n                <br/>\r\n                <br/>\r\n                <b>SMS</b>\r\n                <br/>\r\n                {sms}\r\n                <br/>\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Платежи', data: {status: status}});\r\n                        else\r\n                            setData({id: data[selected][10], search: search, sort: sort, page: page, name: 'Платежи', data: {status: status}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import { SET_MINI_DIALOG, SHOW_MINI_DIALOG } from '../constants/mini_dialog'\r\nimport React from 'react'\r\nimport {\r\n    store\r\n} from '../../index'\r\nimport About from '../../component/Add/About';\r\nimport Email from '../../component/Add/Email';\r\nimport Ticket from '../../component/Add/Ticket';\r\nimport Contact from '../../component/Add/Contact';\r\nimport Ads from '../../component/Add/Ads';\r\nimport Faq from '../../component/Add/Faq';\r\nimport Logo from '../../component/Add/Logo';\r\nimport Personal from '../../component/Add/Personal';\r\nimport Phone from '../../component/Add/Phone';\r\nimport Social from '../../component/Add/Social';\r\nimport Vacancy from '../../component/Add/Vacancy';\r\nimport Where from '../../component/Add/Where';\r\nimport User from '../../component/Add/User';\r\nimport Billboard from '../../component/Add/Billboard';\r\nimport Cinema from '../../component/Add/Cinema';\r\nimport Mailing from '../../component/Add/Mailing';\r\nimport Hall from '../../component/Add/Hall';\r\nimport TicketCinema from '../../component/Add/TicketCinema';\r\nimport Balance from '../../component/Add/Balance';\r\nimport Cashbox from '../../component/Add/Cashbox';\r\nimport Payment from '../../component/Add/Payment';\r\n\r\nexport function setMiniDialog(title,child) {\r\n    return {\r\n        type: SET_MINI_DIALOG,\r\n        payload: {title: title, child: child}\r\n    }\r\n}\r\n\r\nexport function showAddMiniDialog() {\r\n    return async (dispatch) => {\r\n        if(store.getState().table.name!=''){\r\n            let child;\r\n            if(store.getState().table.name=='Рассылка')\r\n                child = <Mailing/>\r\n            else if(store.getState().table.name=='Билеты кино')\r\n                child = <TicketCinema/>\r\n            else if(store.getState().table.name=='О нас')\r\n                child = <About/>\r\n            else if(store.getState().table.name=='Билеты')\r\n                child = <Ticket/>\r\n            else if(store.getState().table.name=='Кино')\r\n                child = <Cinema/>\r\n            else if(store.getState().table.name=='Email')\r\n                child = <Email/>\r\n            else if(store.getState().table.name=='Площадка')\r\n                child = <Where/>\r\n            else if(store.getState().table.name=='Вакансии')\r\n                child = <Vacancy/>\r\n            else if(store.getState().table.name=='Реклама')\r\n                child = <Ads/>\r\n            else if(store.getState().table.name=='Контакт')\r\n                child = <Contact/>\r\n            else if(store.getState().table.name=='FAQ')\r\n                child = <Faq/>\r\n            else if(store.getState().table.name=='Логотип')\r\n                child = <Logo/>\r\n            else if(store.getState().table.name=='Персонал')\r\n                child = <Personal/>\r\n            else if(store.getState().table.name=='Телефон')\r\n                child = <Phone/>\r\n            else if(store.getState().table.name=='Социалки')\r\n                child = <Social/>\r\n            else if(store.getState().table.name=='Пользователи')\r\n                child = <User/>\r\n            else if(store.getState().table.name=='Биллборды')\r\n                child = <Billboard/>\r\n            else if(store.getState().table.name=='Залы')\r\n                child = <Hall/>\r\n            else if(store.getState().table.name=='Баланс')\r\n                child = <Balance/>\r\n            else if(store.getState().table.name=='Кассы')\r\n                child = <Cashbox/>\r\n            else if(store.getState().table.name=='Платежи')\r\n                child = <Payment/>\r\n            dispatch ({\r\n                type: SET_MINI_DIALOG,\r\n                payload: {title: store.getState().table.name, child: child}\r\n            })\r\n            dispatch ({\r\n                type: SHOW_MINI_DIALOG,\r\n                payload: true\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function showMiniDialog(show) {\r\n    return {\r\n        type: SHOW_MINI_DIALOG,\r\n        payload: show\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.fdc48fe4.png\";","import React from 'react';\r\nimport MUIDataTable from 'mui-datatables';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as tableActions from '../redux/actions/table'\r\nimport * as mini_dialogActions from '../redux/actions/mini_dialog'\r\nimport ImageGallery from 'react-image-gallery';\r\nimport 'react-image-gallery/styles/css/image-gallery.css';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { mainWindow } from '../App'\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport logo from '../logo.png';\r\n\r\nconst message = mainWindow.current.offsetWidth>800?\r\n    <>\r\n        DsrAdmin - не будущее, а настоящее\r\n        <br/>\r\n        <i style={{fontWeight: '500', fontSize: '18px'}}>Для начала выберите пункт в боковом меню</i>\r\n    </>\r\n    :\r\n    <>\r\n    DsrAdmin - не будущее, а настоящее\r\n        <br/>\r\n        <i style={{fontWeight: '500', fontSize: '18px'}}>Для начала нажмите значок и выберите пункт в боковом меню</i>\r\n    </>;\r\nconst width = mainWindow.current.offsetWidth>800? 500: 240;\r\nconst styles = theme => ({\r\n    mainMessage: {\r\n        backgroundImage: \"url('https://i.imgur.com/ZE6v9a9.jpg')\",\r\n        backgroundPosition: 'center center',\r\n        backgroundRepeat: 'no-repeat',\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    message: {\r\n        color: '#ffffff',\r\n        fontWeight: 'bold',\r\n        fontSize: '20px',\r\n        width: width,\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: 'calc((100% - '+width+'px)/2)',\r\n        marginRight: 'calc((100% - '+width+'px)/2)'\r\n    }\r\n});\r\n\r\nconst Table = React.memo(\r\n    (props) => {\r\n        const { classes } = props;\r\n        let getMuiTheme = () => createMuiTheme({\r\n            overrides: {\r\n                MUIDataTableBodyCell: {\r\n                    root: {\r\n                        textOverflow: 'ellipsis',\r\n                        maxHeight: '500px',\r\n                        maxWidth: '200px',\r\n                        overflow: 'hidden',\r\n                        wordWrap: 'break-word'\r\n                    }\r\n                },\r\n                MuiPaper: {\r\n                    elevation4:{\r\n                        boxShadow: 'none'\r\n                    }\r\n                }\r\n\r\n            }\r\n        })\r\n        const { row, count, page, data, data1, name, search, sort } = props.table;\r\n        const { getData, deleteData, setSelected } = props.tableActions;\r\n        const { showAddMiniDialog, setMiniDialog, showMiniDialog } = props.mini_dialogActions;\r\n        const { authenticated } = props.user;\r\n        const options = {\r\n            serverSide: true,\r\n            filterType: 'checkbox',\r\n            filter: false,\r\n            print: false,\r\n            rowsPerPage: 10,\r\n            count: count,\r\n            page: page,\r\n            rowsPerPageOptions: false,\r\n            downloadOptions: {filename: 'tableDownload.csv', separator: ','},\r\n            onColumnSortChange: (changedColumn, direction) => {\r\n                getData({search: search, sort: [changedColumn, direction], page: page, name: name})\r\n                setSelected(-1)\r\n            },\r\n            onSearchChange: (searchText) => {\r\n                getData({search: searchText, sort: '', page: 0, name: name})\r\n                setSelected(-1)\r\n            },\r\n            onChangePage: (currentPage) => {\r\n                getData({search: search, sort: sort, page: currentPage, name: name})\r\n                setSelected(-1)\r\n            },\r\n            onRowsDelete: (rowsDeleted) => {\r\n                let deletedId = [], oldFile = '';\r\n                for(let i=0; i<rowsDeleted.data.length; i++){\r\n                    deletedId.push(data[rowsDeleted.data[i].index][data[rowsDeleted.data[i].index].length-1])\r\n                    if(data[rowsDeleted.data[i].index][0]!=undefined&&(data[i][0].includes('http')||data[rowsDeleted.data[i].index][0].includes('https')))\r\n                        oldFile += '\\n' + data[rowsDeleted.data[i].index][0]\r\n                }\r\n                deleteData({oldFile: oldFile, search: search, sort: sort, page: page, name: name, deleted: JSON.stringify(deletedId)})\r\n                setSelected(-1)\r\n            },\r\n            onCellClick: (colData, colMeta) => {\r\n                colData = colData.toString()\r\n                if(colData!=undefined&&!(colData.includes('http')||colData.includes('https'))) {\r\n                    setSelected(colMeta.rowIndex)\r\n                    if(name === 'Событие'){\r\n                        props.history.push('/event')\r\n                    } else if(name === 'Сеанс'){\r\n                        props.history.push('/seance')\r\n                    } else {\r\n                        showAddMiniDialog()\r\n                    }\r\n                } else if(name === 'Билеты'||name === 'Билеты кино') {\r\n                    let win = window.open(colData, '_blank');\r\n                    win.focus();\r\n                } else {\r\n                    let images = []\r\n                    for (let i = 0; i<colData.split('\\n').length; i++)\r\n                        images.push({original: colData.split('\\n')[i], thumbnail: colData.split('\\n')[i]})\r\n                    setMiniDialog('Просмотр', <ImageGallery items={images} showThumbnails={false} showFullscreenButton={false} showPlayButton={false} />);\r\n                    showMiniDialog(true)\r\n                }\r\n            },\r\n            onTableChange: (action, tableState) => {\r\n                if(action==='search'&&tableState.searchText===null){\r\n                    getData({search: '', sort: '', page: 0, name: name})\r\n                    setSelected(-1)\r\n                }\r\n            }\r\n        };\r\n        return (\r\n                <>\r\n                    {authenticated&&name!=''?\r\n                        <MuiThemeProvider theme={getMuiTheme()}>\r\n                            <MUIDataTable\r\n                                title={name}\r\n                                data={data1}\r\n                                columns={row}\r\n                                options={options}\r\n                            />\r\n                        </MuiThemeProvider>\r\n                        :\r\n                        <div className={classes.mainMessage}>\r\n                            <div className={classes.message}>\r\n                                <img style={{width:'100px'}} src={logo} /><br/>\r\n                                <br/>\r\n                                {message}\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </>\r\n            );\r\n        }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        table: state.table,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nTable.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Table));","import {\r\n    GET_DATA,\r\n    GET_IDS,\r\n    SET_SELECTED\r\n} from '../constants/table'\r\nimport axios from 'axios';\r\nimport FormData from 'form-data';\r\nimport {\r\n    store\r\n} from '../../index'\r\nimport {\r\n    showLoad\r\n} from '../actions/app'\r\n\r\nexport function setData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            \r\n            const data = new FormData();\r\n            let _headers;\r\n            data.append('id', payload.id);\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            data.append('new', JSON.stringify(payload.data));\r\n            if(payload.oldFile != undefined){\r\n                data.append('oldFile', payload.oldFile);\r\n            }\r\n            if(payload.oldFileWhatermark != undefined){\r\n                data.append('oldFileWhatermark', payload.oldFileWhatermark);\r\n            }\r\n            if (payload.file != undefined) {\r\n                data.append('fileLength', payload.file.length);\r\n                for(let i=0; i<payload.file.length; i++){\r\n                    data.append('file'+i, payload.file[i]);\r\n                    data.append('fileName'+i, payload.file[i].name);\r\n                }\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization': 'Bearer ' + localStorage.userBiletikiAdmin,\r\n                }\r\n            } else {\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }\r\n            }\r\n            const res = await axios.post(\r\n                '/data/add',\r\n                data,\r\n                {headers: _headers});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name!='Произведение')\r\n                for(let i = 0; i<res.data.data.length; i++){\r\n                    let data2=[]\r\n                    for(let i1 = 0; i1<res.data.data[i].length; i1++){\r\n                        let data3 = res.data.data[i][i1]\r\n                        if(data3.length>200)\r\n                            data3 = data3.substring(0, 200)+'...'\r\n                        data2.push(data3)\r\n                    }\r\n                    data1.push(data2)\r\n                }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n            //store.dispatch(showLoad(false))\r\n        } catch(error) {\r\n            console.error(error)\r\n            //store.dispatch(showLoad(false))\r\n        }\r\n    };\r\n}\r\n\r\nexport function addData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            \r\n            const data = new FormData();\r\n            let _headers;\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            data.append('new', JSON.stringify(payload.data));\r\n            if (payload.file != undefined) {\r\n                data.append('fileLength', payload.file.length);\r\n                for(let i=0; i<payload.file.length; i++){\r\n                    data.append('file'+i, payload.file[i]);\r\n                    data.append('fileName'+i, payload.file[i].name);\r\n                }\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization': 'Bearer ' + localStorage.userBiletikiAdmin\r\n                }\r\n            } else {\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }\r\n            }\r\n            const res = await axios.post(\r\n                '/data/add',\r\n                data,\r\n                {headers: _headers});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name!='Произведение')\r\n                for(let i = 0; i<res.data.data.length; i++){\r\n                    let data2=[]\r\n                    for(let i1 = 0; i1<res.data.data[i].length; i1++){\r\n                        let data3 = res.data.data[i][i1]\r\n                        if(data3.length>200)\r\n                            data3 = data3.substring(0, 200)+'...'\r\n                        data2.push(data3)\r\n                    }\r\n                    data1.push(data2)\r\n                }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n            //store.dispatch(showLoad(false))\r\n        } catch(error) {\r\n            console.error(error)\r\n            //store.dispatch(showLoad(false))\r\n        }\r\n    };\r\n}\r\n\r\nexport function setSelected(payload) {\r\n    return {\r\n        type: SET_SELECTED,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport function getIds(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            \r\n            const data = new FormData();\r\n            data.append('name', payload);\r\n            const res = await axios.post(\r\n                '/data/getIds',\r\n                data,\r\n                {headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }});\r\n            dispatch({\r\n                type: GET_IDS,\r\n                payload: res.data\r\n            })\r\n            //store.dispatch(showLoad(false))\r\n        } catch(error) {\r\n            console.error(error)\r\n            //store.dispatch(showLoad(false))\r\n        }\r\n    };\r\n}\r\n\r\nexport function getData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            \r\n            const data = new FormData();\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            const res = await axios.post(\r\n                '/data/get',\r\n                data,\r\n                {headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name!='Произведение')\r\n                for(let i = 0; i<res.data.data.length; i++){\r\n                    let data2=[]\r\n                    for(let i1 = 0; i1<res.data.data[i].length; i1++){\r\n                        let data3 = res.data.data[i][i1]\r\n                        if(data3.length>200)\r\n                            data3 = data3.substring(0, 200)+'...'\r\n                        data2.push(data3)\r\n                    }\r\n                    data1.push(data2)\r\n                }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n            //store.dispatch(showLoad(false))\r\n        } catch(error) {\r\n            console.error(error)\r\n            //store.dispatch(showLoad(false))\r\n        }\r\n    };\r\n}\r\n\r\nexport const getDataSimple = async (payload) => {\r\n    try {\r\n        \r\n        const data = new FormData();\r\n        data.append('name', payload.name);\r\n        if(payload.data!==undefined)\r\n            data.append('data', JSON.stringify(payload.data));\r\n        const res = await axios.post(\r\n            '/data/get',\r\n            data,\r\n            {headers: {\r\n                'accept': 'application/json',\r\n                'Accept-Language': 'en-US,en;q=0.8',\r\n                'X-Requested-With': 'XMLHttpRequest',\r\n                'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n            }});\r\n        //store.dispatch(showLoad(false))\r\n        return res.data\r\n    } catch(error) {\r\n        console.error(error)\r\n        //store.dispatch(showLoad(false))\r\n    }\r\n}\r\n\r\nexport const addDataSimple = async (payload) => {\r\n    try {\r\n        \r\n        const data = new FormData();\r\n        data.append('name', payload.name);\r\n        data.append('new', JSON.stringify(payload.data));\r\n        const res = await axios.post(\r\n            '/data/add',\r\n            data,\r\n            {headers: {\r\n                'accept': 'application/json',\r\n                'Accept-Language': 'en-US,en;q=0.8',\r\n                'X-Requested-With': 'XMLHttpRequest',\r\n                'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n            }});\r\n        //store.dispatch(showLoad(false))\r\n        return res.data\r\n    } catch(error) {\r\n        //store.dispatch(showLoad(false))\r\n        console.error(error)\r\n    }\r\n}\r\n\r\nexport function deleteData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            \r\n            const data = new FormData();\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            data.append('deleted', payload.deleted);\r\n            if(payload.oldFile != undefined && payload.oldFile.length > 0){\r\n                data.append('oldFile', payload.oldFile);\r\n            }\r\n            const res = await axios.post(\r\n                '/data/delete',\r\n                data,\r\n                {headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name!=='Произведение')\r\n                for(let i = 0; i<res.data.data.length; i++){\r\n                    let data2=[]\r\n                    for(let i1 = 0; i1<res.data.data[i].length; i1++){\r\n                        let data3 = res.data.data[i][i1]\r\n                        if(data3.length>200)\r\n                            data3 = data3.substring(0, 200)+'...'\r\n                        data2.push(data3)\r\n                    }\r\n                    data1.push(data2)\r\n                }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n            //store.dispatch(showLoad(false))\r\n        } catch(error) {\r\n            console.error(error)\r\n            //store.dispatch(showLoad(false))\r\n        }\r\n    };\r\n}"],"sourceRoot":""}