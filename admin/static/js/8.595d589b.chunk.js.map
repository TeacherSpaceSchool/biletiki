{"version":3,"sources":["pages/CashboxCinema.js"],"names":["width","mainWindow","current","offsetWidth","withStyles","theme","button","margin","spacing","unit","textFieldSmall","marginLeft","marginRight","textField","urls","maxHeight","overflow","image","maxWidth","message","marginTop","marginBottom","connect","state","table","user","dispatch","tableActions","bindActionCreators","props","_props$tableActions","setSelected","addData","_props$table","setData","selected","classes","data","status","useEffect","Object","C_projects_biletiki_biletiki_admin_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","C_projects_biletiki_biletiki_admin_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","wrap","_context","prev","next","includes","role","history","push","t0","setUsers","getDataSimple","name","t1","sent","t2","setMovies","t3","stop","this","_useState","useState","_useState2","C_projects_biletiki_biletiki_admin_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","movies","_useState3","_useState4","movie","setMovie","_useState5","_useState6","setUser","_useState7","_useState8","halls","setHalls","_useState9","_useState10","hall","setHall","handleHall","event","target","value","setDates","handleDate","_useState11","_useState12","dates","_useState13","_useState14","date","setDate","_useState15","undefined","_useState16","seance","setSeance","_useState17","_useState18","users","_useState19","_useState20","nameMovie","setNameMovie","_useState21","_useState22","nameCinema","setNameCinema","_useState23","_useState24","items","setItems","_callee2","_context2","_callee3","_context3","realDate","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_8___default","select","SelectProps","MenuProps","className","menu","label","type","onChange","i","length","_id","map","option","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_9___default","key","getHalls","Fragment","_component_CinemaHall_Render_Render__WEBPACK_IMPORTED_MODULE_14__","seats","cashbox","index","price","setSeats","_seance","addItem","item","_items","replace","find","element","position","JSON","stringify","splice","priceSelect","react_router_dom__WEBPACK_IMPORTED_MODULE_11__","to","onClick","i1","search","sort","page","id","cinema","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_10___default","variant","color"],"mappings":"2QAeMA,EAAQC,IAAWC,QAAQC,YAAY,IAAK,IAAK,IAmTxCC,+BAjTA,SAAAC,GAAK,MAAK,CACrBC,OAAQ,CACJC,OAAQF,EAAMG,QAAQC,MAE1BC,eAAgB,CACZC,WAAYN,EAAMG,QAAQC,KAC1BG,YAAaP,EAAMG,QAAQC,KAC3BT,MAAOA,GAEXa,UAAW,CACPF,WAAYN,EAAMG,QAAQC,KAC1BG,YAAaP,EAAMG,QAAQC,KAC3BT,MAAOA,GAEXc,KAAM,CACFP,OAAQF,EAAMG,QAAQC,KACtBT,MAAOA,EACPe,UAAW,IACXC,SAAU,QAEdC,MAAO,CACHN,WAAYN,EAAMG,QAAQC,KAC1BG,YAAaP,EAAMG,QAAQC,KAC3BS,SAAU,IACVH,UAAW,KAEfI,QAAS,CACLnB,MAAOA,EACPoB,UAAWf,EAAMG,QAAQC,KACzBY,aAAchB,EAAMG,QAAQC,KAC5BE,WAAY,gBAAgBX,EAAM,SAClCY,YAAa,gBAAgBZ,EAAM,YAkR5BI,CAAmBkB,YAjBlC,SAA0BC,GACtB,MAAO,CACHC,MAAOD,EAAMC,MACbC,KAAMF,EAAME,OAIpB,SAA4BC,GACxB,MAAO,CACHC,aAAcC,YAAmBD,EAAcD,KAQrBJ,CA7Q9B,SAACO,GAAS,IAAAC,EACoCD,EAAMF,aAAxCI,EADFD,EACEC,YAAaC,EADfF,EACeE,QADfC,GAAAH,EACwBI,QACHL,EAAML,OAAzBW,EAFFF,EAEEE,SACAC,GAHFH,EAEYI,KACER,EAAZO,SACAE,EAAWT,EAAMJ,KAAjBa,OAERC,oBAASC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAC,SAAAC,IAAA,OAAAH,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,aACgB,WAAhBX,EAAOA,QAAmB,CAAC,QAAS,UAAW,UAAW,UAAUY,SAASZ,EAAOa,OACtFtB,EAAMuB,QAAQC,KAAK,KAFjBN,EAAAO,GAIAC,GAJAR,EAAAE,KAAA,EAIeO,wBAAc,CAACC,KAAM,iEAJpC,cAAAV,EAAAW,GAAAX,EAAAY,KAAAZ,EAAAE,KAAA,KAAAF,EAAAO,IAAAP,EAAAW,IAAA,cAAAX,EAAAa,GAKAC,EALAd,EAAAE,KAAA,GAKgBO,wBAAc,CAACC,KAAM,+CALrC,eAAAV,EAAAe,GAAAf,EAAAY,KAAAZ,EAAAE,KAAA,MAAAF,EAAAa,IAAAb,EAAAe,IAAA,yBAAAf,EAAAgB,SAAAlB,EAAAmB,SAMR,IAZI,IAAAC,EAaoBC,mBAAS,IAb7BC,EAAA3B,OAAA4B,EAAA,EAAA5B,CAAAyB,EAAA,GAaDI,EAbCF,EAAA,GAaON,EAbPM,EAAA,GAAAG,EAckBJ,mBAAS,IAd3BK,EAAA/B,OAAA4B,EAAA,EAAA5B,CAAA8B,EAAA,GAcDE,EAdCD,EAAA,GAcME,EAdNF,EAAA,GAAAG,EA2BgBR,mBAAS,IA3BzBS,EAAAnC,OAAA4B,EAAA,EAAA5B,CAAAkC,EAAA,GA2BDjD,EA3BCkD,EAAA,GA2BKC,EA3BLD,EAAA,GAAAE,EAuCkBX,mBAAS,IAvC3BY,EAAAtC,OAAA4B,EAAA,EAAA5B,CAAAqC,EAAA,GAuCDE,EAvCCD,EAAA,GAuCME,EAvCNF,EAAA,GAAAG,EAwCgBf,mBAAS,IAxCzBgB,EAAA1C,OAAA4B,EAAA,EAAA5B,CAAAyC,EAAA,GAwCDE,EAxCCD,EAAA,GAwCKE,EAxCLF,EAAA,GAyCFG,EAAa,SAACC,GACdF,EAAQE,EAAMC,OAAOC,OACG,KAArBF,EAAMC,OAAOC,QACZC,EAAS,IACTC,EAAW,CAACH,OAAQ,CAACC,MAAO,QA7C9BG,EAgDkBzB,mBAAS,IAhD3B0B,EAAApD,OAAA4B,EAAA,EAAA5B,CAAAmD,EAAA,GAgDDE,EAhDCD,EAAA,GAgDMH,EAhDNG,EAAA,GAAAE,EAiDgB5B,mBAAS,IAjDzB6B,EAAAvD,OAAA4B,EAAA,EAAA5B,CAAAsD,EAAA,GAiDDE,EAjDCD,EAAA,GAiDKE,EAjDLF,EAAA,GAkDFL,EAAa,SAACJ,GACdW,EAAQX,EAAMC,OAAOC,QAnDnBU,EAqDoBhC,wBAASiC,GArD7BC,EAAA5D,OAAA4B,EAAA,EAAA5B,CAAA0D,EAAA,GAqDDG,EArDCD,EAAA,GAqDOE,EArDPF,EAAA,GAAAG,GAsDkBrC,mBAAS,IAtD3BsC,GAAAhE,OAAA4B,EAAA,EAAA5B,CAAA+D,GAAA,GAsDDE,GAtDCD,GAAA,GAsDMjD,GAtDNiD,GAAA,GAAAE,GAuD0BxC,mBAAS,IAvDnCyC,GAAAnE,OAAA4B,EAAA,EAAA5B,CAAAkE,GAAA,GAuDDE,GAvDCD,GAAA,GAuDUE,GAvDVF,GAAA,GAAAG,GAwD4B5C,mBAAS,IAxDrC6C,GAAAvE,OAAA4B,EAAA,EAAA5B,CAAAsE,GAAA,GAwDDE,GAxDCD,GAAA,GAwDWE,GAxDXF,GAAA,GAAAG,GAyDkBhD,mBAAS,IAzD3BiD,GAAA3E,OAAA4B,EAAA,EAAA5B,CAAA0E,GAAA,GAyDDE,GAzDCD,GAAA,GAyDME,GAzDNF,GAAA,GA0FN,OAbA5E,oBAASC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAC,SAAA0E,IAAA,OAAA5E,EAAAC,EAAAG,KAAA,SAAAyE,GAAA,cAAAA,EAAAvE,KAAAuE,EAAAtE,MAAA,cAAAsE,EAAAjE,GACNmC,EADM8B,EAAAtE,KAAA,EACSO,wBAAc,CAACC,KAAM,yDAAapB,KAAM,CAACZ,KAAMuF,GAAYxC,MAAOA,KAD3E,OAAA+C,EAAA7D,GAAA6D,EAAA5D,MAAA,EAAA4D,EAAAjE,IAAAiE,EAAA7D,IAENuC,EAAQ,IACRoB,GAAS,IAHH,wBAAAE,EAAAxD,SAAAuD,EAAAtD,SAIR,CAACgD,KACHzE,oBAASC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAC,SAAA4E,IAAA,OAAA9E,EAAAC,EAAAG,KAAA,SAAA2E,GAAA,cAAAA,EAAAzE,KAAAyE,EAAAxE,MAAA,UACI,KAAP+C,EADG,CAAAyB,EAAAxE,KAAA,eAAAwE,EAAAnE,GAEFgD,EAFEmB,EAAAxE,KAAA,EAEcO,wBAAc,CAACC,KAAM,qEAAepB,KAAM,CAACqF,SAAU1B,EAAMvE,KAAMuF,GAAW,IAAI7B,EAAMX,MAAOA,KAF3G,OAAAiD,EAAA/D,GAAA+D,EAAA9D,MAAA,EAAA8D,EAAAnE,IAAAmE,EAAA/D,IAAA+D,EAAAxE,KAAA,gBAIFqD,OAAUH,GACVkB,GAAS,IALP,yBAAAI,EAAA1D,SAAAyD,EAAAxD,SAOR,CAACmB,IAECwC,EAAAhF,EAAAiF,cAAA,WACID,EAAAhF,EAAAiF,cAACC,EAAAlF,EAAD,CACImF,QAAM,EACNC,YAAa,CACTC,UAAW,CACPC,UAAW7F,EAAQ8F,OAG3BC,MAAM,iCACNC,KAAK,QACLH,UAAW7F,EAAQvB,UACnBN,OAAO,SACPiF,MAAOhB,EACP6D,SAzFM,SAAC/C,GACfb,EAASa,EAAMC,OAAOC,OAEtB,IADA,IAAI/B,EAAO,GACH6E,EAAE,EAAGA,EAAEjE,EAAOkE,OAAQD,IACtBjE,EAAOiE,GAAGE,MAAMlD,EAAMC,OAAOC,QAC7B/B,EAAOY,EAAOiE,GAAG7E,MAEzBoD,GAAapD,GACbuB,EAAS,IACTK,EAAW,CAACE,OAAQ,CAACC,MAAO,MAC5BZ,EAAQ,WAiFWuB,GAAV9B,EACGA,EAAOoE,IAAI,SAAAC,GAAM,OACbf,EAAAhF,EAAAiF,cAACe,EAAAhG,EAAD,CAAUiG,IAAKF,EAAOF,IAAKhD,MAAOkD,EAAOF,KACpCE,EAAOjF,QAIhB,MAGRkE,EAAAhF,EAAAiF,cAAA,WACAD,EAAAhF,EAAAiF,cAACC,EAAAlF,EAAD,CACImF,QAAM,EACNC,YAAa,CACTC,UAAW,CACPC,UAAW7F,EAAQ8F,OAG3BC,MAAM,yDACNC,KAAK,QACLH,UAAW7F,EAAQvB,UACnBN,OAAO,SACPiF,MAAO/D,EACP4G,SArGK,SAAC/C,GACdV,EAAQU,EAAMC,OAAOC,OAErB,IADA,IAAI/B,EAAO,GACH6E,EAAE,EAAGA,EAAE7B,GAAM8B,OAAQD,IACrB7B,GAAM6B,GAAGE,MAAMlD,EAAMC,OAAOC,QAC5B/B,EAAOgD,GAAM6B,GAAG7E,MAExBwD,GAAcxD,GACduB,EAAS6D,YAASpF,IAClB4B,EAAW,CAACE,OAAQ,CAACC,MAAO,aA8FVW,GAATM,GACGA,GAAMgC,IAAI,SAAAC,GAAM,OACZf,EAAAhF,EAAAiF,cAACe,EAAAhG,EAAD,CAAUiG,IAAKF,EAAOF,IAAKhD,MAAOkD,EAAOF,KACpCE,EAAOjF,QAIhB,MAGRkE,EAAAhF,EAAAiF,cAAA,WACAD,EAAAhF,EAAAiF,cAACC,EAAAlF,EAAD,CACImF,QAAM,EACNC,YAAa,CACTC,UAAW,CACPC,UAAW7F,EAAQ8F,OAG3BC,MAAM,2BACNC,KAAK,QACLH,UAAW7F,EAAQvB,UACnBN,OAAO,SACPiF,MAAOQ,EACPqC,SAAU3C,QAEAS,GAATN,EACGA,EAAM4C,IAAI,SAAAC,GAAM,OACZf,EAAAhF,EAAAiF,cAACe,EAAAhG,EAAD,CAAUiG,IAAKF,EAAQlD,MAAOkD,GACzBA,KAIT,MAGRf,EAAAhF,EAAAiF,cAAA,WACAD,EAAAhF,EAAAiF,cAACC,EAAAlF,EAAD,CACImF,QAAM,EACNC,YAAa,CACTC,UAAW,CACPC,UAAW7F,EAAQ8F,OAG3BC,MAAM,qBACNC,KAAK,QACLH,UAAW7F,EAAQvB,UACnBN,OAAO,SACPiF,MAAOL,EACPkD,SAAUhD,QAEAc,GAATpB,EACGA,EAAM0D,IAAI,SAAAC,GAAM,OACZf,EAAAhF,EAAAiF,cAACe,EAAAhG,EAAD,CAAUiG,IAAKF,EAAQlD,MAAOkD,GACzBA,KAIT,MAGRf,EAAAhF,EAAAiF,cAAA,WACAD,EAAAhF,EAAAiF,cAAA,OAAKK,UAAW7F,EAAQjB,cACbgF,GAAVE,EACGsB,EAAAhF,EAAAiF,cAAAD,EAAAhF,EAAAmG,SAAA,KACAnB,EAAAhF,EAAAiF,cAAA,+BACAD,EAAAhF,EAAAiF,cAAA,WACAD,EAAAhF,EAAAiF,cAAA,OAAKK,UAAW7F,EAAQjB,SACnBkF,EAAO+B,MAEZT,EAAAhF,EAAAiF,cAAA,WACAD,EAAAhF,EAAAiF,cAAA,WACAD,EAAAhF,EAAAiF,cAACmB,EAAA,EAAD,CAAQC,MAAO3C,EAAO2C,MAAOC,SAAS,EAAMC,MAAO/G,EAAUgH,MAAO9C,EAAO8C,MAAOC,SAlI/E,SAACJ,GACZ,IAAIK,EAAUhD,EACdgD,EAAQL,MAAQA,EAChB1C,EAAU+C,IA+HoGC,QAhJpG,SAACC,GACX,IAAIC,EAASpC,GACT8B,GAAS,EACbK,EAAKvD,KAAKA,EAAKyD,QAAQ,IAAK,KAAKA,QAAQ,IAAK,KAAKA,QAAQ,IAAK,KAAKA,QAAQ,WAAY,IACzFD,EAAOE,KAAK,SAACC,EAASC,GACfC,KAAKC,UAAUH,KAAWE,KAAKC,UAAUP,KACxCL,EAAQU,MAEH,IAATV,EACAM,EAAOnG,KAAKkG,GAEZC,EAAOO,OAAOb,EAAO,GACzB7B,GAASmC,MAqID7B,EAAAhF,EAAAiF,cAAA,YAGA,MAGJD,EAAAhF,EAAAiF,cAAA,WACAD,EAAAhF,EAAAiF,cAAA,WACCR,GAAMmB,OAAO,EACVnB,GAAMqB,IAAI,SAAAC,GACN,OACIf,EAAAhF,EAAAiF,cAAAD,EAAAhF,EAAAmG,SAAA,2CACaJ,EAAOjF,KADpB,wCACiDiF,EAAOsB,YADxD,8DACqGtB,EAAO1C,KAC5G2B,EAAAhF,EAAAiF,cAAA,cAEL,KACPD,EAAAhF,EAAAiF,cAAA,WACAD,EAAAhF,EAAAiF,cAAA,WACID,EAAAhF,EAAAiF,cAACqC,EAAA,EAAD,CAAMhC,UAAU,OAAOiC,GAAI,GAAIC,QAAS,WACpC,GAAG/C,GAAMmB,OAAO,EAAG,CAEf,IADA,IAAIc,EAAUhD,EACLiC,EAAI,EAAGA,EAAIe,EAAQL,MAAMT,OAAQD,IACtC,IAAK,IAAI8B,EAAK,EAAGA,EAAKf,EAAQL,MAAMV,GAAGC,OAAQ6B,IACV,SAA9Bf,EAAQL,MAAMV,GAAG8B,GAAI9H,SACpB+G,EAAQL,MAAMV,GAAG8B,GAAI9H,OAAO,QAGxCN,EAAQ,CAACqI,OAAQ,GAAIC,KAAM,GAAIC,KAAM,EAAG9G,KAAM,gEAAepB,KAAM,CAACZ,KAAMa,EAAOkI,GAAIhG,MAAOoC,GACxF6D,OAAQzD,GACRX,OAAQA,EACRpF,MAAO,GACPkE,KAAMA,EAAM7C,OAAQ,uCAAU0G,MAAO5B,MACzCrF,GAAa,MAGjB4F,EAAAhF,EAAAiF,cAAC8C,EAAA/H,EAAD,CAAQgI,QAAQ,YAAYC,MAAM,UAAU3C,UAAW7F,EAAQ9B,QAA/D,yCAIJqH,EAAAhF,EAAAiF,cAACqC,EAAA,EAAD,CAAMhC,UAAU,OAAOiC,GAAI,GAAIC,QAAS,WAAKpI,GAAa,KACtD4F,EAAAhF,EAAAiF,cAAC8C,EAAA/H,EAAD,CAAQgI,QAAQ,YAAYC,MAAM,YAAY3C,UAAW7F,EAAQ9B,QAAjE","file":"static/js/8.595d589b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { getDataSimple } from '../redux/actions/table'\nimport * as tableActions from '../redux/actions/table'\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom'\nimport { mainWindow } from '../App'\nimport { getHalls } from '../component/CinemaHall/index'\nimport Render from '../component/CinemaHall/Render/Render'\n\nconst width = mainWindow.current.offsetWidth>800? 500: 240;\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit,\n    },\n    textFieldSmall: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: width,\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: width\n    },\n    urls: {\n        margin: theme.spacing.unit,\n        width: width,\n        maxHeight: 100,\n        overflow: 'auto'\n    },\n    image: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        maxWidth: 500,\n        maxHeight: 500\n    },\n    message: {\n        width: width,\n        marginTop: theme.spacing.unit,\n        marginBottom: theme.spacing.unit,\n        marginLeft: 'calc((100% - '+width+'px)/2)',\n        marginRight: 'calc((100% - '+width+'px)/2)'\n    },\n});\n\nconst Cashbox = (\n    (props) =>{\n        const { setSelected, addData, setData } = props.tableActions;\n        const { selected, data } = props.table;\n        const { classes } = props;\n        const { status } = props.user;\n\n        useEffect(async()=>{\n            if (!(status.status==='active'&&['admin', 'manager', 'cashier', 'cinema'].includes(status.role))) {\n                props.history.push('/')\n            }\n            await setUsers(await getDataSimple({name: 'Кинотеатры'}));\n            await setMovies(await getDataSimple({name: 'ВсеКино'}));\n        },[])\n        let [movies, setMovies] = useState([]);\n        let [movie, setMovie] = useState('');\n        let handleMovie = (event) => {\n            setMovie(event.target.value)\n            let name = ''\n            for(let i=0; i<movies.length; i++){\n                if (movies[i]._id===event.target.value)\n                    name = movies[i].name\n            }\n            setNameMovie(name)\n            setHalls([])\n            handleHall({target: {value: ''}})\n            setUser('')\n        };\n        let [user, setUser] = useState('');\n        let handleUser = (event) => {\n            setUser(event.target.value)\n            let name = ''\n            for(let i=0; i<users.length; i++){\n                if (users[i]._id===event.target.value)\n                    name = users[i].name\n            }\n            setNameCinema(name)\n            setHalls(getHalls(name))\n            handleHall({target: {value: ''}})\n        };\n        let [halls, setHalls] = useState([]);\n        let [hall, setHall] = useState('');\n        let handleHall = (event) => {\n            setHall(event.target.value)\n            if(event.target.value==='') {\n                setDates([])\n                handleDate({target: {value: ''}})\n            }\n        };\n        let [dates, setDates] = useState([]);\n        let [date, setDate] = useState('');\n        let handleDate = (event) => {\n            setDate(event.target.value)\n        };\n        let [seance, setSeance] = useState(undefined);\n        let [users, setUsers] = useState([]);\n        let [nameMovie, setNameMovie] = useState('');\n        let [nameCinema, setNameCinema] = useState('');\n        let [items, setItems] = useState([]);\n        let addItem = (item) => {\n            let _items = items;\n            let index = -1;\n            item.date=date.replace('-', '.').replace('-', '.').replace('T', ' ').replace(':00.000Z', '')\n            _items.find((element, position)=>{\n                if(JSON.stringify(element)===JSON.stringify(item))\n                    index = position\n            });\n            if (index===-1)\n                _items.push(item);\n            else\n                _items.splice(index, 1);\n            setItems(_items)\n        }\n        let setSeats = (seats) => {\n            let _seance = seance\n            _seance.seats = seats\n            setSeance(_seance)\n        }\n        useEffect(async()=>{\n            setDates(await getDataSimple({name: 'СеансДаты', data: {user: nameCinema, movie: movie}}));\n            setDate('')\n            setItems([])\n        },[nameCinema])\n        useEffect(async()=>{\n            if(date!==''){\n                setSeance(await getDataSimple({name: 'СеансПоДате', data: {realDate: date, user: nameCinema+'|'+hall, movie: movie}}));\n            } else {\n                setSeance(undefined)\n                setItems([])\n            }\n        },[hall])\n        return (\n            <div>\n                <TextField\n                    select\n                    SelectProps={{\n                        MenuProps: {\n                            className: classes.menu,\n                        },\n                    }}\n                    label='фильм'\n                    type='login'\n                    className={classes.textField}\n                    margin='normal'\n                    value={movie}\n                    onChange={handleMovie}\n                >\n                    {movies != undefined?\n                        movies.map(option => (\n                            <MenuItem key={option._id} value={option._id}>\n                                {option.name}\n                            </MenuItem>\n                        ))\n                        :\n                        null\n                    }\n                </TextField>\n                <br/>\n                <TextField\n                    select\n                    SelectProps={{\n                        MenuProps: {\n                            className: classes.menu,\n                        },\n                    }}\n                    label='кинотеатр'\n                    type='login'\n                    className={classes.textField}\n                    margin='normal'\n                    value={user}\n                    onChange={handleUser}\n                >\n                    {users != undefined?\n                        users.map(option => (\n                            <MenuItem key={option._id} value={option._id}>\n                                {option.name}\n                            </MenuItem>\n                        ))\n                        :\n                        null\n                    }\n                </TextField>\n                <br/>\n                <TextField\n                    select\n                    SelectProps={{\n                        MenuProps: {\n                            className: classes.menu,\n                        },\n                    }}\n                    label='дата'\n                    type='login'\n                    className={classes.textField}\n                    margin='normal'\n                    value={date}\n                    onChange={handleDate}\n                >\n                    {dates != undefined?\n                        dates.map(option => (\n                            <MenuItem key={option} value={option}>\n                                {option}\n                            </MenuItem>\n                        ))\n                        :\n                        null\n                    }\n                </TextField>\n                <br/>\n                <TextField\n                    select\n                    SelectProps={{\n                        MenuProps: {\n                            className: classes.menu,\n                        },\n                    }}\n                    label='зал'\n                    type='login'\n                    className={classes.textField}\n                    margin='normal'\n                    value={hall}\n                    onChange={handleHall}\n                >\n                    {halls != undefined?\n                        halls.map(option => (\n                            <MenuItem key={option} value={option}>\n                                {option}\n                            </MenuItem>\n                        ))\n                        :\n                        null\n                    }\n                </TextField>\n                <br/>\n                <div className={classes.message}>\n                {seance != undefined?\n                    <>\n                    <b>Тип</b>\n                    <br/>\n                    <div className={classes.message}>\n                        {seance.type}\n                    </div>\n                    <br/>\n                    <br/>\n                    <Render seats={seance.seats} cashbox={true} index={selected} price={seance.price} setSeats={setSeats} addItem={addItem}/>\n                    <br/>\n                    </>\n                    :\n                    null\n                }\n                </div>\n                <br/>\n                <br/>\n                {items.length>0?\n                    items.map(option => {\n                        return(\n                            <>\n                            Место:&nbsp;{option.name}&nbsp;&nbsp;Цена:&nbsp;{option.priceSelect}&nbsp;сом&nbsp;&nbsp;Дата:&nbsp;{option.date}\n                            <br/>\n                            </>)\n                    }):null}\n                <br/>\n                <div>\n                    <Link className='link' to={''} onClick={()=>{\n                        if(items.length>0) {\n                            let _seance = seance;\n                            for (let i = 0; i < _seance.seats.length; i++) {\n                                for (let i1 = 0; i1 < _seance.seats[i].length; i1++) {\n                                    if(_seance.seats[i][i1].status==='hold')\n                                        _seance.seats[i][i1].status='sold'\n                                    }\n                                }\n                            addData({search: '', sort: '', page: 0, name: 'Билеты кино', data: {user: status.id, movie: nameMovie,\n                                cinema: nameCinema,\n                                seance: seance,\n                                image: '',\n                                hall: hall, status: 'продан', seats: items}});\n                            setSelected(-1)\n                        }\n                    }}>\n                        <Button variant='contained' color='primary' className={classes.button}>\n                            Купить\n                        </Button>\n                    </Link>\n                    <Link className='link' to={''} onClick={()=>{setSelected(-1);}}>\n                        <Button variant='contained' color='secondary' className={classes.button}>\n                            Отмена\n                        </Button>\n                    </Link>\n                </div>\n            </div>\n        );\n  })\n\nfunction mapStateToProps (state) {\n    return {\n        table: state.table,\n        user: state.user,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        tableActions: bindActionCreators(tableActions, dispatch),\n    }\n}\n\nCashbox.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Cashbox));\n"],"sourceRoot":""}