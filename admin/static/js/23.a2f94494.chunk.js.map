{"version":3,"sources":["redux/actions/table.js","component/Add/About.js","component/Add/Email.js","component/Add/Ticket.js","component/Add/Contact.js","component/Add/Ads.js","component/Add/Faq.js","component/Add/Logo.js","component/Add/Personal.js","component/Add/Phone.js","component/Add/Social.js","component/Add/Vacancy.js","component/Add/Where.js","component/Add/User.js","component/Add/Billboard.js","component/Add/Cinema.js","component/Add/Mailing.js","component/Add/Hall.js","component/Add/TicketCinema.js","component/Add/Balance.js","component/Add/Cashbox.js","component/Add/Payment.js","redux/actions/mini_dialog.js","logo.png","component/Table.js"],"names":["setData","payload","_ref","Object","C_projects_biletiki_biletiki_admin_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_projects_biletiki_biletiki_admin_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","dispatch","data","_headers","i","res","row","_i","data1","_i2","data2","i1","data3","wrap","_context","prev","next","type","SHOW_LOAD","FormData","append","id","search","sort","JSON","stringify","page","name","undefined","oldFile","oldFileWhatermark","file","length","accept","Accept-Language","Content-Type","concat","_boundary","X-Requested-With","Authorization","localStorage","userBiletikiAdmin","axios","post","headers","sent","push","options","filter","substring","count","GET_DATA","t0","console","error","stop","this","_x","apply","arguments","addData","_ref2","_callee2","_i3","_i4","_context2","_x2","setSelected","SET_SELECTED","getIds","_ref3","_callee3","_context3","GET_IDS","_x3","getData","_ref4","_callee4","_i5","_context4","_x4","getDataSimple","_ref5","_callee5","_context5","abrupt","_x5","addDataSimple","_ref6","_callee6","_context6","_x6","deleteData","_ref7","_callee7","_i6","_context7","deleted","_x7","showLoad","show","width","mainWindow","current","offsetWidth","Sign","React","memo","props","showMiniDialog","mini_dialogActions","_props$tableActions","tableActions","_props$table","table","selected","_useState","useState","_useState2","slicedToArray","descriptionRu","setDescriptionRu","_useState3","_useState4","descriptionKg","setDescriptionKg","classes","react_default","createElement","className","urls","TextField_default","multiline","rowsMax","label","textField","margin","value","onChange","event","target","Button_default","variant","color","onClick","button","withStyles","theme","spacing","unit","marginLeft","marginRight","maxHeight","overflow","error_message","marginTop","marginBottom","fontWeight","connect","state","mini_dialog","bindActionCreators","email","setEmail","ticket","hash","user","where","status","setStatus","statuses","parse","text_message","select","SelectProps","MenuProps","menu","map","option","MenuItem_default","key","wordWrap","coords","setСoords","cashbox","setСashbox","_useState5","_useState6","address","setAddress","_useState7","_useState8","booking","setBooking","_useState9","_useState10","connection","setConnection","_useState11","_useState12","return1","setReturn1","_useState13","_useState14","general","setGeneral","_useState15","_useState16","cooperation","setCooperation","dateStart1","types","setType","setName","link","setLink","replace","dateEnd1","dateStart","setDateStart","dateEnd","setDateEnd","setFile","fileNames","setFileNames","htmlFor","component","style","display","files","questionRu","setQuestionRu","answerRu","setAnswerRu","questionKg","setQuestionKg","answerKg","setAnswerKg","names","contact","setContact","whoRu","setWhoRu","whoKg","setWhoKg","phone","setPhone","url","nameRu","setNameRu","requirementsRu","setRequirementsRu","dutiesRu","setDutiesRu","conditionsRu","setConditionsRu","nameKg","setNameKg","requirementsKg","setRequirementsKg","dutiesKg","setDutiesKg","conditionsKg","setConditionsKg","city","setCity","setCoords","surname","setSurame","phonenumber","setPhonenumber","roles","role","setRole","password","setPassword","Fragment","useEffect","asyncToGenerator","regenerator_default","setEvents","t1","events","split","setEvent","part1","part2","log","_id","genre","setGenre","duration","setDuration","ageCategory","setAgeCategory","premier","setPremier","producers","setPoducers","actors","setActors","_useState17","_useState18","description","setDescription","_useState19","_useState20","_useState21","_useState22","mailuser","setMailuser","mailpass","setMailpass","mailchimpInstance","setMailchimpInstance","listUniqueId","setListUniqueId","mailchimpApiKey","setMailchimpApiKey","setUsers","setUser","users","movie","cinema","hall","seats","priceSelect","date","balance","setBalance","wallet","geo","setGeo","service","sum","meta","sms","setMiniDialog","title","child","SET_MINI_DIALOG","showAddMiniDialog","store","getState","Mailing","TicketCinema","About","Ticket","Cinema","Email","Where","Vacancy","Ads","Contact","Faq","Logo","Personal","Phone","Social","User","Billboard","Hall","Balance","Cashbox","Payment","SHOW_MINI_DIALOG","module","exports","__webpack_require__","p","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","mui_datatables__WEBPACK_IMPORTED_MODULE_1__","mui_datatables__WEBPACK_IMPORTED_MODULE_1___default","react_redux__WEBPACK_IMPORTED_MODULE_2__","redux__WEBPACK_IMPORTED_MODULE_3__","_redux_actions_table__WEBPACK_IMPORTED_MODULE_4__","_redux_actions_mini_dialog__WEBPACK_IMPORTED_MODULE_5__","react_image_gallery__WEBPACK_IMPORTED_MODULE_6__","react_image_gallery__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_8__","_App__WEBPACK_IMPORTED_MODULE_9__","_logo_png__WEBPACK_IMPORTED_MODULE_10__","_logo_png__WEBPACK_IMPORTED_MODULE_10___default","message","fontSize","Table","_props$mini_dialogAct","authenticated","serverSide","filterType","print","rowsPerPage","rowsPerPageOptions","downloadOptions","filename","separator","onColumnSortChange","changedColumn","direction","onSearchChange","searchText","onChangePage","currentPage","onRowsDelete","rowsDeleted","deletedId","index","includes","onCellClick","colData","colMeta","toString","window","open","focus","images","original","thumbnail","items","showThumbnails","showFullscreenButton","showPlayButton","rowIndex","history","onTableChange","action","tableState","createMuiTheme","overrides","MUIDataTableBodyCell","root","textOverflow","maxWidth","MuiPaper","elevation4","boxShadow","columns","mainMessage","src","logo","backgroundImage","backgroundPosition","backgroundRepeat","height","justifyContent","alignItems"],"mappings":"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","file":"static/js/23.a2f94494.chunk.js","sourcesContent":["import {\r\n    GET_DATA,\r\n    GET_IDS,\r\n    SET_SELECTED,\r\n    SHOW_LOAD\r\n} from '../constants/table'\r\nimport axios from 'axios';\r\nimport FormData from 'form-data';\r\nimport {\r\n    store\r\n} from '../../index'\r\n\r\nexport function setData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n\r\n            dispatch({\r\n                type: SHOW_LOAD,\r\n                payload: true\r\n            })\r\n            const data = new FormData();\r\n            let _headers;\r\n            data.append('id', payload.id);\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            data.append('new', JSON.stringify(payload.data));\r\n            if(payload.oldFile != undefined){\r\n                data.append('oldFile', payload.oldFile);\r\n            }\r\n            if(payload.oldFileWhatermark != undefined){\r\n                data.append('oldFileWhatermark', payload.oldFileWhatermark);\r\n            }\r\n            if (payload.file != undefined) {\r\n                data.append('fileLength', payload.file.length);\r\n                for(let i=0; i<payload.file.length; i++){\r\n                    data.append('file'+i, payload.file[i]);\r\n                    data.append('fileName'+i, payload.file[i].name);\r\n                }\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization': 'Bearer ' + localStorage.userBiletikiAdmin,\r\n                }\r\n            } else {\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }\r\n            }\r\n            const res = await axios.post(\r\n                '/data/add',\r\n                data,\r\n                {headers: _headers});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name!='Произведение')\r\n                for(let i = 0; i<res.data.data.length; i++){\r\n                    let data2=[]\r\n                    for(let i1 = 0; i1<res.data.data[i].length; i1++){\r\n                        let data3 = res.data.data[i][i1]\r\n                        if(data3.length>200)\r\n                            data3 = data3.substring(0, 200)+'...'\r\n                        data2.push(data3)\r\n                    }\r\n                    data1.push(data2)\r\n                }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n            dispatch({\r\n                type: SHOW_LOAD,\r\n                payload: false\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n                    }\r\n    };\r\n}\r\n\r\nexport function addData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n\r\n            dispatch({\r\n                type: SHOW_LOAD,\r\n                payload: true\r\n            })\r\n            const data = new FormData();\r\n            let _headers;\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            data.append('new', JSON.stringify(payload.data));\r\n            if (payload.file != undefined) {\r\n                data.append('fileLength', payload.file.length);\r\n                for(let i=0; i<payload.file.length; i++){\r\n                    data.append('file'+i, payload.file[i]);\r\n                    data.append('fileName'+i, payload.file[i].name);\r\n                }\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization': 'Bearer ' + localStorage.userBiletikiAdmin\r\n                }\r\n            } else {\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }\r\n            }\r\n            const res = await axios.post(\r\n                '/data/add',\r\n                data,\r\n                {headers: _headers});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name!='Произведение')\r\n                for(let i = 0; i<res.data.data.length; i++){\r\n                    let data2=[]\r\n                    for(let i1 = 0; i1<res.data.data[i].length; i1++){\r\n                        let data3 = res.data.data[i][i1]\r\n                        if(data3.length>200)\r\n                            data3 = data3.substring(0, 200)+'...'\r\n                        data2.push(data3)\r\n                    }\r\n                    data1.push(data2)\r\n                }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n            dispatch({\r\n                type: SHOW_LOAD,\r\n                payload: false\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}\r\n\r\nexport function setSelected(payload) {\r\n    return {\r\n        type: SET_SELECTED,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport function getIds(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n\r\n            dispatch({\r\n                type: SHOW_LOAD,\r\n                payload: true\r\n            })\r\n            const data = new FormData();\r\n            data.append('name', payload);\r\n            const res = await axios.post(\r\n                '/data/getIds',\r\n                data,\r\n                {headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }});\r\n            dispatch({\r\n                type: GET_IDS,\r\n                payload: res.data\r\n            })\r\n\r\n            dispatch({\r\n                type: SHOW_LOAD,\r\n                payload: false\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}\r\n\r\nexport function getData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n\r\n            const data = new FormData();\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            const res = await axios.post(\r\n                '/data/get',\r\n                data,\r\n                {headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name!='Произведение')\r\n                for(let i = 0; i<res.data.data.length; i++){\r\n                    let data2=[]\r\n                    for(let i1 = 0; i1<res.data.data[i].length; i1++){\r\n                        let data3 = res.data.data[i][i1]\r\n                        if(data3.length>200)\r\n                            data3 = data3.substring(0, 200)+'...'\r\n                        data2.push(data3)\r\n                    }\r\n                    data1.push(data2)\r\n                }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}\r\n\r\nexport const getDataSimple = async (payload) => {\r\n    try {\r\n\r\n        const data = new FormData();\r\n        data.append('name', payload.name);\r\n        if(payload.data!==undefined)\r\n            data.append('data', JSON.stringify(payload.data));\r\n        const res = await axios.post(\r\n            '/data/get',\r\n            data,\r\n            {headers: {\r\n                'accept': 'application/json',\r\n                'Accept-Language': 'en-US,en;q=0.8',\r\n                'X-Requested-With': 'XMLHttpRequest',\r\n                'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n            }});\r\n\r\n        return res.data\r\n    } catch(error) {\r\n        console.error(error)\r\n    }\r\n}\r\n\r\nexport const addDataSimple = async (payload) => {\r\n    try {\r\n\r\n        const data = new FormData();\r\n        data.append('name', payload.name);\r\n        data.append('new', JSON.stringify(payload.data));\r\n        const res = await axios.post(\r\n            '/data/add',\r\n            data,\r\n            {headers: {\r\n                'accept': 'application/json',\r\n                'Accept-Language': 'en-US,en;q=0.8',\r\n                'X-Requested-With': 'XMLHttpRequest',\r\n                'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n            }});\r\n        return res.data\r\n    } catch(error) {\r\n        console.error(error)\r\n    }\r\n}\r\n\r\nexport function deleteData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n\r\n            dispatch({\r\n                type: SHOW_LOAD,\r\n                payload: true\r\n            })\r\n            const data = new FormData();\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            data.append('deleted', payload.deleted);\r\n            if(payload.oldFile != undefined && payload.oldFile.length > 0){\r\n                data.append('oldFile', payload.oldFile);\r\n            }\r\n            const res = await axios.post(\r\n                '/data/delete',\r\n                data,\r\n                {headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name!=='Произведение')\r\n                for(let i = 0; i<res.data.data.length; i++){\r\n                    let data2=[]\r\n                    for(let i1 = 0; i1<res.data.data[i].length; i1++){\r\n                        let data3 = res.data.data[i][i1]\r\n                        if(data3.length>200)\r\n                            data3 = data3.substring(0, 200)+'...'\r\n                        data2.push(data3)\r\n                    }\r\n                    data1.push(data2)\r\n                }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n\r\n            dispatch({\r\n                type: SHOW_LOAD,\r\n                payload: false\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}\r\n\r\nexport function showLoad(show) {\r\n    return {\r\n        type: SHOW_LOAD,\r\n        payload: show\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [descriptionRu, setDescriptionRu] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleDescriptionRu =  (event) => {\r\n            setDescriptionRu(event.target.value)\r\n        };\r\n        let [descriptionKg, setDescriptionKg] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleDescriptionKg =  (event) => {\r\n            setDescriptionKg(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    multiline\r\n                    rowsMax='4'\r\n                    label='описание'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={descriptionRu}\r\n                    onChange={handleDescriptionRu}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    multiline\r\n                    rowsMax='4'\r\n                    label='баяндоо'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={descriptionKg}\r\n                    onChange={handleDescriptionKg}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'О нас', data: {descriptionRu: descriptionRu, descriptionKg: descriptionKg}});\r\n                        else\r\n                            setData({id: data[selected][3], search: '', sort: '', page: 0, name: 'О нас', data: {descriptionRu: descriptionRu, descriptionKg: descriptionKg}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [email, setEmail] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleEmail =  (event) => {\r\n            setEmail(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='email'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={email}\r\n                    onChange={handleEmail}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Email', data: {email: email}});\r\n                        else\r\n                            setData({id: data[selected][2], search: search, sort: sort, page: page, name: 'Email', data: {email: email}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    text_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        overflow: 'hidden',\r\n        wordWrap: 'break-word'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let ticket = selected!==-1?data[selected][0]:'';\r\n        let hash = selected!==-1?data[selected][1]:'';\r\n        let user = selected!==-1?data[selected][2]:'';\r\n        let event = selected!==-1?data[selected][3]:'';\r\n        let where = selected!==-1?data[selected][4]:'';\r\n        let [status, setStatus] = useState(selected!==-1?data[selected][5]:'');\r\n        let statuses = ['продан', 'возвращен', 'использован', 'отмена']\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let seats = selected!==-1?JSON.parse(data[selected][6]):'';\r\n\r\n        const { classes } = props;\r\n        return (\r\n            <div className={classes.text_message}>\r\n                <b>Билет</b>\r\n                <br/>\r\n                {ticket}\r\n                <br/>\r\n                <br/>\r\n                <b>Hash</b>\r\n                <br/>\r\n                {hash}\r\n                <br/>\r\n                <br/>\r\n                <b>Пользователь</b>\r\n                <br/>\r\n                {user}\r\n                <br/>\r\n                <br/>\r\n                <b>Мероприятие</b>\r\n                <br/>\r\n                {event}\r\n                <br/>\r\n                <br/>\r\n                <b>Площадка</b>\r\n                <br/>\r\n                {where}\r\n                <br/>\r\n                <br/>\r\n                {/*\r\n                <b>Места</b>\r\n                <br/>\r\n                {seats.length>0?\r\n                    seats.map(option => {\r\n                        return(\r\n                            <>\r\n                            {'Место: ' + option[0].name+' Цена: '+option[0].price+' Дата: '+option[1]}\r\n                            <br/>\r\n                            </>)\r\n                    }):null}\r\n                <br/>*/}\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Билеты', data: {status: status}});\r\n                        else\r\n                            setData({id: data[selected][data[selected].length-1], search: search, sort: sort, page: page, name: 'Билеты', data: {status: status}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [coords, setСoords] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleCoords =  (event) => {\r\n            setСoords(event.target.value)\r\n        };\r\n        let [cashbox, setСashbox] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleCashbox =  (event) => {\r\n            setСashbox(event.target.value)\r\n        };\r\n        let [address, setAddress] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleAddress =  (event) => {\r\n            setAddress(event.target.value)\r\n        };\r\n        let [booking, setBooking] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleBooking =  (event) => {\r\n            setBooking(event.target.value)\r\n        };\r\n        let [connection, setConnection] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleConnection =  (event) => {\r\n            setConnection(event.target.value)\r\n        };\r\n        let [return1, setReturn1] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleReturn1 =  (event) => {\r\n            setReturn1(event.target.value)\r\n        };\r\n        let [general, setGeneral] = useState(selected!==-1?data[selected][6]:'');\r\n        let handleGeneral =  (event) => {\r\n            setGeneral(event.target.value)\r\n        };\r\n        let [cooperation, setCooperation] = useState(selected!==-1?data[selected][7]:'');\r\n        let handleCooperation =  (event) => {\r\n            setCooperation(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='координаты'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={coords}\r\n                    onChange={handleCoords}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='касса'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={cashbox}\r\n                    onChange={handleCashbox}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='адрес'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={address}\r\n                    onChange={handleAddress}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='бронирование'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={booking}\r\n                    onChange={handleBooking}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='связь'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={connection}\r\n                    onChange={handleConnection}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='возврат'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={return1}\r\n                    onChange={handleReturn1}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='главная'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={general}\r\n                    onChange={handleGeneral}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='сотрудничество'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={cooperation}\r\n                    onChange={handleCooperation}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Контакт', data: {coords: coords, cashbox: cashbox, address: address, booking: booking, connection: connection, return1: return1, general: general, cooperation: cooperation}});\r\n                        else\r\n                            setData({id: data[selected][9], search: search, sort: sort, page: page, name: 'Контакт', data: {coords: coords, cashbox: cashbox, address: address, booking: booking, connection: connection, return1: return1, general: general, cooperation: cooperation}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let types = ['top', 'down']\r\n        let [type, setType] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleType =  (event) => {\r\n            setType(event.target.value)\r\n        };\r\n        let [name, setName] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [link, setLink] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleLink =  (event) => {\r\n            setLink(event.target.value)\r\n        };\r\n        let dateStart1;\r\n        if(selected!==-1) {\r\n            dateStart1 = data[selected][3].replace('.', '-').replace('.', '-').replace(' ', 'T')+':00';\r\n        }\r\n        let [dateStart, setDateStart] = useState(selected!==-1?dateStart1:'2019-01-01T00:00');\r\n        let handleDateStart =  (event) => {\r\n            setDateStart(event.target.value)\r\n        };\r\n        let dateEnd1;\r\n        if(selected!==-1){\r\n            dateEnd1 = data[selected][4].replace('.', '-').replace('.', '-').replace(' ', 'T')+':00';\r\n        }\r\n        let [dateEnd, setDateEnd] = useState(selected!==-1?dateEnd1:'2019-01-01T00:00');\r\n        let handleDateEnd =  (event) => {\r\n            setDateEnd(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ссылка'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={link}\r\n                    onChange={handleLink}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='дата начала'\r\n                    type='datetime-local'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dateStart}\r\n                    onChange={handleDateStart}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='дата окончания'\r\n                    type='datetime-local'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dateEnd}\r\n                    onChange={handleDateEnd}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='где'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={type}\r\n                    onChange={handleType}\r\n                >\r\n                    {types != undefined?\r\n                        types.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Реклама', file: file, data: {type: type, name: name, link: link, dateStart: dateStart, dateEnd: dateEnd}});\r\n                        else\r\n                            setData({id: data[selected][7], search: search, sort: sort, page: page, name: 'Реклама', oldFile: data[selected][0], file: file, data: {type: type, name: name, link: link, dateStart: dateStart, dateEnd: dateEnd}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [questionRu, setQuestionRu] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleQuestionRu =  (event) => {\r\n            setQuestionRu(event.target.value)\r\n        };\r\n        let [answerRu, setAnswerRu] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleAnswerRu =  (event) => {\r\n            setAnswerRu(event.target.value)\r\n        };\r\n        let [questionKg, setQuestionKg] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleQuestionKg =  (event) => {\r\n            setQuestionKg(event.target.value)\r\n        };\r\n        let [answerKg, setAnswerKg] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleAnswerKg =  (event) => {\r\n            setAnswerKg(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='вопрос'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={questionRu}\r\n                    onChange={handleQuestionRu}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ответ'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={answerRu}\r\n                    onChange={handleAnswerRu}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='суроо'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={questionKg}\r\n                    onChange={handleQuestionKg}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='жооп'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={answerKg}\r\n                    onChange={handleAnswerKg}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'FAQ', data: { questionRu: questionRu, answerRu: answerRu, questionKg: questionKg, answerKg: answerKg}});\r\n                        else\r\n                            setData({id: data[selected][5], search: search, sort: sort, page: page, name: 'FAQ', data: { questionRu: questionRu, answerRu: answerRu, questionKg: questionKg, answerKg: answerKg}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        const names = ['vertical', 'square', 'horizontal', 'main', 'mainKG']\r\n        let [name, setName] = useState(selected!==-1?data[selected][1]:'main');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                >\r\n                    {names != undefined?\r\n                        names.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Логотип', file: file, data: {name: name}});\r\n                        else\r\n                            setData({id: data[selected][3], search: search, sort: sort, page: page, name: 'Логотип', oldFile: data[selected][0], file: file, data: {name: name}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [contact, setContact] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleContact =  (event) => {\r\n            setContact(event.target.value)\r\n        };\r\n        let [whoRu, setWhoRu] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleWhoRu =  (event) => {\r\n            setWhoRu(event.target.value)\r\n        };\r\n        let [whoKg, setWhoKg] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleWhoKg =  (event) => {\r\n            setWhoKg(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='контакты'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={contact}\r\n                    onChange={handleContact}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='кто'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={whoRu}\r\n                    onChange={handleWhoRu}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ким'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={whoKg}\r\n                    onChange={handleWhoKg}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Персонал', data: { contact: contact, whoRu: whoRu, whoKg: whoKg}});\r\n                        else\r\n                            setData({id: data[selected][4], search: search, sort: sort, page: page, name: 'Персонал', data: { contact: contact, whoRu: whoRu, whoKg: whoKg}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [phone, setPhone] = useState(selected!==-1?data[selected][0]:'');\r\n        let handlePhone =  (event) => {\r\n            setPhone(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='телефон'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={phone}\r\n                    onChange={handlePhone}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Телефон', data: {phone: phone}});\r\n                        else\r\n                            setData({id: data[selected][2], search: search, sort: sort, page: page, name: 'Телефон', data: {phone: phone}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [name, setName] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [link, setLink] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleLink =  (event) => {\r\n            setLink(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ссылка'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={link}\r\n                    onChange={handleLink}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Социалки', file: file, data: {name: name, url: link}});\r\n                        else\r\n                            setData({id: data[selected][4], search: search, sort: sort, page: page, name: 'Социалки', oldFile: data[selected][0], file: file, data: {name: name, url: link}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [nameRu, setNameRu] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleNameRu =  (event) => {\r\n            setNameRu(event.target.value)\r\n        };\r\n        let [requirementsRu, setRequirementsRu] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleRequirementsRu =  (event) => {\r\n            setRequirementsRu(event.target.value)\r\n        };\r\n        let [dutiesRu, setDutiesRu] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleDutiesRu =  (event) => {\r\n            setDutiesRu(event.target.value)\r\n        };\r\n        let [conditionsRu, setConditionsRu] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleConditionsRu =  (event) => {\r\n            setConditionsRu(event.target.value)\r\n        };\r\n        let [nameKg, setNameKg] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleNameKg =  (event) => {\r\n            setNameKg(event.target.value)\r\n        };\r\n        let [requirementsKg, setRequirementsKg] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleRequirementsKg =  (event) => {\r\n            setRequirementsKg(event.target.value)\r\n        };\r\n        let [dutiesKg, setDutiesKg] = useState(selected!==-1?data[selected][6]:'');\r\n        let handleDutiesKg =  (event) => {\r\n            setDutiesKg(event.target.value)\r\n        };\r\n        let [conditionsKg, setConditionsKg] = useState(selected!==-1?data[selected][7]:'');\r\n        let handleConditionsKg =  (event) => {\r\n            setConditionsKg(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='название'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={nameRu}\r\n                    onChange={handleNameRu}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='обязанности'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={requirementsRu}\r\n                    onChange={handleRequirementsRu}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='требования'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dutiesRu}\r\n                    onChange={handleDutiesRu}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='условия'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={conditionsRu}\r\n                    onChange={handleConditionsRu}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ысым'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={nameKg}\r\n                    onChange={handleNameKg}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='милдеттери'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={requirementsKg}\r\n                    onChange={handleRequirementsKg}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='талаптар'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dutiesKg}\r\n                    onChange={handleDutiesKg}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='шарттары'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={conditionsKg}\r\n                    onChange={handleConditionsKg}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Вакансии', data: {nameRu: nameRu, requirementsRu: requirementsRu, dutiesRu: dutiesRu, conditionsRu: conditionsRu, nameKg: nameKg, requirementsKg: requirementsKg, dutiesKg: dutiesKg,  conditionsKg: conditionsKg}});\r\n                        else\r\n                            setData({id: data[selected][9], search: search, sort: sort, page: page, name: 'Вакансии', data: {nameRu: nameRu, requirementsRu: requirementsRu, dutiesRu: dutiesRu, conditionsRu: conditionsRu, nameKg: nameKg, requirementsKg: requirementsKg, dutiesKg: dutiesKg,  conditionsKg: conditionsKg}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [nameRu, setNameRu] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleNameRu =  (event) => {\r\n            setNameRu(event.target.value)\r\n        };\r\n        let [nameKg, setNameKg] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleNameKg =  (event) => {\r\n            setNameKg(event.target.value)\r\n        };\r\n        let [address, setAddress] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleAddress = (event) => {\r\n            setAddress(event.target.value)\r\n        };\r\n        let [city, setCity] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleCity = (event) => {\r\n            setCity(event.target.value)\r\n        };\r\n        let [coords, setCoords] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleCoords =  (event) => {\r\n            setCoords(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='название'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={nameRu}\r\n                    onChange={handleNameRu}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ысым'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={nameKg}\r\n                    onChange={handleNameKg}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='адрес'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={address}\r\n                    onChange={handleAddress}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='город'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={city}\r\n                    onChange={handleCity}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='координаты'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={coords}\r\n                    onChange={handleCoords}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Площадка', file: file, data: {city: city, nameRu: nameRu, nameKg: nameKg, address: address, coords: coords}});\r\n                        else\r\n                            setData({id: data[selected][7], search: search, sort: sort, page: page, name: 'Площадка', oldFile: data[selected][0], file: file, data: {city: city, nameRu: nameRu, nameKg: nameKg, address: address, coords: coords}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    text_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        overflow: 'hidden',\r\n        wordWrap: 'break-word'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [surname, setSurame] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleSurname =  (event) => {\r\n            setSurame(event.target.value)\r\n        };\r\n        let [email, setEmail] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleEmail =  (event) => {\r\n            setEmail(event.target.value)\r\n        };\r\n        let [phonenumber, setPhonenumber] = useState(selected!==-1?data[selected][3]:'');\r\n        let handlePhonenumber = (event) => {\r\n            setPhonenumber(event.target.value)\r\n        };\r\n        let roles = ['manager', 'accountant', 'cashier', 'client', 'cinema', 'turnstile', 'organizator']\r\n        let [role, setRole] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleRole = (event) => {\r\n            setRole(event.target.value)\r\n        };\r\n        let statuses = ['active', 'inactive']\r\n        let [status, setStatus] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let [password, setPassword] = useState('');\r\n        let handlePassword =  (event) => {\r\n            setPassword(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='фамилия'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={surname}\r\n                    onChange={handleSurname}\r\n                />\r\n                <br/>\r\n                {selected!==-1?\r\n                    <>\r\n                    <br/>\r\n                    <div className={classes.textField}>\r\n                        <b>email:</b> {email}\r\n                    </div>\r\n                    <br/>\r\n                    </>\r\n                    :\r\n                    <>\r\n                    <TextField\r\n                        label='email'\r\n                        type='login'\r\n                        className={classes.textField}\r\n                        margin='normal'\r\n                        value={email}\r\n                        onChange={handleEmail}\r\n                    />\r\n                    <br/>\r\n                    </>\r\n                }\r\n                <TextField\r\n                    label='телефон'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={phonenumber}\r\n                    onChange={handlePhonenumber}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='роль'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={role}\r\n                    onChange={handleRole}\r\n                >\r\n                    {roles != undefined?\r\n                        roles.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <br/>\r\n                    <TextField\r\n                        label='пароль'\r\n                        type='login'\r\n                        className={classes.textField}\r\n                        margin='normal'\r\n                        value={password}\r\n                        onChange={handlePassword}\r\n                    />\r\n                    <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Пользователи', data: {email: email, name: name, surname: surname, phonenumber: phonenumber, role: role, password: password, status: status}});\r\n                        else\r\n                            setData({id: data[selected][7], search: search, sort: sort, page: page, name: 'Пользователи', data: {email: email, name: name, surname: surname, phonenumber: phonenumber, role: role,  password: password, status: status}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { getDataSimple } from '../../redux/actions/table'\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        useEffect(()=>{(async()=>{\r\n            await setEvents(await getDataSimple({name: 'СобытиеID'}));\r\n        })()},[])\r\n        let [events, setEvents] = useState([]);\r\n        let [event, setEvent] = useState(selected!==-1?data[selected][2].split('\\n')[1]:'');\r\n        let handleEvent =  (event) => {\r\n            setEvent(event.target.value)\r\n        };\r\n        let [name, setName] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let dateStart1;\r\n        if(selected!==-1) {\r\n            dateStart1 = {part1: data[selected][3].split(' ')};\r\n            dateStart1.part2 = dateStart1.part1[1];\r\n            dateStart1.part1 = dateStart1.part1[0].split('.');\r\n            dateStart1 =  dateStart1.part1[0]+'-'+dateStart1.part1[2]+'-'+dateStart1.part1[1]+'T'+dateStart1.part2+':00';\r\n        }\r\n        let [dateStart, setDateStart] = useState(selected!==-1?dateStart1:'2019-01-01T00:00');\r\n        let handleDateStart =  (event) => {\r\n            setDateStart(event.target.value)\r\n        };\r\n        let dateEnd1;\r\n        if(selected!==-1){\r\n            dateEnd1 = {part1: data[selected][4].split(' ')};\r\n            dateEnd1.part2 = dateEnd1.part1[1];\r\n            dateEnd1.part1 = dateEnd1.part1[0].split('.');\r\n            dateEnd1 =  dateEnd1.part1[0]+'-'+dateEnd1.part1[2]+'-'+dateEnd1.part1[1]+'T'+dateEnd1.part2+':00';\r\n        }\r\n        console.log(dateEnd1, dateStart1)\r\n        let [dateEnd, setDateEnd] = useState(selected!==-1?dateEnd1:'2019-01-01T00:00');\r\n        let handleDateEnd =  (event) => {\r\n            setDateEnd(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='событие'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={event}\r\n                    onChange={handleEvent}\r\n                >\r\n                    {events != undefined?\r\n                        events.map(option => {\r\n                            return(\r\n                            <MenuItem key={option._id} value={option._id}>\r\n                                {option.nameRu}\r\n                            </MenuItem>)\r\n                        })\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='дата начала'\r\n                    type='datetime-local'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dateStart}\r\n                    onChange={handleDateStart}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='дата окончания'\r\n                    type='datetime-local'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dateEnd}\r\n                    onChange={handleDateEnd}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Биллборды', file: file, data: {name: name, dateStart: dateStart, dateEnd: dateEnd, event: event}});\r\n                        else\r\n                            setData({id: data[selected][6], search: search, sort: sort, page: page, name: 'Биллборды', oldFile: data[selected][0], file: file, data: {name: name, dateStart: dateStart, dateEnd: dateEnd, event: event}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [name, setName] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleName = (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [genre, setGenre] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleGenre = (event) => {\r\n            setGenre(event.target.value)\r\n        };\r\n        let types = ['скоро', 'в прокате']\r\n        let [type, setType] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleType = (event) => {\r\n            setType(event.target.value)\r\n        };\r\n        let [duration, setDuration] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleDuration = (event) => {\r\n            setDuration(event.target.value)\r\n        };\r\n        let [ageCategory, setAgeCategory] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleAgeCategory = (event) => {\r\n            setAgeCategory(event.target.value)\r\n        };\r\n        let [premier, setPremier] = useState(selected!==-1?data[selected][6]:'');\r\n        let handlePremier = (event) => {\r\n            setPremier(event.target.value)\r\n        };\r\n        let [producers, setPoducers] = useState(selected!==-1?data[selected][7]:'');\r\n        let handleProducers = (event) => {\r\n            setPoducers(event.target.value)\r\n        };\r\n        let [actors, setActors] = useState(selected!==-1?data[selected][8]:'');\r\n        let handleActors = (event) => {\r\n            setActors(event.target.value)\r\n        };\r\n        let [description, setDescription] = useState(selected!==-1?data[selected][9]:'');\r\n        let handleDescription = (event) => {\r\n            setDescription(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='жанр'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={genre}\r\n                    onChange={handleGenre}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='тип'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={type}\r\n                    onChange={handleType}\r\n                >\r\n                    {types != undefined?\r\n                        types.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='продолжительность'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={duration}\r\n                    onChange={handleDuration}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='возраст'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={ageCategory}\r\n                    onChange={handleAgeCategory}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='премьера'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={premier}\r\n                    onChange={handlePremier}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='актеры'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={actors}\r\n                    onChange={handleActors}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='режиссеры'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={producers}\r\n                    onChange={handleProducers}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    multiline\r\n                    rowsMax='4'\r\n                    label='описание'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={description}\r\n                    onChange={handleDescription}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Кино', file: file, data: {name: name, genre: genre, type: type, description: description, duration: duration, ageCategory: ageCategory, premier: premier,  producers: producers, actors: actors}});\r\n                        else\r\n                            setData({id: data[selected][11], search: search, sort: sort, page: page, name: 'Кино', oldFile: data[selected][0], file: file, data: {name: name, genre: genre, type: type, description: description, duration: duration, ageCategory: ageCategory, premier: premier,  producers: producers, actors: actors}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [mailuser, setMailuser] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleMailuser =  (event) => {\r\n            setMailuser(event.target.value)\r\n        };\r\n        let [mailpass, setMailpass] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleMailpass =  (event) => {\r\n            setMailpass(event.target.value)\r\n        };\r\n        let [mailchimpInstance, setMailchimpInstance] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleMailchimpInstance =  (event) => {\r\n            setMailchimpInstance(event.target.value)\r\n        };\r\n        let [listUniqueId, setListUniqueId] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleListUniqueId =  (event) => {\r\n            setListUniqueId(event.target.value)\r\n        };\r\n        let [mailchimpApiKey, setMailchimpApiKey] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleMailchimpApiKey =  (event) => {\r\n            setMailchimpApiKey(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='mailuser'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={mailuser}\r\n                    onChange={handleMailuser}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='mailpass'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={mailpass}\r\n                    onChange={handleMailpass}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='mailchimpInstance'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={mailchimpInstance}\r\n                    onChange={handleMailchimpInstance}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='listUniqueId'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={listUniqueId}\r\n                    onChange={handleListUniqueId}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='mailchimpApiKey'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={mailchimpApiKey}\r\n                    onChange={handleMailchimpApiKey}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Рассылка', data: {mailuser: mailuser, mailpass: mailpass, mailchimpInstance: mailchimpInstance, listUniqueId: listUniqueId, mailchimpApiKey: mailchimpApiKey}});\r\n                        else\r\n                            setData({id: data[selected][6], search: search, sort: sort, page: page, name: 'Рассылка', data: {mailuser: mailuser, mailpass: mailpass, mailchimpInstance: mailchimpInstance, listUniqueId: listUniqueId, mailchimpApiKey: mailchimpApiKey}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { getDataSimple } from '../../redux/actions/table'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        useEffect(()=>{(async()=>{\r\n            await setUsers(await getDataSimple({name: 'Кинотеатры'}));\r\n        })()},[])\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [user, setUser] = useState(selected!==-1?data[selected][1].split('\\n')[1]:'');\r\n        let handleUser =  (event) => {\r\n            setUser(event.target.value)\r\n        };\r\n        let [users, setUsers] = useState([]);\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='название'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='кинотеатр'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={user}\r\n                    onChange={handleUser}\r\n                >\r\n                    {users != undefined?\r\n                        users.map(option => (\r\n                            <MenuItem key={option._id} value={option._id}>\r\n                                {option.name}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Залы', data: {name: name, user: user}});\r\n                        else\r\n                            setData({id: data[selected][3], search: search, sort: sort, page: page, name: 'Залы', data: {name: name, user: user}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    text_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        overflow: 'hidden',\r\n        wordWrap: 'break-word'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let ticket = selected!==-1?data[selected][0]:'';\r\n        let hash = selected!==-1?data[selected][1]:'';\r\n        let user = selected!==-1?data[selected][2]:'';\r\n        let movie = selected!==-1?data[selected][3]:'';\r\n        let cinema = selected!==-1?data[selected][4]:'';\r\n        let hall = selected!==-1?data[selected][5]:'';\r\n        let [status, setStatus] = useState(selected!==-1?data[selected][6]:'');\r\n        let statuses = ['продан', 'возвращен', 'использован']\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let seats = selected!==-1?JSON.parse(data[selected][7]):'';\r\n\r\n        const { classes } = props;\r\n        return (\r\n            <div className={classes.text_message}>\r\n                <b>Билет</b>\r\n                <br/>\r\n                {ticket}\r\n                <br/>\r\n                <br/>\r\n                <b>Hash</b>\r\n                <br/>\r\n                {hash}\r\n                <br/>\r\n                <br/>\r\n                <b>Пользователь</b>\r\n                <br/>\r\n                {user}\r\n                <br/>\r\n                <br/>\r\n                <b>Фильм</b>\r\n                <br/>\r\n                {movie}\r\n                <br/>\r\n                <br/>\r\n                <b>Кинотеатр</b>\r\n                <br/>\r\n                {cinema}\r\n                <br/>\r\n                <br/>\r\n                <b>Зал</b>\r\n                <br/>\r\n                {hall}\r\n                <br/>\r\n                <br/>\r\n                <b>Места</b>\r\n                <br/>\r\n                {seats.length>0?\r\n                    seats.map(option => {\r\n                        return(\r\n                            <>\r\n                            {'Место: ' + option.name+' Цена: '+option.priceSelect+' Дата: '+option.date}\r\n                            <br/>\r\n                            </>)\r\n                    }):null}\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Билеты кино', data: {status: status}});\r\n                        else\r\n                            setData({id: data[selected][9], search: search, sort: sort, page: page, name: 'Билеты кино', data: {status: status}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    text_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        overflow: 'hidden',\r\n        wordWrap: 'break-word'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [balance, setBalance] = useState(selected!==-1?data[selected][2]:'');\r\n        let user = selected!==-1?data[selected][0]:'';\r\n        let wallet = selected!==-1?data[selected][1]:'';\r\n        let handleBalance =  (event) => {\r\n            setBalance(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <div className={classes.textField}>\r\n                    <b>пользователь:</b> {user}\r\n                </div>\r\n                <br/>\r\n                <div className={classes.textField}>\r\n                    <b>кошелек:</b> {wallet}\r\n                </div>\r\n                <br/>\r\n                <TextField\r\n                    label='баланс'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={balance}\r\n                    onChange={handleBalance}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected!==-1)\r\n                            setData({id: data[selected][4], search: search, sort: sort, page: page, name: 'Баланс', data: {balance: balance}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [address, setAddress] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleAddress =  (event) => {\r\n            setAddress(event.target.value)\r\n        };\r\n        let [geo, setGeo] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleGeo =  (event) => {\r\n            setGeo(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='адрес'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={address}\r\n                    onChange={handleAddress}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='геолокация'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={geo}\r\n                    onChange={handleGeo}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Кассы', data: {geo: geo, name: name, address: address}});\r\n                        else\r\n                            setData({id: data[selected][4], search: search, sort: sort, page: page, name: 'Кассы', data: {geo: geo, name: name, address: address}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    text_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        overflow: 'hidden',\r\n        wordWrap: 'break-word'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let wallet = selected!==-1?data[selected][0]:'';\r\n        let ticket = selected!==-1?data[selected][1]:'';\r\n        let service = selected!==-1?data[selected][2]:'';\r\n        let sum = selected!==-1?data[selected][3]:'';\r\n        let meta = selected!==-1?data[selected][4]:'';\r\n        let [status, setStatus] = useState(selected!==-1?data[selected][5]:'');\r\n        let name = selected!==-1?data[selected][6]:'';\r\n        let email = selected!==-1?data[selected][7]:'';\r\n        let sms = selected!==-1?data[selected][8]:'';\r\n        let statuses = ['обработка', 'совершен', 'отменен', 'ошибка']\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n\r\n        const { classes } = props;\r\n        return (\r\n            <div className={classes.text_message}>\r\n                <b>Адрес</b>\r\n                <br/>\r\n                {wallet}\r\n                <br/>\r\n                <br/>\r\n                <b>Билет</b>\r\n                <br/>\r\n                {ticket}\r\n                <br/>\r\n                <br/>\r\n                <b>Сумма</b>\r\n                <br/>\r\n                {sum}\r\n                <br/>\r\n                <br/>\r\n                <b>Сервис</b>\r\n                <br/>\r\n                {service}\r\n                <br/>\r\n                <br/>\r\n                <b>Meta</b>\r\n                <br/>\r\n                {meta}\r\n                <br/>\r\n                <br/>\r\n                <b>Имя</b>\r\n                <br/>\r\n                {name}\r\n                <br/>\r\n                <br/>\r\n                <b>Email</b>\r\n                <br/>\r\n                {email}\r\n                <br/>\r\n                <br/>\r\n                <b>SMS</b>\r\n                <br/>\r\n                {sms}\r\n                <br/>\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Платежи', data: {status: status}});\r\n                        else\r\n                            setData({id: data[selected][10], search: search, sort: sort, page: page, name: 'Платежи', data: {status: status}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import { SET_MINI_DIALOG, SHOW_MINI_DIALOG } from '../constants/mini_dialog'\r\nimport React from 'react'\r\nimport {\r\n    store\r\n} from '../../index'\r\nimport About from '../../component/Add/About';\r\nimport Email from '../../component/Add/Email';\r\nimport Ticket from '../../component/Add/Ticket';\r\nimport Contact from '../../component/Add/Contact';\r\nimport Ads from '../../component/Add/Ads';\r\nimport Faq from '../../component/Add/Faq';\r\nimport Logo from '../../component/Add/Logo';\r\nimport Personal from '../../component/Add/Personal';\r\nimport Phone from '../../component/Add/Phone';\r\nimport Social from '../../component/Add/Social';\r\nimport Vacancy from '../../component/Add/Vacancy';\r\nimport Where from '../../component/Add/Where';\r\nimport User from '../../component/Add/User';\r\nimport Billboard from '../../component/Add/Billboard';\r\nimport Cinema from '../../component/Add/Cinema';\r\nimport Mailing from '../../component/Add/Mailing';\r\nimport Hall from '../../component/Add/Hall';\r\nimport TicketCinema from '../../component/Add/TicketCinema';\r\nimport Balance from '../../component/Add/Balance';\r\nimport Cashbox from '../../component/Add/Cashbox';\r\nimport Payment from '../../component/Add/Payment';\r\n\r\nexport function setMiniDialog(title,child) {\r\n    return {\r\n        type: SET_MINI_DIALOG,\r\n        payload: {title: title, child: child}\r\n    }\r\n}\r\n\r\nexport function showAddMiniDialog() {\r\n    return async (dispatch) => {\r\n        if(store.getState().table.name!=''){\r\n            let child;\r\n            if(store.getState().table.name=='Рассылка')\r\n                child = <Mailing/>\r\n            else if(store.getState().table.name=='Билеты кино')\r\n                child = <TicketCinema/>\r\n            else if(store.getState().table.name=='О нас')\r\n                child = <About/>\r\n            else if(store.getState().table.name=='Билеты')\r\n                child = <Ticket/>\r\n            else if(store.getState().table.name=='Кино')\r\n                child = <Cinema/>\r\n            else if(store.getState().table.name=='Email')\r\n                child = <Email/>\r\n            else if(store.getState().table.name=='Площадка')\r\n                child = <Where/>\r\n            else if(store.getState().table.name=='Вакансии')\r\n                child = <Vacancy/>\r\n            else if(store.getState().table.name=='Реклама')\r\n                child = <Ads/>\r\n            else if(store.getState().table.name=='Контакт')\r\n                child = <Contact/>\r\n            else if(store.getState().table.name=='FAQ')\r\n                child = <Faq/>\r\n            else if(store.getState().table.name=='Логотип')\r\n                child = <Logo/>\r\n            else if(store.getState().table.name=='Персонал')\r\n                child = <Personal/>\r\n            else if(store.getState().table.name=='Телефон')\r\n                child = <Phone/>\r\n            else if(store.getState().table.name=='Социалки')\r\n                child = <Social/>\r\n            else if(store.getState().table.name=='Пользователи')\r\n                child = <User/>\r\n            else if(store.getState().table.name=='Биллборды')\r\n                child = <Billboard/>\r\n            else if(store.getState().table.name=='Залы')\r\n                child = <Hall/>\r\n            else if(store.getState().table.name=='Баланс')\r\n                child = <Balance/>\r\n            else if(store.getState().table.name=='Кассы')\r\n                child = <Cashbox/>\r\n            else if(store.getState().table.name=='Платежи')\r\n                child = <Payment/>\r\n            dispatch ({\r\n                type: SET_MINI_DIALOG,\r\n                payload: {title: store.getState().table.name, child: child}\r\n            })\r\n            dispatch ({\r\n                type: SHOW_MINI_DIALOG,\r\n                payload: true\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function showMiniDialog(show) {\r\n    return {\r\n        type: SHOW_MINI_DIALOG,\r\n        payload: show\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.fdc48fe4.png\";","import React from 'react';\r\nimport MUIDataTable from 'mui-datatables';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as tableActions from '../redux/actions/table'\r\nimport * as mini_dialogActions from '../redux/actions/mini_dialog'\r\nimport ImageGallery from 'react-image-gallery';\r\nimport 'react-image-gallery/styles/css/image-gallery.css';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { mainWindow } from '../App'\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport logo from '../logo.png';\r\n\r\nconst message = mainWindow.current.offsetWidth>800?\r\n    <>\r\n        DsrAdmin - не будущее, а настоящее\r\n        <br/>\r\n        <i style={{fontWeight: '500', fontSize: '18px'}}>Для начала выберите пункт в боковом меню</i>\r\n    </>\r\n    :\r\n    <>\r\n    DsrAdmin - не будущее, а настоящее\r\n        <br/>\r\n        <i style={{fontWeight: '500', fontSize: '18px'}}>Для начала нажмите значок и выберите пункт в боковом меню</i>\r\n    </>;\r\nconst width = mainWindow.current.offsetWidth>800? 500: 240;\r\nconst styles = theme => ({\r\n    mainMessage: {\r\n        backgroundImage: \"url('https://i.imgur.com/ZE6v9a9.jpg')\",\r\n        backgroundPosition: 'center center',\r\n        backgroundRepeat: 'no-repeat',\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    message: {\r\n        color: '#ffffff',\r\n        fontWeight: 'bold',\r\n        fontSize: '20px',\r\n        width: width,\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: 'calc((100% - '+width+'px)/2)',\r\n        marginRight: 'calc((100% - '+width+'px)/2)'\r\n    }\r\n});\r\n\r\nconst Table = React.memo(\r\n    (props) => {\r\n        const { classes } = props;\r\n        let getMuiTheme = () => createMuiTheme({\r\n            overrides: {\r\n                MUIDataTableBodyCell: {\r\n                    root: {\r\n                        textOverflow: 'ellipsis',\r\n                        maxHeight: '500px',\r\n                        maxWidth: '200px',\r\n                        overflow: 'hidden',\r\n                        wordWrap: 'break-word'\r\n                    }\r\n                },\r\n                MuiPaper: {\r\n                    elevation4:{\r\n                        boxShadow: 'none'\r\n                    }\r\n                }\r\n\r\n            }\r\n        })\r\n        const { row, count, page, data, data1, name, search, sort } = props.table;\r\n        const { getData, deleteData, setSelected } = props.tableActions;\r\n        const { showAddMiniDialog, setMiniDialog, showMiniDialog } = props.mini_dialogActions;\r\n        const { authenticated } = props.user;\r\n        const options = {\r\n            serverSide: true,\r\n            filterType: 'checkbox',\r\n            filter: false,\r\n            print: false,\r\n            rowsPerPage: 10,\r\n            count: count,\r\n            page: page,\r\n            rowsPerPageOptions: false,\r\n            downloadOptions: {filename: 'tableDownload.csv', separator: ','},\r\n            onColumnSortChange: (changedColumn, direction) => {\r\n                getData({search: search, sort: [changedColumn, direction], page: page, name: name})\r\n                setSelected(-1)\r\n            },\r\n            onSearchChange: (searchText) => {\r\n                getData({search: searchText, sort: '', page: 0, name: name})\r\n                setSelected(-1)\r\n            },\r\n            onChangePage: (currentPage) => {\r\n                getData({search: search, sort: sort, page: currentPage, name: name})\r\n                setSelected(-1)\r\n            },\r\n            onRowsDelete: (rowsDeleted) => {\r\n                let deletedId = [], oldFile = '';\r\n                for(let i=0; i<rowsDeleted.data.length; i++){\r\n                    deletedId.push(data[rowsDeleted.data[i].index][data[rowsDeleted.data[i].index].length-1])\r\n                    if(data[rowsDeleted.data[i].index][0]!=undefined&&(data[i][0].includes('http')||data[rowsDeleted.data[i].index][0].includes('https')))\r\n                        oldFile += '\\n' + data[rowsDeleted.data[i].index][0]\r\n                }\r\n                deleteData({oldFile: oldFile, search: search, sort: sort, page: page, name: name, deleted: JSON.stringify(deletedId)})\r\n                setSelected(-1)\r\n            },\r\n            onCellClick: (colData, colMeta) => {\r\n                colData = colData.toString()\r\n                if(colData!=undefined&&!(colData.includes('http')||colData.includes('https'))) {\r\n                    setSelected(colMeta.rowIndex)\r\n                    if(name === 'Событие'){\r\n                        props.history.push('/event')\r\n                    } else if(name === 'Сеанс'){\r\n                        props.history.push('/seance')\r\n                    } else {\r\n                        showAddMiniDialog()\r\n                    }\r\n                } else if(name === 'Билеты'||name === 'Билеты кино') {\r\n                    let win = window.open(colData, '_blank');\r\n                    win.focus();\r\n                } else {\r\n                    let images = []\r\n                    for (let i = 0; i<colData.split('\\n').length; i++)\r\n                        images.push({original: colData.split('\\n')[i], thumbnail: colData.split('\\n')[i]})\r\n                    setMiniDialog('Просмотр', <ImageGallery items={images} showThumbnails={false} showFullscreenButton={false} showPlayButton={false} />);\r\n                    showMiniDialog(true)\r\n                }\r\n            },\r\n            onTableChange: (action, tableState) => {\r\n                if(action==='search'&&tableState.searchText===null){\r\n                    getData({search: '', sort: '', page: 0, name: name})\r\n                    setSelected(-1)\r\n                }\r\n            }\r\n        };\r\n        return (\r\n                <>\r\n                    {authenticated&&name!=''?\r\n                        <MuiThemeProvider theme={getMuiTheme()}>\r\n                            <MUIDataTable\r\n                                title={name}\r\n                                data={data1}\r\n                                columns={row}\r\n                                options={options}\r\n                            />\r\n                        </MuiThemeProvider>\r\n                        :\r\n                        <div className={classes.mainMessage}>\r\n                            <div className={classes.message}>\r\n                                <img style={{width:'100px'}} src={logo} /><br/>\r\n                                <br/>\r\n                                {message}\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </>\r\n            );\r\n        }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        table: state.table,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nTable.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Table));"],"sourceRoot":""}