{"version":3,"sources":["pages/Seance.js"],"names":["width","mainWindow","current","offsetWidth","width1","Event","React","memo","props","_props$tableActions","tableActions","setSelected","addData","setData","_props$table","table","selected","data","classes","status","user","useEffect","Object","C_projects_biletiki_biletiki_admin_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","C_projects_biletiki_biletiki_admin_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","wrap","_context","prev","next","includes","role","history","push","t0","setUsers","getDataSimple","name","t1","sent","t2","setMovies","t3","stop","this","_useState","useState","_useState2","C_projects_biletiki_biletiki_admin_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","type","setType","types","_useState3","_useState4","movies","_useState5","split","_useState6","movie","setMovie","_useState7","_useState8","setUser","_useState9","_useState10","halls","setHalls","_useState11","_useState12","hall","setHall","handleHall","event","target","value","setSeats","getWhereDara","nameCinema","undefined","_useState13","_useState14","price","setPrice","handlePrice","_ref2","_callee2","_context2","_x","apply","arguments","_useState15","_useState16","priceStud","setPriceStud","handlePriceStud","_ref3","_callee3","_context3","_x2","_useState17","_useState18","priceKid","setPriceKid","handlePriceKid","_ref4","_callee4","_context4","_x3","_useState19","JSON","parse","_useState20","seats","_useState21","_useState22","realDate","setRealDate","handleRealDate","_ref5","_callee5","_context5","_x4","_useState23","_useState24","users","_useState25","_useState26","setNameCinema","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_8___default","select","SelectProps","MenuProps","className","menu","label","textField","margin","onChange","map","option","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_13___default","key","_id","Fragment","message","length","i","getHalls","_component_CinemaHall_Render_Render__WEBPACK_IMPORTED_MODULE_14__","cashbox","index","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","to","onClick","_seats","i1","color","search","sort","page","stringify","cinema","id","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_9___default","variant","button","withStyles","theme","spacing","unit","textFieldSmall","marginLeft","marginRight","urls","maxHeight","overflow","marginTop","marginBottom","connect","state","dispatch","bindActionCreators"],"mappings":"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","file":"static/js/10.2062a9fb.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { getDataSimple } from '../redux/actions/table'\nimport * as tableActions from '../redux/actions/table'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom'\nimport { mainWindow } from '../App'\nimport { getWhereDara, getHalls } from '../component/CinemaHall/index'\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Render from '../component/CinemaHall/Render/Render'\n\nconst width = mainWindow.current.offsetWidth>800? 500: 240;\nconst width1 = mainWindow.current.offsetWidth>800? 240: 120;\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit,\n    },\n    textFieldSmall: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: width1\n        },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: width,\n    },\n    urls: {\n        margin: theme.spacing.unit,\n        width: width,\n        maxHeight: 100,\n        overflow: 'auto'\n    },\n    message: {\n        width: width,\n        marginTop: theme.spacing.unit,\n        marginBottom: theme.spacing.unit,\n        marginLeft: 'calc((100% - '+width+'px)/2)',\n        marginRight: 'calc((100% - '+width+'px)/2)'\n    },\n});\n\nconst Event = React.memo(\n    (props) =>{\n        const { setSelected, addData, setData } = props.tableActions;\n        const { selected, data } = props.table;\n        const { classes } = props;\n        const { status } = props.user;\n        useEffect(()=>{(async()=>{\n            if (!(status.status==='active'&&['admin', 'manager', 'cinema'].includes(status.role))) {\n                props.history.push('/')\n            }\n            await setUsers(await getDataSimple({name: 'Кинотеатры'}));\n            await setMovies(await getDataSimple({name: 'ВсеКино1'}));\n        })()},[])\n        let [type, setType] = useState(selected!==-1?data[selected][5]:'');\n        let handleType = (event) => {\n            setType(event.target.value)\n        };\n        let types = ['2D', '3D', 'IMAX']\n        let [movies, setMovies] = useState([]);\n        let [movie, setMovie] = useState(selected!==-1?data[selected][1].split('\\n')[0]:'');\n        let handleMovie = (event) => {\n            setMovie(event.target.value)\n            setHalls([])\n            handleHall({target: {value: ''}})\n            setUser('')\n        };\n        let [user, setUser] = useState(selected!==-1?data[selected][4].split('|')[0]:'');\n        let handleUser = (event) => {\n            setUser(event.target.value)\n            let name = ''\n            for(let i=0; i<users.length; i++){\n                if (users[i]._id===event.target.value)\n                    name = users[i].name\n            }\n            setNameCinema(name)\n            setHalls(getHalls(name))\n            handleHall({target: {value: ''}})\n        };\n        let [halls, setHalls] = useState([]);\n        let [hall, setHall] = useState(selected!==-1?data[selected][4].split('|')[1]:'');\n        let handleHall = (event) => {\n            setHall(event.target.value)\n            if(event.target.value!=='')\n                setSeats(getWhereDara(nameCinema, event.target.value))\n            else\n                setSeats(undefined)\n        };\n        let [price, setPrice] = useState(selected!==-1?data[selected][2]:'');\n        let handlePrice = async (event) => {\n            setPrice(event.target.value)\n        };\n        let [priceStud, setPriceStud] = useState('');\n        let handlePriceStud = async (event) => {\n            setPriceStud(event.target.value)\n        };\n        let [priceKid, setPriceKid] = useState('');\n        let handlePriceKid = async (event) => {\n            setPriceKid(event.target.value)\n        };\n        let [seats, setSeats] = useState(selected!==-1?JSON.parse(data[selected][3]):undefined);\n        let [realDate, setRealDate] = useState(selected!==-1?data[selected][0]:'');\n        let handleRealDate = async (event) => {\n            setRealDate(event.target.value)\n        };\n        let [users, setUsers] = useState([]);\n        let [nameCinema, setNameCinema] = useState('');\n        return (\n            <div>\n                {selected===-1?\n                <TextField\n                    select\n                    SelectProps={{\n                        MenuProps: {\n                            className: classes.menu,\n                        },\n                    }}\n                    label='фильм'\n                    type='login'\n                    className={classes.textField}\n                    margin='normal'\n                    value={movie}\n                    onChange={handleMovie}\n                >\n                    {movies != undefined?\n                        movies.map(option => (\n                            <MenuItem key={option._id} value={option._id}>\n                                {option.name}\n                            </MenuItem>\n                        ))\n                        :\n                        null\n                    }\n                </TextField>:\n                    <>\n                    <b>Фильм</b>\n                    <br/>\n                    <div className={classes.message}>\n                        {movie}\n                    </div>\n                    </> }\n                <br/>\n                {selected===-1?\n                movie.length>0?<><TextField\n                    select\n                    SelectProps={{\n                        MenuProps: {\n                            className: classes.menu,\n                        },\n                    }}\n                    label='кинотеатр'\n                    type='login'\n                    className={classes.textField}\n                    margin='normal'\n                    value={user}\n                    onChange={handleUser}\n                >\n                    {users != undefined?\n                        users.map(option => (\n                            <MenuItem key={option._id} value={option._id}>\n                                {option.name}\n                            </MenuItem>\n                        ))\n                        :\n                        null\n                    }\n                </TextField>\n                <br/></>:\n                    null\n                :\n                    <>\n                    <b>Кинотеатр</b>\n                    <br/>\n                    <div className={classes.message}>\n                        {user}\n                    </div>\n                    </>}\n                {selected===-1?\n                halls.length>0?\n                    <>\n                    <TextField\n                        select\n                        SelectProps={{\n                            MenuProps: {\n                                className: classes.menu,\n                            },\n                        }}\n                        label='зал'\n                        type='login'\n                        className={classes.textField}\n                        margin='normal'\n                        value={hall}\n                        onChange={handleHall}\n                    >\n                        {halls != undefined?\n                            halls.map(option => (\n                                <MenuItem key={option} value={option}>\n                                    {option}\n                                </MenuItem>\n                            ))\n                            :\n                            null\n                        }\n                    </TextField>\n                    <br/>\n                    </>:null\n                    :\n                    <>\n                    <b>Зал</b>\n                    <br/>\n                    <div className={classes.message}>\n                        {hall}\n                    </div>\n                    </>}\n                {hall.length>0?\n                    <>\n                    {selected===-1?\n                        <TextField\n                            select\n                            SelectProps={{\n                                MenuProps: {\n                                    className: classes.menu,\n                                },\n                            }}\n                            label='тип'\n                            type='login'\n                            className={classes.textField}\n                            margin='normal'\n                            value={type}\n                            onChange={handleType}\n                        >\n                            {types != undefined?\n                                types.map(option => (\n                                    <MenuItem key={option} value={option}>\n                                        {option}\n                                    </MenuItem>\n                                ))\n                                :\n                                null\n                            }\n                        </TextField>: <>\n                        <b>Тип</b>\n                        <br/>\n                        <div className={classes.message}>\n                            {type}\n                        </div>\n                        </>}\n                    <br/>\n                    {selected===-1?\n                    <TextField\n                        label='дата'\n                        type='datetime-local'\n                        className={classes.textField}\n                        margin='normal'\n                        value={realDate}\n                        onChange={handleRealDate}\n                    />: <>\n                        <b>Дата</b>\n                        <br/>\n                        <div className={classes.message}>\n                            {realDate}\n                        </div>\n                        </>}\n                    <br/>\n                    {selected===-1?\n                    <TextField\n                        label='цена'\n                        type='login'\n                        className={classes.textField}\n                        margin='normal'\n                        value={price}\n                        onChange={handlePrice}\n                    />:\n                        <>\n                        <b>Цена</b>\n                        <br/>\n                        <div className={classes.message}>\n                            {price+' сом'}\n                        </div>\n                        </>\n                    }\n                    <br/>\n                    {selected===-1?\n                        <TextField\n                            label='цена дети'\n                            type='login'\n                            className={classes.textField}\n                            margin='normal'\n                            value={priceKid}\n                            onChange={handlePriceKid}\n                        />:\n                        null\n                    }\n                    <br/>\n                    {selected===-1?\n                        <TextField\n                            label='цена студенты'\n                            type='login'\n                            className={classes.textField}\n                            margin='normal'\n                            value={priceStud}\n                            onChange={handlePriceStud}\n                        />:\n                        null\n                    }\n                    <br/>\n                    </>\n                :null}\n                    <Render seats={seats} cashbox={false} index={selected} price={price} setSeats={setSeats}/>\n                <div>\n                    <Link className='link' to={''} onClick={()=>{setSelected(-1);\n                        if(selected===-1) {\n                            let _seats = seats;\n                            if (price.length > 0 && realDate.length > 0)\n                                for (let i = 0; i < _seats.length; i++) {\n                                    for (let i1 = 0; i1 < _seats[i].length; i1++) {\n                                        if (_seats[i][i1].type === 'seat') {\n                                            _seats[i][i1].color = 'indigo'\n                                            _seats[i][i1].status = 'free'\n                                            _seats[i][i1].price = price\n                                            _seats[i][i1].priceStud = priceStud\n                                            _seats[i][i1].priceKid = priceKid\n                                        }\n                                    }\n                                }\n                            addData({search: '', sort: '', page: 0, name: 'Сеанс', data: {realDate: realDate,\n                                movie: movie,\n                                type: type,\n                                price: price,\n                                seats: JSON.stringify(seats),\n                                cinema: nameCinema+'|'+hall}});\n                        } else {\n                            setData({id: data[selected][7], search: '', sort: '', page: 0, name: 'Сеанс', data: {realDate: realDate,\n                                type: type,\n                                movie: data[selected][1].split('\\n')[1],\n                                price: price,\n                                seats: JSON.stringify(seats),\n                                cinema: user}});\n                        }\n                        setSelected(-1)\n                    }} >\n                        <Button variant='contained' color='primary' className={classes.button}>\n                            Сохранить\n                        </Button>\n                            </Link>\n                    <Link className='link' to={''} onClick={()=>{setSelected(-1);}}>\n                        <Button variant='contained' color='secondary' className={classes.button}>\n                            Отмена\n                        </Button>\n                    </Link>\n                </div>\n                <br/>\n            </div>\n        );\n  })\n\nfunction mapStateToProps (state) {\n    return {\n        user: state.user,\n        table: state.table,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        tableActions: bindActionCreators(tableActions, dispatch),\n    }\n}\n\nEvent.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Event));\n"],"sourceRoot":""}