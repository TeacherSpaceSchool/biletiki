{"version":3,"sources":["page/Contacts.js"],"names":["Contacts","React","memo","props","lang","app","_useState","useState","_useState2","Object","C_projects_biletiki_biletiki_client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","contacts","setContacts","_useState3","_useState4","personals","setPersonals","_useState5","_useState6","socials","setSocials","_useState7","_useState8","size","setSize","_useState9","_useState10","setCoord","useEffect","C_projects_biletiki_biletiki_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_projects_biletiki_biletiki_client_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","data","wrap","_context","prev","next","document","title","getOther","name","sent","console","log","coords","split","stop","this","_callee2","_context2","mainWindow","current","offsetWidth","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","Fragment","react_yandex_maps__WEBPACK_IMPORTED_MODULE_7__","className","cashbox","height","width","defaultState","center","undefined","zoom","options","iconColor","geometry","address","booking","connection","href","return1","general","cooperation","map","element","whoRu","whoKg","contact","url","src","image","connect","state","dispatch","appActions","bindActionCreators"],"mappings":"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","file":"static/js/20.408141ac.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { getOther } from '../redux/actions/app'\r\nimport { connect } from 'react-redux'\r\nimport * as appActions from '../redux/actions/app'\r\nimport { bindActionCreators } from 'redux'\r\nimport { Map, YMaps, Placemark } from 'react-yandex-maps';\r\nimport { mainWindow } from '../App';\r\n\r\nconst Contacts =  React.memo(\r\n    (props) =>{\r\n        const { lang } = props.app;\r\n        let [contacts, setContacts] = useState({});\r\n        let [personals, setPersonals] = useState([]);\r\n        let [socials, setSocials] = useState([]);\r\n        let [size, setSize] = useState(600);\r\n        let [coord, setCoord] = useState([55.75, 37.57]);\r\n        useEffect(async ()=>{\r\n            document.title = 'Контакты'\r\n            let data = await getOther({name: 'Контакты'})\r\n            console.log(data.coords.split(', '))\r\n            setCoord(data.coords.split(', '))\r\n            await setContacts(data)\r\n            data = await getOther({name: 'Социалки'})\r\n            await setSocials(data)\r\n            data = await getOther({name: 'Персонал'})\r\n            await setPersonals(data)\r\n        },[]);\r\n        useEffect(async ()=>{\r\n             setSize(mainWindow.current.offsetWidth>600? [600, 600]: [mainWindow.current.offsetWidth, 200])\r\n        },[mainWindow.current.offsetWidth]);\r\n        return (\r\n\r\n            <>\r\n            <YMaps>\r\n                <main className='main  main-about main-contacts'>\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <div className='col-12 col-lg-8'>\r\n                            <div className='contacts-wrap'>\r\n                                <div className='contacts-title'>\r\n                                    <h1>\r\n                                        {lang==='ru'? 'КОНТАКТЫ KASSIR.KG' : 'КОНТАКТЫ KASSIR.KG'}\r\n                                    </h1>\r\n                                </div>\r\n                                <div className='center'><b>{lang==='ru'? 'Центральная касса' : 'Борбордук касса'}:</b> {contacts.cashbox}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-12 col-lg-8 map-wrap'>\r\n                            <div className='map'>\r\n                                <Map height={size[1]} width={size[0]} defaultState={{ center: contacts.coords!==undefined?contacts.coords.split(', '):[0,0], zoom: 16 }} >\r\n                                    <Placemark options={{iconColor: '#ffc500'}} geometry={contacts.coords!==undefined?contacts.coords.split(', '):[0,0]} />\r\n                                </Map>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-12 col-lg-4 address-wrap'>\r\n                            <div className='address-wrap_item'>\r\n                                <div className='address-wrap_title'>\r\n                                    {lang==='ru'? 'Адрес офиса' : 'Дареги'}:\r\n                                </div>\r\n                                <div className='address-wrap_text'>\r\n                                    {contacts.address}\r\n                                </div>\r\n                            </div>\r\n                            <div className='address-wrap_item'>\r\n                                <div className='address-wrap_title'>\r\n                                    {lang==='ru'? 'Бронирование билетов. Информационные вопросы.' : 'Бронирование билетов. Маалымат суроолор.'}:\r\n                                </div>\r\n                                <div className='address-wrap_text'>\r\n                                    {contacts.booking}\r\n                                </div>\r\n                            </div>\r\n                            <div className='address-wrap_item'>\r\n                                <div className='address-wrap_title'>\r\n                                    {lang==='ru'? 'Связь с сотрудниками компании' : 'Кызматкерлери менен байланыш'}:\r\n                                </div>\r\n                                <div className='address-wrap_text'>\r\n                                    {contacts.connection}\r\n                                </div>\r\n                            </div>\r\n                            <div className='address-wrap_item'>\r\n                                <div className='address-wrap_title'>\r\n                                    {lang==='ru'? 'Вопросы по возврату билетов (будние дни с 10 до 18 часов)' : 'Кайра маршруту боюнча суроолор (10 18 саатка чейин иш күндөрү)'}:\r\n                                </div>\r\n                                <div className='address-wrap_text'>\r\n                                    <a href='#'>\r\n                                        {contacts.return1}\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                            <div className='address-wrap_item'>\r\n                                <div className='address-wrap_title'>\r\n                                    {lang==='ru'? 'Общие вопросы (будние дни с 10 до 18 часов)' : 'Жалпы суроолор (10 18 саатка чейин иш күндөрү)'}:\r\n                                </div>\r\n                                <div className='address-wrap_text'>\r\n                                    <a href='#'>\r\n                                        {contacts.general}\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                            <div className='address-wrap_item'>\r\n                                <div className='address-wrap_title'>\r\n                                    {lang==='ru'? 'Вопросы сотрудничества и для СМИ' : 'Кызматташуу маселелери жана үчүн СМИ'}:\r\n                                </div>\r\n                                <div className='address-wrap_text'>\r\n                                    <a href='#'>\r\n                                        {contacts.cooperation}\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-xl-12 heading'>\r\n                            <div className='heading-title_wrap no-bg'>\r\n                                <h2>\r\n                                    <span>{lang==='ru'? 'Руководство отделений' : 'Иш кагаздарын жүргүзүү'}:</span>\r\n                                </h2>\r\n                            </div>\r\n                            <div className='heading-title_line no-bg_line' />\r\n                        </div>{/* \\-heading*/}\r\n                    </div>{/* \\-row */}\r\n                    <div className='row'>\r\n                        <div className='col-12'>\r\n                            {personals.map((element) => {\r\n                                return (\r\n                                    <>\r\n                                    <p><b>{lang==='ru'? element.whoRu : element.whoKg}</b></p>\r\n                                    <p><a href={'mailto:'+element.contact}>{element.contact}</a></p>\r\n                                    </>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-xl-12 heading'>\r\n                            <div className='heading-title_wrap no-bg'>\r\n                                <h2>\r\n                                    <span>{lang==='ru'? 'Группы в соц. сетях.' : 'Топтор в соц. сетях.'}</span>\r\n                                </h2>\r\n                            </div>\r\n                            <div className='heading-title_line no-bg_line' />\r\n                        </div>{/* \\-heading*/}\r\n                    </div>{/* \\-row */}\r\n                    <div className='row'>\r\n                        <div className='col-12 social-wrap'>\r\n                            {socials.map((element) => {\r\n                                return(\r\n                                    <div className='social-wrap_item'>\r\n                                        <a className='social-wrap_link' href={element.url}>\r\n                                            <div className='social-wrap_icon'>\r\n                                                <img src = {element.image}/>\r\n                                            </div>\r\n                                        </a>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n            </YMaps>\r\n            </>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        appActions: bindActionCreators(appActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n"],"sourceRoot":""}