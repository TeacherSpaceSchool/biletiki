{"version":3,"sources":["page/Hall.js"],"names":["Halls","React","memo","props","lang","app","_useState","useState","coords","_useState2","Object","C_projects_biletiki_biletiki_client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","hall","setHall","_useState3","_useState4","size","setSize","useEffect","C_projects_biletiki_biletiki_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_projects_biletiki_biletiki_client_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","data","wrap","_context","prev","next","getOther","name","location","pathname","split","undefined","sent","_id","mainWindow","current","offsetWidth","history","push","window","reload","stop","this","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","Fragment","react_meta_tags__WEBPACK_IMPORTED_MODULE_9___default","nameRu","nameKg","property","content","react_yandex_maps__WEBPACK_IMPORTED_MODULE_8__","className","src","imageThumbnail","onLoad","e","target","includes","image","address","height","width","defaultState","center","zoom","connect","state","dispatch","appActions","bindActionCreators"],"mappings":"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","file":"static/js/10.42626edd.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { getOther } from '../redux/actions/app'\r\nimport { connect } from 'react-redux'\r\nimport * as appActions from '../redux/actions/app'\r\nimport { bindActionCreators } from 'redux'\r\nimport { mainWindow } from '../App';\r\nimport { Map, YMaps } from 'react-yandex-maps';\r\nimport MetaTags from 'react-meta-tags';\r\n\r\nconst Halls =  React.memo(\r\n    (props) =>{\r\n        const { lang } = props.app;\r\n        let [hall, setHall] = useState({coords: ''});\r\n        let [size, setSize] = useState(600);\r\n        useEffect(async ()=>{\r\n            let data = await getOther({name: 'ПлощадкаПоИмени', data: {name: props.location.pathname.split('/')[2]}})\r\n            if(data._id!=undefined){\r\n                await setHall(data)\r\n                setSize(mainWindow.current.offsetWidth>1000? [1000, 300]: [mainWindow.current.offsetWidth, 300])\r\n            } else {\r\n                props.history.push('/');\r\n                window.location.reload();\r\n            }\r\n        },[]);\r\n        return (\r\n            <>\r\n            <MetaTags>\r\n                <title>{lang==='ru'? hall.nameRu : hall.nameKg}</title>\r\n                <meta property=\"og:title\" content={lang==='ru'? hall.nameRu : hall.nameKg} />\r\n            </MetaTags>\r\n            <YMaps>\r\n            <main className='main main-halls'>\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <div className='col-12 heading'>\r\n                            <div className='heading-title_wrap heading-title_wrap-halls'>\r\n                                <h2>\r\n                                    <span>{lang==='ru'? 'Место' : 'Орун'}</span>\r\n                                </h2>\r\n                            </div>\r\n                            <div className='heading-title_line' />\r\n                        </div>{/* \\-heading*/}\r\n                    </div>{/* \\-row */}\r\n                    <div className='row'>\r\n                        <div className='col-12'>\r\n                                    <div className='hall'>\r\n                                        <img className='hall_image' src={hall.imageThumbnail} onLoad={(e)=>{if(e.target.src.includes('thumbnail')){e.target.src=hall.image}}}/>\r\n                                        <div className='hall_title'>{lang==='ru'? hall.nameRu : hall.nameKg}</div>\r\n                                        <div className='hall_address-text'>{lang==='ru'? 'Адрес' : 'Дарек'}</div>\r\n                                        <div className='hall_address'>{hall.address}</div>\r\n                                        <div className='hall_map'>\r\n                                            <Map height={size[1]} width={size[0]} defaultState={{ center: hall.coords.split(', '), zoom: 16 }} />\r\n                                        </div>\r\n                                        <hr />\r\n                                    </div>\r\n                         </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n            </YMaps>\r\n            </>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        appActions: bindActionCreators(appActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Halls);\r\n"],"sourceRoot":""}