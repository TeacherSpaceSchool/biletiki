{"version":3,"sources":["page/Profile.js"],"names":["Profile","React","memo","props","lang","app","user","authenticated","history","push","_useState","useState","_useState2","Object","C_projects_biletiki_biletiki_client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","pass","setPass","_useState3","_useState4","name","setName","_useState5","_useState6","surname","setSurname","_useState7","_useState8","email","setEmail","_useState9","_useState10","phone","setPhone","document","title","setProfile","_ref","C_projects_biletiki_biletiki_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_projects_biletiki_biletiki_client_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","data","wrap","_context","prev","next","length","getSecure","phonenumber","password","sent","window","location","reload","alert","stop","this","apply","arguments","useEffect","_callee2","_context2","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","Fragment","className","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","to","value","onChange","event","target","type","placeholder","htmlFor","onClick","scrollToTop","href","download","defaultValue","connect","state","dispatch","appActions","bindActionCreators"],"mappings":"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","file":"static/js/11.a117dfa9.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { connect } from 'react-redux'\r\nimport * as appActions from '../redux/actions/app'\r\nimport { bindActionCreators } from 'redux'\r\nimport { getSecure } from '../redux/actions/app'\r\nimport { Link } from 'react-router-dom'\r\nimport { scrollToTop } from '../App'\r\n\r\nconst Profile = React.memo(\r\n    (props) =>{\r\n        const { lang } = props.app;\r\n        const { authenticated } = props.user;\r\n        if(!authenticated) props.history.push('/');\r\n        let [pass, setPass] = useState('');\r\n        let handlePass =  (event) => {\r\n            setPass(event.target.value)\r\n        };\r\n        let [name, setName] = useState('');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [surname, setSurname] = useState('');\r\n        let handleSurname =  (event) => {\r\n            setSurname(event.target.value)\r\n        };\r\n        let [email, setEmail] = useState('');\r\n        let handleEmail =  (event) => {\r\n            setEmail(event.target.value)\r\n        };\r\n        let [phone, setPhone] = useState('');\r\n        let handlePhone =  (event) => {\r\n            setPhone(event.target.value)\r\n        };\r\n        document.title = 'Профиль'\r\n        let setProfile = async () => {\r\n            if(email.length>0&&name.length>0&&surname.length>0&&phone.length>0){\r\n                let data = await getSecure({name: 'ИзменитьПрофиль', data: {email: email, name: name, surname: surname, phonenumber: phone, password: pass}})\r\n                await setEmail(data.email)\r\n                await setSurname(data.surname)\r\n                await setName(data.name)\r\n                await setPhone(data.phonenumber)\r\n                await setPass('')\r\n                await window.location.reload();\r\n            } else alert( 'Заполните все поля!!!' );\r\n        };\r\n        useEffect(()=>{(async ()=>{\r\n            let data = await getSecure({name: 'Профиль'})\r\n            setEmail(data.email)\r\n            setSurname(data.surname)\r\n            setName(data.name)\r\n            setPhone(data.phonenumber)\r\n        })()},[]);\r\n        return (\r\n            <>\r\n            <div className='main-buy page-profile'>\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <div className='col-12 page-menu-wrap'>\r\n                            <ul className='nav page-menu'>\r\n                                <li className='active'><a>{lang==='ru'? 'Профиль' : 'Профиль'}</a></li>\r\n                                <li><Link to='/historyevent'><a>{lang==='ru'? 'Заказы мероприятия' : 'Буйруктар ченөө'}</a></Link></li>\r\n                                <li><Link to='/historycinema'><a>{lang==='ru'? 'Заказы кино' : 'Буйруктар кино'}</a></Link></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-12 col-md-5'>\r\n                            <fieldset className='fields-change-pass'>\r\n                                <legend>{lang==='ru'? 'Изменение пароля' : 'Пароль өзгөртүү'}</legend>\r\n                                <div className='form-group'>\r\n                                    <input value={pass} onChange={handlePass} className='form-control' type='text' placeholder={lang==='ru'? 'Новый пароль' : 'Пароль жаңы'} />\r\n                                </div>\r\n                            </fieldset>\r\n                            <fieldset className='fields-contacts'>\r\n                                <legend>{lang==='ru'? 'Контактные данные' : 'Байланыш маалыматтары'}</legend>\r\n                                <div className='form-group'>\r\n                                    <input value={name} onChange={handleName} className='form-control' type='text' placeholder={lang==='ru'? 'Имя' : 'Ысым'} />\r\n                                </div>\r\n                                <div className='form-group'>\r\n                                    <input value={surname} onChange={handleSurname} className='form-control' type='text' placeholder={lang==='ru'? 'Фамилия' : 'Фамилия'} />\r\n                                </div>\r\n                                <div className='form-group'>\r\n                                    <input value={email} onChange={handleEmail} className='form-control' type='text' placeholder='Email' />\r\n                                </div>\r\n                                <label htmlFor='flat-checkbox-1' className='icheck'>\r\n                                    Формат: +996559988477\r\n                                </label>\r\n                                <div className='form-group'>\r\n                                    <input value={phone} onChange={handlePhone} className='form-control' type='text' placeholder={lang==='ru'? 'Номер телефона' : 'Телефон номуру'} />\r\n                                </div>\r\n                                  </fieldset>\r\n                            <fieldset className='fields-agreement'>\r\n                                <legend>{lang==='ru'? 'Условия договора' : 'Келишимдин шарттары'}</legend>\r\n                                <div className='checkbox icheck form-group'>\r\n                                    <label htmlFor='flat-checkbox-1' className='icheck'>\r\n                                        {lang==='ru'? <p>В случае заполнения регистрационных данных и подтверждения оплаты Вы автоматически соглашаетесь с <Link to='/offer' onClick={()=>{scrollToTop()}}>условиями договора оферты.</Link></p> : <p>Сиздин төлөм маалыматты толтуруу учурунда, ошондой эле тастыктоо, сиз дароо эле <a href='http://kassir.kg/document/публ_оферта.docx' download> сунуш келишимдин шарттарына макул.</a></p>}\r\n                                    </label>\r\n                                </div>\r\n                            </fieldset>\r\n                            <div className='form-group field-button'>\r\n                                <input className='btn btn-primary' type='submit' defaultValue={lang==='ru'? 'Сохранить изменения' : 'Сактоо өзгөртүүлөрдү'} onClick={()=>{setProfile()}} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    })\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app,\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        appActions: bindActionCreators(appActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n"],"sourceRoot":""}